var __index = {"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"What is DERO","text":"<p>DERO\u00a0is a general purpose, private, and scalable decentralized application platform that allows developers to deploy powerful and unstoppable applications, while users retain total control over their assets with complete privacy.</p> <p>The DERO Project has created a platform for developers to deploy secure, open, scalable, and privacy-preserving decentralized applications. DERO is unique because we value security and privacy above all else; as a result, users are able to transact privately over our network without fear of common protocol-level and network attacks. Additionally, our technology preserves transparency where required and scales with network load, which provides an ideal environment for business-class applications.</p> <ul> <li>Mining Algorithm:AstroBWT</li> <li>Max supply:21 Million</li> <li>Atomic Units:5</li> <li>Block reward:Halving every 4 years</li> <li>Difficulty:Retargets at every block</li> <li>Ticker:DERO</li> </ul> <p></p>"},{"location":"index.html#the-dero-mission","title":"The DERO Mission","text":"<p>DERO is a new blockchain technology written in Golang with a focus on enhanced Privacy and Smart Contracts while maintaining the transparency and security of the blockchain. The goal is to create a unique state of the art blockchain technology with enhanced Reliability, Privacy, Security, Usability, and Portability by bringing together some of the best proven technologies. These technologies will include Homomorphic Encryption, Services and Smart Contracts which will allow for the creation and execution of Decentralized Applications on a Secure Private Blockchain.</p>"},{"location":"index.html#dero-foundation","title":"DERO Foundation","text":"<p>The DERO Foundation aims to provide support for the advancement of the DERO Platform and supporting the DERO Community to integrate Decentralized Privacy Systems and Standards within the Blockchain Ecosystem. This will help with the creation and deployment of Private Decentralized Applications, Payment Systems, Services and Tools.</p>"},{"location":"index.html#homomorphic-encryption-blockchain","title":"Homomorphic Encryption Blockchain","text":"<p>Account balances and data are never decrypted by the blockchain. Only account owners can decrypt and access their data. Welcome to a new data privacy paradigm.</p>"},{"location":"index.html#created-from-scratch","title":"Created from Scratch","text":"<p>DERO has been developed from scratch in Golang and is being actively developed by the original developers. It is not a fork of any other coin.</p>"},{"location":"index.html#secure-and-private-smart-contracts","title":"Secure and Private Smart Contracts","text":"<p>DERO is a homomorphically encrypted protocol that can serve individuals and business worldwide, with fast and anonymous transactions, smart contract and service model.</p>"},{"location":"index.html#features","title":"Features","text":"<ul> <li>Homomorphic Encryption Blockchain Protocol</li> <li>Private Smart Contract Platform &amp; Services</li> <li>No Trusted Setups or Hidden Parameters</li> <li>Fast Transaction Confirmations (~18 sec.)</li> <li>Instant Wallet Syncing</li> <li>Fully Scalable Blockchain</li> <li>Turing Complete DVM</li> <li>Decentralized Proof-of-Work Mining</li> </ul>"},{"location":"index.html#dhebp","title":"DHEBP","text":"<p>DERO Homomorphic Encryption Blockchain Protocol (DHEBP) combines homomorphic encryption and an account based model to provide instant transactions as well as security and privacy.</p> <p>DERO \u03a3 (Sigma) mining and \u03a3 blocks create utilize a network wide consensus for mining as well as rewarding all miners for effort vs a winner take all block reward system. All Transactions are settled in the same block in which they occur, allowing for instant full confirmation.</p> <p>DERO wallets can only have one open spending transaction at a time to one or many addresses this prevents any sending account from double spending. These transactions are settled on the same block they are sent so subsequent transactions can be made immediately.</p>"},{"location":"index.html#account-based-encrypted-blockchain","title":"Account based Encrypted Blockchain","text":"<p>True privacy on chain.</p> <p>While a typical blockchain stores all information on chain in clear text and use a UTXO model, DERO uses a unique encrypted blockchain with an account based model.</p> <p>Not only does this create a secure and private network, it also gives users the ability to check their balance without syncing the entire chain. Wallets only need to query the most recent block in order to obtain their balance information all while being homomorphically encrypted.</p> <p>Homomorphic Encryption is a type of encryption that allows operations to be performed on encrypted data without decrypting it first. In essence, operations can be performed without revealing the underlying data.</p> <p>This account based encrypted blockchain model not only provides superior privacy and security but it also allows for instant transactions, transactions settlement and balance information.</p> <p>Below is a comparison of DHEBP and a conventional blockchain.</p> <p></p>"},{"location":"index.html#tls-securedsecured-udp-p2p-network","title":"TLS-SECUREDSecured UDP P2P Network","text":"<p>The DERO Project has built a blockchain network that can be used by millions of users around the globe. This makes the security of the network highly important. Unencrypted network communication posses a risk for privacy, security and data integrity. DERO is the first blockchain project to use self signed TLS encryption for its network communication, which protects the network participants from eavesdropping and tampering of network data.</p> <p>DERO also utilizes UDP for peer to peer communication instead of TCP. This allows node software to run and listen to network events while reducing exposure to the operating system's kernel and also lowers network overhead.</p> <p>The DERO team also keeps future large scale applications in mind, e.g. enterprise services which handle thousands of clients per second. They are continuously improving the network in order to accomplish this goal. For example, with the encrypted network, after performing benchmarks they chose ECDSA instead of RSA as method for key generation as it allows for a higher number of handshakes per second.</p> <p>Comparison below of network data captured from wallet traffic</p> <p></p>"},{"location":"index.html#the-dero-journey","title":"The DERO Journey","text":""},{"location":"index.html#2017","title":"2017","text":"<ul> <li>The project was launched in December 2017 comprising a team of three full-time Developers. The core team members each have over a decade of experience in cryptography and multiple years of experience in blockchain development.</li> </ul>"},{"location":"index.html#2018","title":"2018","text":"<ul> <li> <p>In April 2018, the DERO network migrated to the Golang code base without a single second of downtime. The migration of the code base coincided with a number of sophisticated attacks on CryptoNote based coins. DERO core team studied how the attacks were implemented and designed a new type of blockchain that is resistant to 51% hashrate attacks and softforks.</p> </li> <li> <p>The DERO project unveiled this new blockchain technology in June 2018, codenamed \"Atlantis\". It combines the Cryptonote protocol with directed acyclic graph and Bulletproofs. However, these are not just any Bulletproofs, but what have been coined Rocket Bulletproofs, leading to blocktimes of just a few seconds. In a controlled environment, the Atlantis network can achieve blocktimes as low as three seconds processing a thousand transactions per second. A world wide testnet was launched with a nine-second blocktime which allowed for extensive tests of the new technology.</p> </li> <li> <p>July 2018 saw the successful and flawless migration of the DERO network to the new Atlantis codebase with a twelve-second block time and two minute confirmation time. This is by far the fastest CryptoNote based blockchain ever deployed, with 75 transactions per second (Now 750TPS with DHEBP). A relatively longer twelve second block time was chosen so that people in locations with sub-optimal network connectivity could still participate in the network. The Dero team plans to reduce the blocktime further in coming years, as network infrastructure improves around the world.</p> </li> <li> <p>With a ground-breaking new technology established by August 2018, just eight months after conception, the DERO team initiated applications for listings on major exchanges. A bold new marketing initiative is in the process of being established, with a primary focus on professional and business users and developers. An advisory team drawn from and representing the wider DERO community has been formed, and a new DERO Foundation that will support the aims of the DERO Project is in the process of being formed.</p> </li> </ul>"},{"location":"index.html#2019","title":"2019","text":"<ul> <li>Stargate Release 1 successfully went to testnet with functioning smart contracts on cryptonote. The developers realized that even though cryptonote was private by nature there was still room for improvement. The devs switched their focus to Fully Homomorphic Encryption which allows operations to be performed on an encrypted data set. This technology has often been referred to as the Holy Grail in cryptocurrency and was not a small task to take on but the project pivoted despite this.</li> </ul>"},{"location":"index.html#2020","title":"2020","text":"<ul> <li> <p>AstroBWT is an ASIC/FPGA/GPU resistant CPU mining algorithm that is based on mathematical proofs, unlike many other CPU mining algorithms. AstroBWT is an egalitarian algorith that can run on CPU/GPU/FPGAs and ASICs, however there is little to no economic advantage using specualized hardware. So far, many ARM CPUs prove to have a better hash to watt ratio than even the highest end GPUs. Mining on mobile devices is not only possible but also fairly common.</p> </li> <li> <p>The DERO Homomorphic Encryption Blockchain Protocol (DHEBP) is a new revolutionary protocol for scalable confidential transactions and private smart contracts execution. DHEBP employs an account based structure that removes the requirement for blockchain scanning, which allow wallets to provide instant balances to users.</p> </li> <li> <p>Graviton: ZFS for Key-Value Stores - Graviton is an open source, simple, fast, versioned, authenticated and embeddable key-value store database written in Golang.</p> </li> <li> <p>The DERO team announce the release of a unique homomorphic encryption scheme (DERO-HE) and the complete blockchain protocol (DHEBP) for public testing. DERO will migrate from the existing CryptoNote protocol to its own DERO Homomorphic Encryption Blockchain Protocol (DHEBP).</p> </li> </ul>"},{"location":"index.html#2021","title":"2021","text":"<ul> <li>The DERO team announce to bring our long anticipated Stargate RC2 release to the public for testing. Stargate is a general purpose, private, and scalable decentralized application platform that allows developers to deploy powerful and unstoppable applications, while users retain total control over their assets with complete privacy. The technology behind Stargate has evolved over the last few years to challenge many of the issues that are preventing the crypto space from attracting widespread adoption. Preserving user privacy and ensuring a scalable network were the inspiration for this release, since the platform was already developed for speed.</li> </ul>"},{"location":"index.html#2022","title":"2022","text":"<ul> <li>Stargate RC2 Released to mainnet.</li> </ul>"},{"location":"index.html#dero-network-specifications","title":"DERO Network Specifications","text":"<ul> <li>18 Second Blocktime</li> <li>Same block/instant confirmation</li> <li>No Soft Forks/Chain Splits</li> <li>SSL/TLS UDP P2P Network</li> <li>A Layer 1 Private Decentralized Application Platform</li> <li>Fully Auditable Supply</li> <li>Fully Encrypted Blockchain</li> <li>No Orphan Blocks</li> <li>Homomorphic Encryption Protocol</li> <li>Native dApp Support</li> <li>Written from Scratch in Golang</li> <li>1.25 MB Block Size</li> </ul>"},{"location":"index.html#dero-mining","title":"DERO Mining","text":"<p>Mining DERO has been completely reworked to vastly decentralize mining rewards with the introduction of \u03a3-blocks (Sigma blocks), which are simply smaller blocks that are constantly emitted every 1 second and converge into the final 18 second block. Even more plainly, the \u03a3-Blocks allow on-chain storage of mining data, which effectively turns DERO into one large mining pool. Every miner on the entire network will receive mining rewards based on the amount of work that was contributed, thus creating a truly decentralized network and distribution of rewards. It also greatly improves handling of massive network traffic, where each daemon can support over 10,000 connected devices, acting as a way to pool all of your devices.</p> <p>The current configuration of \u03a3 Mining is that all \u03a3-blocks settle every main block (~18 seconds) and settles all mining rewards every 18 blocks. There are ~86,400 reward blocks daily</p> <p>If a miner has 1/86400 (total daily emitted \u03a3-Blocks) of the total network hashrate, the miner will get probabilistically averaged rewards daily based on shares contributed. For example, 100K miners will get rewards daily. Similarly, if a miner has mining power amounting to half of 1/86400 (or 1/172800), the miner will get rewards every 2 days.</p> <p>For a list of hardware benchmakrs please visit our community created benchmark website\u00a0here</p> <p>In addition, each daemon essentially functions as it's own mining pool, which tracks mining shares from devices connected to it. The daemon itself will retain a fixed fee of 1.6% for the daemon operator, the rest will be distributed to all miners that contributed shares to that daemon. For most miners, they will be mining using their own daemon, so all rewards and fees will be credited.</p> <p>We encourage everyone to mine and run their own node!</p>"},{"location":"index.html#dero-milestones","title":"DERO Milestones","text":"<ul> <li>December 2017 - Launch of DERO Project</li> <li>March 2018 - Implementation of the CryptoNote Protocol in Golang completed</li> <li>April 2018 - DERO mainnet migrates to the Golang implementation</li> <li>June 2018 - DERO Atlantis development completed and testnet launched</li> <li>July 2018 - Mainnet migrates to Atlantis code base with 12 secs block time and Rocket Bulletproofs</li> <li>October 2018 - Completely in browser web wallet completed with client side key storage</li> <li>January 2019 - DERO Stargate RC1 testnet released, providing fully functional smart contracts on cryptonote.</li> <li>March 2020 - DERO releases and migrates to AstroBWT an egalitarian PoW algorithm that makes CPU mining economically effcient.</li> <li>August 2020 - DHEBP - DERO Homomorphic Encryption Blockchain Protocol</li> <li>Sept 2020 - Graviton: ZFS for Key-Value Stores</li> <li>February 2021 - Stargate RC2 using DHEBP on Testnet</li> <li>February 2022 - Stargate RC2 with Private Smart Contracts and Services launched on mainnet.</li> <li>Future Development - DERO developers continue research and development, including quantum resistance</li> </ul>"},{"location":"index.html#downloads","title":"Downloads","text":"<p>We have builds for Windows, Linux and Mac</p> <ul> <li>Windows</li> <li>Linux</li> <li>Mac</li> <li>Github</li> </ul>"},{"location":"index.html#wallets","title":"Wallets","text":"<p>Below are download links for all platforms and also links to source code if you wish to compile on your own. There are two types of wallets available for download including the official CLI wallet (command line) and the DERO Foundation's GUI wallet (named NODE). The browser wallet is also available as a cross platform solution but may not always work with your setup.</p> <p>There are no official mobile wallets at this time.</p> <p>Use 3rd party mobile wallets at your own risk.</p> <p>Always use official DERO or DERO Foundation approved wallets</p> <ul> <li>Windows<ul> <li>Command Line Interface (CLI) Wallet</li> <li>Engram (GUI) Wallet</li> </ul> </li> <li>Linux<ul> <li>Command Line Interface (CLI) Wallet - CLI Wallet - 64-bit</li> <li>Command Line Interface (CLI) Wallet - CLI Wallet - ARM 7</li> <li>Command Line Interface (CLI) Wallet - CLI Wallet - ARM 64</li> <li>Engram (GUI) Wallet</li> </ul> </li> <li>MacOS<ul> <li>Command Line Interface (CLI) Wallet</li> <li>Engram (GUI) Wallet</li> </ul> </li> <li>FreeBSD<ul> <li>Command Line Interface (CLI) Wallet</li> </ul> </li> </ul>"},{"location":"index.html#source-code","title":"Source Code","text":"<p>If you wish to compile DERO yourself, checkout github and our git.dero.io.</p> <ul> <li>Zip File</li> <li>TAR File</li> </ul>"},{"location":"index.html#connect-with-dero","title":"Connect with DERO","text":"<p>Reach out to us on any of the following platforms</p> <ul> <li>Discord</li> <li>Matrix</li> <li>Twitter</li> <li>Reddit</li> <li>DERO Forum</li> <li>Mailing List</li> <li>Medium</li> </ul>"},{"location":"developer/DHEBP.html","title":"DHEBP (DERO Homomorphic Encryption Blockchain Protocol)","text":""},{"location":"developer/DHEBP.html#dhebp-alpha-code-to-demonstrate-fhe-blockchain-transactions","title":"DHEBP alpha code to demonstrate FHE blockchain transactions.","text":""},{"location":"developer/DHEBP.html#transaction-details","title":"Transaction Details","text":"<p>Each transaction consists of 2 parts:</p> <ol> <li>Statement which contains ring members keys, commitments, encrypted balances ( this grows linear ) basicaly 4 curve points per ring member.</li> <li>Proof which grows log in ring members for Eg : 8 ring size proof is only 1997 bytes 512 ring size proof is only 3965 bytes</li> </ol>"},{"location":"developer/DHEBP.html#ring-size-tx-size-data","title":"Ring Size, Tx Size data","text":"<pre><code>    Ring size, tx size (fixed) in bytes irrespective of balance\n    2      1669 bytes   (    328 byte statement, 1341 bytes proof )\n    4      2261 bytes   (    592 byte statement, 1669 bytes proof )\n    8      3117 bytes   (   1120 byte statement, 1997 bytes proof )\n    16     4501 bytes   (   2176 byte statement, 2325 bytes proof )\n    32     6941 bytes   (   4288 byte statement, 2653 bytes proof )\n    64    11493 bytes   (   8512 byte statement, 2981 bytes proof )\n    128   20269 bytes   (  16960 byte statement, 3309 bytes proof )\n    256   37493 bytes   (  33856 byte statement, 3637 bytes proof )\n    512   71613 bytes   (  67648 byte statement, 3965 bytes proof )\n\n</code></pre>"},{"location":"developer/DHEBP.html#build","title":"Build","text":"<ol> <li>Switch to directory containing this Readme.md file</li> <li>export GOPATH=pwd</li> <li>go run *.go</li> </ol> <p>Note: Developed and tested on linux go version 1.12.7</p>"},{"location":"developer/DHEBP.html#output-sample","title":"Output Sample","text":"<pre><code>    Creating Transaction\n    I0706 16:05:28.258801   93136 main.go:101] Transferring 10 from sender to receiver (ring size 8) tx size 3117 bytes\n    I0706 16:05:28.258810   93136 main.go:102] Total tx size 3117 bytes   (  1120 byte statement, 1997 bytes proof )\n    I0706 16:05:28.341387   93136 main.go:107] Transfer successful\n    I0706 16:05:28.343528   93136 main.go:116]       Sender Balance        150 -        10 =       140\n    I0706 16:05:28.343533   93136 main.go:117]     Receiver Balance          0 +        10 =        10\n    I0706 16:05:28.345662   93136 main.go:98]\n\n    Creating Transaction\n    I0706 16:05:28.568605   93136 main.go:101] Transferring 90 from sender to receiver (ring size 16) tx size 4501 bytes\n    I0706 16:05:28.568614   93136 main.go:102] Total tx size 4501 bytes   (  2176 byte statement, 2325 bytes proof )\n    I0706 16:05:28.680647   93136 main.go:107] Transfer successful\n    I0706 16:05:28.682788   93136 main.go:116]       Sender Balance        140 -        90 =        50\n    I0706 16:05:28.682792   93136 main.go:117]     Receiver Balance         10 +        90 =       100\n    I0706 16:05:28.682796   93136 main.go:74]\n                            Successful\n</code></pre>"},{"location":"developer/RPC.html","title":"DERO Stargate RPC API","text":""},{"location":"developer/RPC.html#daemon-rpc-api","title":"Daemon RPC API","text":""},{"location":"developer/RPC.html#echo","title":"Echo","text":"<p>Test endpoint to verify that the RPC server is enabled and working well on the daemon side.</p> <p>Available parameters</p> <p></p> <pre><code>{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"method\": \"DERO.Echo\",\n    \"params\": [\"Hello\", \"World\", \"!\"]\n}\n\n</code></pre> <p>cURL Request</p> <pre><code>curl -X POST\\\n    http://127.0.0.1:40402/json_rpc\\\n    -H 'content-type: application/json'\\\n    -d '{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"method\": \"DERO.Echo\",\n    \"params\": [\"Hello\", \"World\", \"!\"]\n}'\n\n</code></pre> <p>Result</p> <pre><code>{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"result\": \"DERO Hello World !\"\n}\n\n</code></pre>"},{"location":"developer/RPC.html#ping","title":"Ping","text":"<p>Simple Ping request</p> <p>Available Parameters</p> <p>No Parameters</p> <p>Body</p> <pre><code>{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"method\": \"DERO.Ping\"\n}\n\n</code></pre> <p>cURL Request</p> <pre><code>curl -X POST\\\n  http://127.0.0.1:40402/json_rpc\\\n  -H 'content-type: application/json'\\\n  -d '{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"method\": \"DERO.Ping\"\n}'\n\n</code></pre> <p>Result</p> <pre><code>{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"result\": \"Pong \"\n}\n\n</code></pre>"},{"location":"developer/RPC.html#get-info","title":"Get Info","text":"<p>Returns all infos</p> <p>Available Parameters</p> <p>No Parameters</p> <p>Body</p> <pre><code>{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"method\": \"DERO.GetInfo\"\n}\n\n</code></pre> <p>cURL Request</p> <pre><code>curl -X POST\\\n  http://127.0.0.1:40402/json_rpc\\\n  -H 'content-type: application/json'\\\n  -d '{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"method\": \"DERO.GetInfo\"\n}'\n\n</code></pre> <p>Result</p> <pre><code>{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"result\": {\n        \"alt_blocks_count\": 0,\n        \"difficulty\": 23467,\n        \"grey_peerlist_size\": 0,\n        \"height\": 35995,\n        \"stableheight\": 35987,\n        \"topoheight\": 35995,\n        \"treehash\": \"2C4A2F8954EA978104D9F4A4D170256B2531F62C30E52A11517FB6375A0D5F29\",\n        \"averageblocktime50\": 17.63982,\n        \"incoming_connections_count\": 0,\n        \"outgoing_connections_count\": 0,\n        \"target\": 18,\n        \"target_height\": 0,\n        \"testnet\": true,\n        \"network\": \"\",\n        \"top_block_hash\": \"7ed9939d4c910876ef04312cfefe724d62c18c6b8fb2ab342e9671c511c69b88\",\n        \"tx_count\": 0,\n        \"tx_pool_size\": 0,\n        \"dynamic_fee_per_kb\": 0,\n        \"total_supply\": 0,\n        \"median_block_size\": 0,\n        \"white_peerlist_size\": 0,\n        \"version\": \"3.4.106-0.DEROHE.STARGATE+18012022\",\n        \"status\": \"OK\"\n    }\n}\n\n</code></pre>"},{"location":"developer/RPC.html#get-block","title":"Get Block","text":"<p>Returns all the information of the requested block.</p> <p>Available parameters</p> <p></p> <p>Body</p> <pre><code>{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"method\": \"DERO.GetBlock\",\n    \"params\": {\n        \"height\": 420\n    }\n}\n\n</code></pre> <p>cURL Request</p> <pre><code>curl -X POST\\\n  http://127.0.0.1:40402/json_rpc\\\n  -H 'content-type: application/json'\\\n  -d '{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"method\": \"DERO.GetBlock\",\n    \"params\": {\n        \"height\": 420\n    }\n}'\n\n</code></pre> <p>Result</p> <pre><code>{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"result\": {\n        \"blob\": \"01010000017e9e872cb1a403010000021f9bcc1208dee302769931ad378a4c0c4b2c21b0cfb3e752607e12d2b6fa6425000000000000000000000000000000000000000000000000000000000000000000016a6856b51e9ffd5b07c6c33ca635d984910f3b7fbbaaaebbb61a99780629e4490a41ee3400000001a46a6856b500000000eec07ce3efc1425bc0ad7e8c72d13b0500000000940d24de2854e800a2da520141f38100000001a46a6856b500000000c3443540c243d11f706b6836d516a95500000000d0bd228895e3da00ef774a0441f49600000001a46a6856b500000000eec07ce3efc1425bc0ad7e8c72d13b050000000064bdff4901054101003a190041fdd400000001a46a6856b500000000eec07ce3efc1425bc0ad7e8c72d13b05000000000cf2b45163efe300a2efe6014105a100000001a46a6856b500000000c3443540c243d11f706b6836d516a95500000000e57c84673a12fe00ef9e52044105ca00000001a46a6856b500000000eec07ce3efc1425bc0ad7e8c72d13b0500000000acb0839b3a13a400a2f8010141082a00000001a46a6856b500000000c3443540c243d11f706b6836d516a955000000006d01841f72304000efa43e0441086d00000001a46a6856b500000000c3443540c243d11f706b6836d516a955000000003fd27e20d1ab8800efca2901410d7200000001a46a6856b500000000c3443540c243d11f706b6836d516a955000000000b1fb80d5442e400a29c8e02712cb100000001a46a6856b500000000a063e24bc973c78fd057fec97cacd720000000006bb830fa72959300eff8080400\",\n        \"json\": \"{\\\"major_version\\\":1,\\\"minor_version\\\":1,\\\"timestamp\\\":1643337166001,\\\"height\\\":420,\\\"miner_tx\\\":{\\\"version\\\":1,\\\"source_network\\\":0,\\\"dest_network\\\":0,\\\"txtype\\\":2,\\\"value\\\":0,\\\"miner_address\\\":[31,155,204,18,8,222,227,2,118,153,49,173,55,138,76,12,75,44,33,176,207,179,231,82,96,126,18,210,182,250,100,37,0],\\\"c\\\":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\\\"s\\\":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\\\"height\\\":0,\\\"blid\\\":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\\\"scdata\\\":null,\\\"Payloads\\\":null},\\\"tips\\\":[\\\"6a6856b51e9ffd5b07c6c33ca635d984910f3b7fbbaaaebbb61a99780629e449\\\"],\\\"miniblocks\\\":[{\\\"Version\\\":1,\\\"HighDiff\\\":false,\\\"Final\\\":false,\\\"PastCount\\\":1,\\\"Timestamp\\\":60980,\\\"Height\\\":420,\\\"Past\\\":[1785222837,0],\\\"KeyHash\\\":\\\"eec07ce3efc1425bc0ad7e8c72d13b0500000000000000000000000000000000\\\",\\\"Flags\\\":0,\\\"Nonce\\\":[2483889374,676653056,2732216833]},{\\\"Version\\\":1,\\\"HighDiff\\\":false,\\\"Final\\\":false,\\\"PastCount\\\":1,\\\"Timestamp\\\":62337,\\\"Height\\\":420,\\\"Past\\\":[1785222837,0],\\\"KeyHash\\\":\\\"c3443540c243d11f706b6836d516a95500000000000000000000000000000000\\\",\\\"Flags\\\":0,\\\"Nonce\\\":[3502056072,2514737664,4017572356]},{\\\"Version\\\":1,\\\"HighDiff\\\":false,\\\"Final\\\":false,\\\"PastCount\\\":1,\\\"Timestamp\\\":62614,\\\"Height\\\":420,\\\"Past\\\":[1785222837,0],\\\"KeyHash\\\":\\\"eec07ce3efc1425bc0ad7e8c72d13b0500000000000000000000000000000000\\\",\\\"Flags\\\":0,\\\"Nonce\\\":[1690173257,17121537,3807488]},{\\\"Version\\\":1,\\\"HighDiff\\\":false,\\\"Final\\\":false,\\\"PastCount\\\":1,\\\"Timestamp\\\":64980,\\\"Height\\\":420,\\\"Past\\\":[1785222837,0],\\\"KeyHash\\\":\\\"eec07ce3efc1425bc0ad7e8c72d13b0500000000000000000000000000000000\\\",\\\"Flags\\\":0,\\\"Nonce\\\":[217232465,1676665600,2733630977]},{\\\"Version\\\":1,\\\"HighDiff\\\":false,\\\"Final\\\":false,\\\"PastCount\\\":1,\\\"Timestamp\\\":1441,\\\"Height\\\":420,\\\"Past\\\":[1785222837,0],\\\"KeyHash\\\":\\\"c3443540c243d11f706b6836d516a95500000000000000000000000000000000\\\",\\\"Flags\\\":0,\\\"Nonce\\\":[3850142823,974323200,4020130308]},{\\\"Version\\\":1,\\\"HighDiff\\\":false,\\\"Final\\\":false,\\\"PastCount\\\":1,\\\"Timestamp\\\":1482,\\\"Height\\\":420,\\\"Past\\\":[1785222837,0],\\\"KeyHash\\\":\\\"eec07ce3efc1425bc0ad7e8c72d13b0500000000000000000000000000000000\\\",\\\"Flags\\\":0,\\\"Nonce\\\":[2897249179,974365696,2734162177]},{\\\"Version\\\":1,\\\"HighDiff\\\":false,\\\"Final\\\":false,\\\"PastCount\\\":1,\\\"Timestamp\\\":2090,\\\"Height\\\":420,\\\"Past\\\":[1785222837,0],\\\"KeyHash\\\":\\\"c3443540c243d11f706b6836d516a95500000000000000000000000000000000\\\",\\\"Flags\\\":0,\\\"Nonce\\\":[1828815903,1915764736,4020518404]},{\\\"Version\\\":1,\\\"HighDiff\\\":false,\\\"Final\\\":false,\\\"PastCount\\\":1,\\\"Timestamp\\\":2157,\\\"Height\\\":420,\\\"Past\\\":[1785222837,0],\\\"KeyHash\\\":\\\"c3443540c243d11f706b6836d516a95500000000000000000000000000000000\\\",\\\"Flags\\\":0,\\\"Nonce\\\":[1070759456,3517679616,4023003393]},{\\\"Version\\\":1,\\\"HighDiff\\\":false,\\\"Final\\\":false,\\\"PastCount\\\":1,\\\"Timestamp\\\":3442,\\\"Height\\\":420,\\\"Past\\\":[1785222837,0],\\\"KeyHash\\\":\\\"c3443540c243d11f706b6836d516a95500000000000000000000000000000000\\\",\\\"Flags\\\":0,\\\"Nonce\\\":[186628109,1413669888,2728168962]},{\\\"Version\\\":1,\\\"HighDiff\\\":true,\\\"Final\\\":true,\\\"PastCount\\\":1,\\\"Timestamp\\\":11441,\\\"Height\\\":420,\\\"Past\\\":[1785222837,0],\\\"KeyHash\\\":\\\"a063e24bc973c78fd057fec97cacd72000000000000000000000000000000000\\\",\\\"Flags\\\":0,\\\"Nonce\\\":[1807233274,1922405120,4026009604]}],\\\"tx_hashes\\\":null}\",\n        \"block_header\": {\n            \"depth\": 35589,\n            \"difficulty\": \"15743\",\n            \"hash\": \"60e7e9f73a4a0f2c1b4a97976150ef6f53f0253f8552c6b2e7e4a010929d8259\",\n            \"height\": 420,\n            \"topoheight\": 420,\n            \"major_version\": 1,\n            \"minor_version\": 1,\n            \"nonce\": 0,\n            \"orphan_status\": false,\n            \"syncblock\": true,\n            \"sideblock\": false,\n            \"txcount\": 0,\n            \"reward\": 0,\n            \"tips\": [\n                \"6a6856b51e9ffd5b07c6c33ca635d984910f3b7fbbaaaebbb61a99780629e449\"\n            ],\n            \"timestamp\": 1643337166001\n        },\n        \"status\": \"OK\"\n    }\n}\n\n</code></pre>"},{"location":"developer/RPC.html#get-block-header-by-topo-height","title":"Get Block Header By Topo Height","text":"<p>Returns the header of the requested block.</p> <p>Available parameters</p> <p></p> <p>Body</p> <pre><code>{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"method\": \"DERO.GetBlockHeaderByTopoHeight\",\n    \"params\": {\n        \"topoheight\": 420\n    }\n}\n\n</code></pre> <p>cURL Request</p> <pre><code>curl -X POST\\\n  http://127.0.0.1:40402/json_rpc\\\n  -H 'content-type: application/json'\\\n  -d '{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"method\": \"DERO.GetBlockHeaderByTopoHeight\",\n    \"params\": {\n        \"topoheight\": 420\n    }\n}'\n\n</code></pre> <p>Result</p> <pre><code>{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"result\": {\n        \"block_header\": {\n            \"depth\": 35605,\n            \"difficulty\": \"15743\",\n            \"hash\": \"60e7e9f73a4a0f2c1b4a97976150ef6f53f0253f8552c6b2e7e4a010929d8259\",\n            \"height\": 420,\n            \"topoheight\": 420,\n            \"major_version\": 1,\n            \"minor_version\": 1,\n            \"nonce\": 0,\n            \"orphan_status\": false,\n            \"syncblock\": true,\n            \"sideblock\": false,\n            \"txcount\": 0,\n            \"reward\": 0,\n            \"tips\": [\n                \"6a6856b51e9ffd5b07c6c33ca635d984910f3b7fbbaaaebbb61a99780629e449\"\n            ],\n            \"timestamp\": 1643337166001\n        },\n        \"status\": \"OK\"\n    }\n}\n\n</code></pre>"},{"location":"developer/RPC.html#get-block-header-by-hash","title":"Get Block Header By Hash","text":"<p>Returns the header of the requested block.</p> <p>Available parameters</p> <p></p> <p>Body</p> <pre><code>{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"method\": \"DERO.GetBlockHeaderByHash\",\n    \"params\": {\n        \"hash\": \"6a6856b51e9ffd5b07c6c33ca635d984910f3b7fbbaaaebbb61a99780629e449\"\n    }\n}\n\n</code></pre> <p>cURL Request</p> <pre><code>curl -X POST\\\n  http://127.0.0.1:40402/json_rpc\\\n  -H 'content-type: application/json'\\\n  -d '{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"method\": \"DERO.GetBlockHeaderByHash\",\n    \"params\": {\n        \"hash\": \"6a6856b51e9ffd5b07c6c33ca635d984910f3b7fbbaaaebbb61a99780629e449\"\n    }\n}'\n\n</code></pre> <p>Result</p> <pre><code>{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"result\": {\n        \"block_header\": {\n            \"depth\": 35615,\n            \"difficulty\": \"15528\",\n            \"hash\": \"6a6856b51e9ffd5b07c6c33ca635d984910f3b7fbbaaaebbb61a99780629e449\",\n            \"height\": 419,\n            \"topoheight\": 419,\n            \"major_version\": 1,\n            \"minor_version\": 1,\n            \"nonce\": 0,\n            \"orphan_status\": false,\n            \"syncblock\": true,\n            \"sideblock\": false,\n            \"txcount\": 0,\n            \"reward\": 0,\n            \"tips\": [\n                \"886ffd7ca424f8c1ea3cd4f361c0e3fe865205fc669cf2c5f5bfe692e022e177\"\n            ],\n            \"timestamp\": 1643337148002\n        },\n        \"status\": \"OK\"\n    }\n}\n\n</code></pre>"},{"location":"developer/RPC.html#get-tx-pool","title":"Get Tx Pool","text":"<p>Returns the list of pending transactions (not included in a block).</p> <p>Available parameters</p> <p>No parameters</p> <p>Body</p> <pre><code>{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"method\": \"DERO.GetTxPool\"\n}\n\n</code></pre> <p>cURL Request</p> <pre><code>curl -X POST\\\n  http://127.0.0.1:40402/json_rpc\\\n  -H 'content-type: application/json'\\\n  -d '{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"method\": \"DERO.GetTxPool\"\n}'\n\n</code></pre> <p>Result</p> <pre><code>{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"result\": {\n        \"txs\": [\n            \"1b527cc1c2c58f59d339873a9a31873507e79b5877afb2e9c9f480ba5360257e\",\n            \"337db1b7a0da82fe7d800b2b5f7790913a8dfdcc2d331579f14b935934be53df\",\n            \"3f7aca6ede435296902e362a73ec2f801f6f24f1cf93c69ffe607b7e5a82d8c4\",\n            \"25ad0a277174063d786c40752ad740514a1f16266932a6650d0f267a164e077c\",\n            \"c8d2b5a8d6cb97d2fa39e797ed795ede0caa1e5413492af2a9efd61638ff9e17\",\n            \"38a43e4f188c7bd5c0ce52376a693e156cab71dc6cf0705f3987169969367388\",\n            \"6f056cae1f2e692ea9e066e3d7703f14484125b2f732b7f31a48481f96299965\",\n            \"0d6e4a43048f23fcf60ba52720ff8cebbd210ebfaab124d8a1147833b7a237fc\",\n            \"3a8df3121e63e41a274d201f08bd7e5b1cbbab0b09c71887fcc05f1d758401bb\",\n            \"8bd83e78bd958c5594039b703a09f72efbfe20367d28eb1e942f2c4f13be0989\"\n        ],\n        \"status\": \"OK\"\n    }\n}\n\n</code></pre>"},{"location":"developer/RPC.html#get-random-address","title":"Get Random Address","text":"<p>Returns a random list of different DERO addresses registered on the blockchain.</p> <p>Available parameters</p> <p></p> <p>Body</p> <pre><code>{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"method\": \"DERO.GetRandomAddress\"\n}\n\n</code></pre> <p>cURL Request</p> <pre><code>curl -X POST\\\n  http://127.0.0.1:40402/json_rpc\\\n  -H 'content-type: application/json'\\\n  -d '{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"method\": \"DERO.GetRandomAddress\"\n}'\n\n</code></pre> <p>Result</p> <pre><code>{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"result\": {\n        \"address\": [\n            \"deto1qyyusphxgu67m7ymvn79z0j5av4xsjf9hdf0dvwr0xgf846ae66muqgnks5sr\",\n            \"deto1qy5tfxzc9sv0wamaacza0uup5330ds6je93wpkn6rgp38z6jjaeqgqqpf524e\",\n            \"deto1qy92f6p3t5nytfsa3er6t8ecvxn53v7yz952xcxgnme5h8jw67ux2qqnrhstn\",\n            \"deto1qyh8622rswt9efyzkm00shq5nq5cxaxpznham5g6ajnlw7tvmupf2qgg3f24k\",\n            \"deto1qyv6sd4s8zrjy8lgp4x8cv4um6wj4x5hn95x85nkdzjdy99qvl062qqyqnc48\",\n            \"deto1qy4mxumzmgxk94x8aumle2wneuns9pwfh0zu4gs4n4j9yasvdnvdvqqmyhc2r\",\n            \"deto1qyczrgwkhzmqjhexwqjf9v7crzz6sg8jyx8g3asx2ntxhfjq6htvvqg8e2uxx\",\n            \"deto1qy06ucenpf397vez8cdxerw3red6uw4l8afj23ezczkzx9cyqnf0sqgpekxa0\",\n            \"deto1qyvmh00j23h2x0604ft60fujrg2hf25x25mwz7zmhkfv89ectyjqzqqcx2g77\",\n            \"deto1qyw6f0wkfacudv707rew6ekq4azqsey3whx2tgum4tzs62srejl8zqqaqs3gr\",\n            [...]\n        ],\n        \"status\": \"OK\"\n    }\n}\n\n</code></pre>"},{"location":"developer/RPC.html#get-transaction","title":"Get Transaction","text":"<p>Returns information related to a transaction.</p> <p>Available parameters</p> <p></p> <p>Body</p> <pre><code>{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"method\": \"DERO.GetTransaction\",\n    \"params\": {\n        \"txs_hashes\": [\"6f056cae1f2e692ea9e066e3d7703f14484125b2f732b7f31a48481f96299965\", \"3f7aca6ede435296902e362a73ec2f801f6f24f1cf93c69ffe607b7e5a82d8c4\"]\n    }\n}\n\n</code></pre> <p>cURL Request</p> <pre><code>curl -X POST\\\n  http://127.0.0.1:40402/json_rpc\\\n  -H 'content-type: application/json'\\\n  -d '{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"method\": \"DERO.GetTransaction\",\n    \"params\": {\n        \"txs_hashes\": [\"6f056cae1f2e692ea9e066e3d7703f14484125b2f732b7f31a48481f96299965\", \"3f7aca6ede435296902e362a73ec2f801f6f24f1cf93c69ffe607b7e5a82d8c4\"]\n    }\n}'\n\n</code></pre> <p>Result</p> <pre><code>{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"result\": {\n        \"txs_as_hex\": [\n            \"01000003e69902fc9485e50fdea029153c274613ad208c6799e0c862bf8cc6239419deda7286440100000000000000000000000000000000000000000000000000000000000000000000f26b7c2a5c3a9d763ecab209229726dc0a5f4b60243929873f59bf4182ee7041a03089e8cdb0040799ebc9ed5883d7d275f35d40cbd91a77529116d98cc14eff7b5782eb5156c23a39b1e0e3443ff9270db16e1b9efc946a1b54d723a502e1359bdd4c3681b91b508b11cde5f1c96061616e12a237deb71aa21553d26840125c4b1246bf87dd6afbdca9c73ac82b712e550405c303113dbeafa9bab25787d77a3bc3dc9da2d44ce40ce03c5e4952c6379798716690011fecf2c99cab204e39ac077e61b918d2f88eded45c595f64586f9d9cb7da8985a136dc192cc05668d6b9e6dec33963fb76588812348b86c3443540c2d218ddfb7a458a61408bbe3a930dfdbcebadcd6729d3e659cca0ac8c8bb608d92c879ec966cc139aa9c2a7469f302f49a97690ca011dd9f623802d9c47cb1c389296cbdfe11672cadd281358fd918e42dc82bd1c5a0007808b6f9df3722ea2cd1348c53e48b8eef5b7a07dc7ceadef267081f52e765f000f0d391589e70dfdbf10d76f664ed871c05383afc93a020ab973cdd0f9c0fa440117bea4708a833a267b87d634b6126f4f5a4be62f47f669c7eab31021e06378f4000856ba59668257dc115ad5382717b25aba1eee9b48cacff41336373f80fd56a8002a71272d83cd47ef24ace033f47a1bba1f8d22d2cdfb8757862d184f7c500e0d002324735d8b6acc63b649fd958a45a8e66c5151aee9939fdd78c917d48ed5619e0005bd24668cd20f0e9edf0955e3e1bf2a5e9ddd3eae65c7b6447984537cf1acca010cc58e9fe91a70aaf5e7499b51a18dffb1bdd5ddd3693f0789cdaabe99472499010427becbde3e356b7d6510b4c080053bce9a3ffabb968659ff5336386d7bc61600123a58d1e63341d2e4193ad1b4cfdf268828a6165a77a5c82144706c6137fc33011dfa92e61edb832f190334b89fbc4af595b0025b6bbb4f471442754197f1bbad0000a8fbddefeda6114a990e73c98fec8f2d9964bc76a4455bee110a02d938d7de0029ef38242cc8843ac6918a3425db7f288f8fc3634a23d558760a9d299a867eff0124f2105b8160426af4907faf86f0a2996fd25ccc71d6787ee95e7485fc1a23040003e4f445af3db81c59697f029960560a0e6bab0a5c067c54806f74c5676c751916a15b0ff4ccbf61e6b8f9447452f3914a305e1b64816cf24dd6e399ff4e047f011638e26605561f36d122bf63b36d3a611173d51501b8f30bf8180cbfedef1b4a0118529975d3d285220fa60ab2b7515bb67cc9d5eb383093b7f21daf9786166147000927a9f2dc6ec4e57f97f2edfa7aa4ae56c16bc706398293e7af86d1d1d063710126d2ca6b0a4b65f1713f54a50535c7835c98ba57c00d50c706ab847d6558f394000507000ea1ee57e4df8809971519c9ee0a26fb4b4c278bc4d995d8d378835c630118e7775ba54ae56eb569bd32544c804d8dc25b3d0d7c7f12fb35af7621cc2fff000a4219708f8aff0c97e9b78a09f5f38a8a3beb6c98474e8fb2d0c2b30638ea34001b6169e608eaf0896c839e00aae7b4aac2807ac2043dbc170cbf2787f08e4493012900f70bb1e03158b62c7974b453adb65ff333dcbc608c84c6f8c9c0005f34fc0023955a9fdf9c56b425090ef030494acc83bb7386654d86fedba23be66323ecf3010f8e7cedeb37731317ed7f736aca1b6374a88cf16b73ac02cce7eea17c762a7f002abd5fa748a2d0dd22fb7009e9d340634b1ef564f4b5bc91c7901479fc3e74e30015b9f3e2dfc97a3279de2f4e5bccbee8d43545514ce26868db4c8db579a6d1d20007827ae78b2c074436510d75436bd9bb66c766cafe5824c4f5accfced038e64c0021f82d411243884c79481bfd9baa856cc231e771b1b17e1fcae371f42ff42239010f1bcbc0cddac7d3b1ae3cda20e6db83b7599756517e3c8fec4f13e5f7f97187002440277fbcb9d1cb94cd59b49b6a4cbcb1a42208735561a1318b3ab78ff9d1de000dff51722f806a2d5df6196b3a521c47708857b51341001b950db12ce96e2b26010ea6cb87ccc338c38b2307caa4438623f1a14b8d0b8f187a9f80e08c68cda9150006517f26865df7a7819d7d5a1c74ef4fe15d4a54da2d6a8debd382e957c2ea51002098ba0f690059d55df8165af1a55e4798b9bb1daaa937b53c01d4a8cc4b9edb00150fd91deb00ad30e3caadd5669e0fd5d4cc4b59ea35cfc346d18050d1348f630003bc4f527a9a48f929e237fd7fc38cb917855e8fd8169f693e5a8e64113aac3e000c108da5314b747e7c4f757422977fb6237c3be338b1f5d1ba5e03e26b50c1c00002da3ed171d24913ebe897ab2ea667f024c71a5cb7ef1726f30a5cf74af2dc050017804fba37ac116e2c8500ea1a4a18e6cb0c4cd1321807dba586a7c737abe568011a72a5d6dd8d2db136897096aed41c20d7ebbe9d9c586636786a83945bac68c60007ef74facdbf94c0dbce28c5331b2b4db401c81f6bf0dbb6b2208e06b103d847010ab72c8375e59fa9da6d24e2dabd238b5ad10cc8e7243748c030554ac7add51301274b1f9397af3a0256385b00fd05fb406fdae5f4dcacf2af18c70d80072332d0012626fc2c876cb5091fc64950eb82962aa524a197dc8632cfe665a56711f07edb0127878b7e0b43601f305265aeb2870c40c1169e5b18043c7df5c33eae137550bc0017ab6786adadf6a3f63619295c5bd9c19dba3c17635c41552bc68ebbe6fc5a31002845094d3e7125879d1e858360fc0e21e91b29b96a96b7dab9da308b5fe0019d0114b1018d2f9e7c80a13c5ab647c54fa146c3166bb19fbdb5b09ed1dac8b6263d010a1b630a3ce5cd9e9a10b65c98175e8d9f9b2798f35f1f4cca7fdebbdd583e0e01000000000000000000000000000000000000000000000000000000000000000022b2ab9093612713f0b44ae740a34ef0d8f017dd2f54f892e9544b04795574c9276a8cfd17248a823c8016064e17a36804925e565c70a6b9dcee66c2a0839acd2460bd2aa01033fae4b083bfd59130c019b76f7588fb001da0f2810c2a2d4d811ed8d399e2ae59afbee965aa8c57a6cccb6fe5d1d0ed1f1e8b7ac16751dabe1227c537bc6896c90f49dfcf896adc7f4dbfe33bbec3597a5ad1df166b2b032dc4138839236ba09dd1fd6a335e4ba079aa0f74b66eafa30c1bb878386f3b1965022400be697d631b9bb807b9a49cd1031e7ee2c5ede5275ad96d37e81aa858376027489e2133df5e1951bb7a24b2e056f76aea2ffb9ebddd57da0970ac2971a017304bc7cf70d7f8322d53900540a4bf31f9ca311eb23294bf514fff9c87a1bbfc0117aa7e643fe76f43aad249e83c2feecf78fdbd3a1bf3a6036770f4d79114150b012ab7e0aab168908e0ecde7bde67e982d49fdf8de447d48ace141aabcdd91d8150b8668245d59512dd76a96e1c8f96480d2659fa2a1c701e3aaaf0d4601ee148e1f970a11ad5bcd041304bf5052b1432efc1d9416c8b5fa384f6ff749e1dc9ef911b147a25d9fa67c10da5fb3d7bf2fda1ba9a8ba0323771c57efc4211149694b13eac2bd2497ccf624b7c998ba09f797d27a4dc837443c7285b60373aed85c160246409e05eef1b532f1f6936fb546e8cfd9be1c8018655515e5e86bf0980a8b07f20eaaf6ae90526d2472138d176cca1b4a58667ee88b19d6e906b1a0eafdc70153743b0d3bc8ae4405e0f43a430d718574b6cb80ed34bf55417af8c58ffcf2266d86a26dfec8e282f85590898bcae2ff7e3fe32937eb0257fde6d1b38276ae1e8e94d31bd4a2c164053e3a65551a5582d14c26d790cbf5bbc0806241d9b51e002a3e47d15d2e70a0201fa2eb82462a51c16096f7052800da8a9da3220e45054d002f42f205ed9a09ddcb83ed212950f43f9389ee416127b52cb5006a470f5c29f70003ff4bddc6d753e6b087c5d0793148c8476f00be31b1fa64be5bec2b62d2781d011b4738d12826104a3b231f8975ea13f780cb8839d8d0cec7118a8952cce6fab3010025613eccb92dbf0ac99afcd8a626089c543eb0493dde59881c6461cb48d2e900000443901ac6c1254bfb7e61a8f74e095d82c68f099649674f2fd08a63d15f0e001393ecba1ab93b4f29f2e6e482b9b03c279c461f7b81840e26a5a4c1fcabc232002cc839ecaa1a488384811b5dc53008762aaa77630d605ede4f94eaeedbda3062012b05119a9c3961b533f6b1dad8cfb95afa45eda90de84b8ec8c4b4cf95181ca100238b29c579fe319d3e24a9a08433f88fa822a32fcd06c73d8d64a1afc840991c000450d30a9882faeb3c437796cce575a1d463b4a96d196d42eaaab8045afb1fba011be8e17cf5c22173437c96b574be0679c71452c17c7852db8dd75bb5d59a63630005dd000a330ac1068f56b4bf608cae8594c2ecc5b5faa2521218445f713c963700\",\n            \"01000003e69902fc9485e50fdea029153c274613ad208c6799e0c862bf8cc6239419deda7286440100000000000000000000000000000000000000000000000000000000000000000000f7b00b62bb6ffeaf98ed7f252ea95b76b725fe050de30da128837ce772784dc69314c0a5701e123c83bac704c5fec14b6797e3a3cdcda16b9ed97240b4fe144d217a6243620dbd4a2eac6658efee534f82ebb6b94ee8d57311e5e2b6dc711cb75dbf5f11a82683b2291cff7643179e5b85cb5a5959d3588dfc26d199655f2da8cdad81257750e92bc9009213691481cefe0405c30309467aac2a2afcfb09bf242fac7921f1e82cdb4fada78dfe413d0d75514b1ef401ffb247cded31b2c6aa0ad40e324680c3443540c2149e1766f3a8472dca148bea450a6ba676c12aad51f03ae94fc1cd50e53ce915f54ececcbe67ebc8d8f8ca66ca06c1b3f4c07b218884620bc137492a0cbbce17be2d81c304839c0c53e1dcaa5d3debd0ca8c791c9ea1007bb8c884f70026d8a86d32cb79cec58f531754d31b85ec2b7149601ec918941ddb72d33d8333011d3a935cca64839795bd6016b876843295468de4764bb47147e7eb89ba8f405701014e68061e4573d9b491a8180dfc4411b2b4f5c7384770cb6915a09afb0ffa1e001d1c4a4c60a65c3ed5a4fb15bcd65fd7cfa045ac7db6b575f0f2efe1b3a80be90021d71e008c3bccc73b9f163df173a38d32a1567a6876894030b107a1ad9af0ce000b30b9c2106dc0ef5a1a2a1af46e5b1f68614145cd20367c732cd7281f678053010879409ed3cc903a1faf56e9299c6a2a19030ccb559497def01513e72781a8e90122128ab5550b5639812e1076e2cbae330c027b0b284c794aeada50cee433bc200106e23650a4fcfba8f60be26ae22bc863ca68aaad28feaaeeacfec29314a3664b000193659b96a95f31ec5127885fbc3585ad41cf282c01b519c1c0dcaf1628ec1e0026017814db424c1f594420a1c096ac01c48c3a654ff1541c7c8307203fdf6cee000113e0db3f56326973d51cdf3360e9cdae7972e39c0a7f3325c965e48504c5f00018aeb558aaa3ff41f3358faaebe05b52ed1ff233ec973e8bc621e9daf93edafd0107b116db3401423f4975bb5b9d39a3c06bad79f88df43bc3cc9d701ba2709d25000df70aad6d6bdaea8a3bae6e4dfc829e9356ec79de4a614006504e5365de7a810003e4f445af3db81c59697f029960560a0e6bab0a5c067c54806f74c5676c75192d5e86ed77f82ec40247a6058541888613ff9cedba5b0a2fdc87fc4e11c3dbed001c40b4ee98619123eb930c2684ccb3fa5146148a4da5b1d0898691e6367485ff012b08b0ec699421f84b06445e2a067729bfe64d6f072f3890a7277e3a1f5b792a000837564104fefa546b2e2330134a2a0d873e8fc33254fa54101d125816e2094a012d32ed55941b68d79fbe72de192d908924434c78231804b4d6fb01eecfb7edb1000e19c1613a2d2294549466c850d8729aafbe6c31f2c587450c3e01abe49ecb60002a15f0e4b815276858ff375183f44544dedb68e4ddd1d608c5d338c754807d6c0015a783fb7af458137e1100b2a34cda438c01fa2505c745af8e7845d14ab3efb3000befe5ff87e60c230a0d2e062c678904994ce5d998f720e8e821c458239100b30028a11eaee1e9b54026979d3723994624ed974b12063c7481c20df64160c0372701222c9d06da850263e367493c88bdbfb7f58e612492e19f54a6256d1501d8d987001e3aa30bb94c815072d0bf55563d40631bcc11d0832c8ca6278f96caf97a4249000adb571a55bcdef4a4aefb03304624b6158345e91385d14e0c2af7815c8cf5f7010c6fd971a2c9156e95a1a611a8801e0f7ac630f5403a8d79e74839ad5837cb6f001393112847debc1e51379e9cef1f7170d1e5a37844dfac85cf3c21ddaf431902002967be2102e25853016bd44868c0b573e6cb734659c15bc902089a9b710be6a0000abf40ad280302c64d027488c64fb045565d01fd2b79806e061b02fdd48c258b010067270b6d3bdffcc327606cbcaae0824a5311791a63c52ba5c36687f9d48b8801160bac150b6f73abcba7ca95297d9171699526e163dc800e2c51bd8d0a8a599f002e1504db4acba7cd8e36fb5abd2f2711240f02e382cd86b86fd9c25c14ee2c82012bb3ad75755bfb1257681ea4e8922cb77be35e95c4decd63b806fdfa3cd0902001115ecbcf1893b678df2ac70e600d031edaea8f22d7355965ccb5b02d844599ee001c4346a94088c351b48a4edfa4f2a42e4639d5ca77eadb113e6d4e11d5b84a83000359411a2c0cf7de244b4da2e4daf39d4ea9e4c1d0ba33bf755722d37d59efaf000833020cc0992588cf23ba7021c27d6eecd38917bd9f79fd3be3b29271bc73a6001175b41061df0baf57c82cdfe7222bf2322946a938e3320c8244e4ca5c21c612011ce87c2842bd8d1f5c2b7790e05395036350d89ce1b8d522e036e3be7c5855a2012be1a30de449f9a431025d38023a3596db63f9ea6a9bbdbdaa057a8b03079dd501005334ebf3ceb5028561c401dc971d6dcd10803bd7ad7c2c61516f6e8c6d13880015be77d1d0b878ac03cd2e766aa3a2517a157ce29c69b3f73dd55f600849390a0121d54ddeda9cd0938812a7e71aa9b195d19427ca635865cc0bd34e3fb0215f67011b6585ee33f5082b1164a6f8ca27448b616c614d32d9feb7eb06ed341049a52f0022941d16396895ec0c7fd4268497986cc466ef4eedec5453a29fec6bbaf171250023a361d8a6f836e5bc3fc9e2e56194a67fc6ed735707ae09587b2e35d495411a01084c39a1c2444da2f7459c107f403c2ad4770aab683f0b3b64e8c469230ef828011992cbb72047cbc8dd240700152e7051ebdff5f3b74d083384afdb04af215765010caa33c30a9542fd0c8f7d8dee6ec8ff0f899dbef5f5dd994f2e27c18ba53ee3000000000000000000000000000000000000000000000000000000000000000000103ffd6f8a27ed37431f145f4ea498063816b4948ff098f3ddc67b5b2653707d138c6bf2ea9a4718b0a50510b0124b75d24da9a9a07de08847416ab67ab75be3015115995367f4e81f3adb383e3cd7146f770fd3a63bdd9130621b84d17b208c018c80857b89283879764ab8f1ae16b2448621776513c0df487db9e336706a7e1c19a0c127ebf7762f5ee4f334aaa287c2a1af74471d88a22c45cf3348fa16952c30b32fc87990c5b6b9bb2795c85770dc07e541cf94aa7f357442f3ca08c8bb2aba3ed10ef9a8ef1cd20996853384190c4dc79095a91517be60c0d955c2f85e1b22da5326c2b88059b312f7b91b58f52cbf6d84df34834f7d044c7be6a13f041f690b83a6fac06dc6f0cbd7f2c4171aa426951382efbceec9853cdfb566005e00220e6871c0abb720c5b5466d9ab532d6b73797c82e6b570ce0b2d6d151dc154f012ce3e99fe03ea2787f781ba07b27ab73ab84c483762382ff1b69a54def410ad71536278c84543bbd1b5df2441d2078033ff200274d214e1fe602da99c44ca4d80ce6d41d3bb685763c787b4eadd06637eb33a4ab5f8ebcaefa2d23badfd6711a15f024315d03dfb65c01e2ded515109aaa19c56a788d6b81e52311c2113a42af293e1537d5a919ad8f3536602897f553ae8ca2342509815d8091d3099ef67b0014b6e179f0184e79dae1fb5f93e6d16b7ba99603aacd72dee1435b2d0a63dac10eaa5f6e82463a303708008c6d5ce83e1be8a88b0f4e0dc3c274ef1f35dda00b195e0fb94356ff1e390874fb7884866ee511315d348e3dd31b1b1741230ced7e2e3fb65a21ef0577ad6290bd41c94f539d7e613ed3868c80471ae5507876f06a2bd977607ffe9b66c929d8c978b2ab050d911389f35cd23962bbdcb07575ea4b0011932f82346cf49ee903c24acbec4373c6a6e24aed1d2ba6708656eb81affa12002817723dc1ce5f67c680e1742e0290620a4e689e309e664b44ed7fdd3d15d5460102f1cfc9cbb7d9fdb1b1e21480ed229b030fd9293bbd648753903fecfafda2a60128a29cf179688988929e8304ecdfdf1f7d5098cd88ce4b66ca2927cdbf9ebc3c002c861382f359b88d72b281adb8229539c6e7f622f75da274fa1a1ee3cecb1abf0022c07f8f152c80cbd6680533693fe0e76acab8ce4670696573f93f714aa369dc013041371db94160e159d725769ddf0d328745fb2af0a736fd2e8969876dd19662011c8c36dfa032c52f0c3442b7d9695b50d51dcd975d6374e6df1224e276462f6c001dddcfd90e2fbc717135f29af6387daaef87fa791249890d338d644e4532669f000bded5a6a000e08e4797154f5d9137f0e7fde06b0c84217d6c3e06f07eecf2990017f99e2e47bcc0ca0dd2ab1e170e0f828c30408869d9dc46ae75459918fceba700108598f111b389d27e110051a763382cc5ea3f396ae21b6970063a3cac17794b0126030ff863e81e5bbd10f3d434b0490d0a792f1ca50dcf419efdb6b366e364bf01\"\n        ],\n        \"txs\": [\n            {\n                \"as_hex\": \"\",\n                \"block_height\": 36074,\n                \"reward\": 0,\n                \"ignored\": false,\n                \"in_pool\": false,\n                \"output_indices\": null,\n                \"tx_hash\": \"\",\n                \"valid_block\": \"e286bd3cedfbfaecbbc327f4cb5b1f5457053f322acdd177d6ff55cb6e897e7f\",\n                \"invalid_block\": null,\n                \"ring\": [\n                    [\n                        \"deto1qy2cl36z7rwqsrp9mqf3jf0lj6hxrvmt98dp6uq2zeathn00rv4rqqgwwwq6y\",\n                        \"deto1qy2u9j4c3tv3exmmdd5za82f2gg6dqmaptmxat640ssvwca3zmxajqg67z4sv\",\n                        \"deto1qyxwhayh9hc230g7dqtl76yhpj754dd7uh4kgptd4ya29538u4v8wqgvrfdt4\",\n                        \"deto1qy56vq7gfrhv2jrgjpcrsd65vsgpf7qpz6c0h03wy5ke9fumewkyuqgxshj8c\",\n                        \"deto1qysxfqq9aweksl80wnnxf9n4eqwzxgt9d2uezp2h7rqz5kf2cj5gyqg3pg7eh\",\n                        \"deto1qykz0y7k86fpgymege4uy2zzxmehhzqun9u6azs46ze9adwamupk5qg4j9lvt\",\n                        \"deto1qyywdf79xhw9kmljtef786rx8j6q7tg3uakvgjgvsz7dw5kuxfexjqgm6e2yj\",\n                        \"deto1qyz8umf02tjzkxy2d7alhq2h7xsf6zsuapvy5m4kn67pqrpgc2er6qg6x6d0n\",\n                        \"deto1qyynts8afn6fyxslpn7r420c5hehudwyncjgm6r2yfm5t3s370cuwqgn4j6x2\",\n                        \"deto1qy04yamzkg64ndsc9u3knuknszed6hmxxtmrx6x387dq4r2hr7tezqq9md6rq\",\n                        \"deto1qyyemtmskcpjn3fhguvn0yuquvkasjh5fxwqgk9zk5mn4x0fp7t06qgr7fkdr\",\n                        \"deto1qy0ehnqjpr0wxqnknyc66du2fsxyktppkr8m8e6jvplp954klfjz2qqdzcd8p\",\n                        \"deto1qy9gs9c683903sgc3cna60fwzuka6r4qgdennpreev60z6rsdw0zkqgy47zwm\",\n                        \"deto1qy8z4awcnhnp624ma0fznkpj433wnl75hu47fx73287mk5vy2ga3wqgj9gtla\",\n                        \"deto1qy0cx6faws9ypd7aw3500x93v8t8dgdwfsqmy8sqtsaa844ldgn2wqq0e70le\",\n                        \"deto1qykhpc3ksq7c39sdvguuv02s62q0elcugr4fwnywhg8cnkkch29ryqqyvtq8g\"\n                    ]\n                ],\n                \"signer\": \"\",\n                \"balance\": 0,\n                \"code\": \"\",\n                \"balancenow\": 0,\n                \"codenow\": \"\"\n            },\n            {\n                \"as_hex\": \"\",\n                \"block_height\": 36074,\n                \"reward\": 0,\n                \"ignored\": false,\n                \"in_pool\": false,\n                \"output_indices\": null,\n                \"tx_hash\": \"\",\n                \"valid_block\": \"e286bd3cedfbfaecbbc327f4cb5b1f5457053f322acdd177d6ff55cb6e897e7f\",\n                \"invalid_block\": null,\n                \"ring\": [\n                    [\n                        \"deto1qyxjcz77he9njxkm2rvd469hlv88yhp3mwwmem5d46jj3lpr6w03wqq8e27rg\",\n                        \"deto1qyhvwyjkgmsg40hkau4csh0ksn4qm072uz0jr75gf45lqmdpxah2kqqrp8s4r\",\n                        \"deto1qyptptr294w6aa38220um5as08krppx6de0qjk7mu5rdfelfn97h5qg6lfd0v\",\n                        \"deto1qy0ehnqjpr0wxqnknyc66du2fsxyktppkr8m8e6jvplp954klfjz2qqdzcd8p\",\n                        \"deto1qyt26zg5csas4h3a88dtqxgny6rlyfdr27jx335x94syjxn652f25qggmlag4\",\n                        \"deto1qyye8v2zfdmpn9vsd98yflmghwgk90tpcrkfpeds645rvfsxvx5jzqq6ezejl\",\n                        \"deto1qyr4pxj7qlxc62j3u7dxdpjgl7vjgmkcf5rwack9dm97etc8fjvx2qq83pmye\",\n                        \"deto1qyr0rgqkh0r679ezp6znwgdyxkzlvq50jazuj3r5yslwkt7rssc4jqq78qwmq\",\n                        \"deto1qy00rwqzshtn98nz6h42k39230k0v5gzkvp7ms83w49zn09s2tes5qguwuhpp\",\n                        \"deto1qyww4r64c4t02qzs8w3cpfw28kfjnrrnth9flk4jped64ynslq8uvqge6hnd4\",\n                        \"deto1qyyj99tnmng4mrk6r9n8kx8zyympm9ljkd07jujhhjudrw3e2nwrkqqc9k29f\",\n                        \"deto1qyy86yhmx8mr3343dnlk9kc9gec3qek028t4xfdhxhk0ymhy88qzuqgyw9tgn\",\n                        \"deto1qy4qyujjy02ayrxs8pgq0rk00n845sqk6dha8jdgp5358v86aqcngqqhld7yr\",\n                        \"deto1qy598uhhf9kgdqlyz4aag7gzrjfeged48m8z9mccrf8yn0ufm8auzqggcyydd\",\n                        \"deto1qyddyeqfnzg2lwgseuefhpl4564rp2d6p5zf9ud0uj7sepmsxnyhgqq7xdkxz\",\n                        \"deto1qyjlw2w4kkfrs6yt4v62tv2zntlvjth435fsuzqafw2yvxt4ae7y6qggjcl4f\"\n                    ]\n                ],\n                \"signer\": \"\",\n                \"balance\": 0,\n                \"code\": \"\",\n                \"balancenow\": 0,\n                \"codenow\": \"\"\n            }\n        ],\n        \"status\": \"OK\"\n    }\n}\n\n</code></pre>"},{"location":"developer/RPC.html#send-raw-transaction","title":"Send Raw Transaction","text":"<p>Broadcast a transaction on the DERO network.</p> <p>Available parameters</p> <p></p> <p>Body</p> <pre><code>{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"method\": \"DERO.SendRawTransaction\",\n    \"params\": {\n        \"tx_as_hex\": \"01000003d39a02c1295e6cbaf9f98ed67ba0e6a06eb26b3c5d27fa83e0bd070a058c539d21da5d01000000000000000000000000000000000000000000000000000000000000000000000160678916fcfcb943bf579de316406d1dae91b0799701c38aba61129daa92c662074e559ea4165e259e261aaf4e80262398dfc3b0561a63f5c3da356cadfcb9932efb8e0db977e23c82c4f1c0b6014bf1bbb71b91d9d584bb7de5bddaa80a2a8dd9bf12bfd06ef252fab44884c683e0dc92262ead552b1c6dbc513fedaa59929fd5eb21c80d4a8bf44b346d9cd0a667e40404c3031b970faa7e70d5050842ad3c88679852a8f27b6a5afbec1fb8ad000bd189802200dc9e48d5452ec98e05beb43b51056a57c719ab7ec3443540807a908374c64207008c095ed633722a97c95073398e48de0076fec58f96fe3cd2ecb8d385086fb91e8c9c5028d6b6b5a48a432b8f7ac6c43e31eff39396a2074d8af19b7ab4154f01008c0798cf91f0892c4d8246743386fbf617f72a985634e0059a12eaec24a61001016b05ed80daf1e9580f2ccc66081c3765201f9e6ac230a2b7667a0bba427dc6002d7a9f01ff25296b171e036c9c68053d7de826b180323224417126de0fd0748501238b3a1dc5dbe62de9f0488264ee46c39c08925e2cb68f7b6dc60d8aecbb68620002c66dd5c29de5e9adab3bd7f268f64269e1e96921eeb9637505414c790c0a65011e4020fdc76b7a4a6fad84d0fe875cbd38fa7e816585b639d8c3032aca1b3064010e380630678bcc957c4a1cc8e57d2df9fe7996b98dabd42cf1c49eaa8625e1b80119eb616138a8c3606a3bc1f9a0052eaedf6f50ac4158ad2c42074ff02c3ef786001394a47cf5cfc88b357eb50c88d8f1554f9cd5f1fc00cfd54c35d3664e9c27ce00010990641ed8bea313d3201aa9a1b7dbde6e18376e07df73cdea1b5d1c11309c0122e645671fb85d7e8dc79729cb147a4fb534d17981d4d5d576f965492f3745f0001aecdcae49756e90d99500c31514f8e0421cc7678499dd7d6b8ea393cf3b29ef0116b78b380109adbe63d8597aac8a7d2d92ff655c93432ff70a2eacb5e5d75ae4011227aa289afebbbb5ed5d55cc988f39a818f46b75a6b804ebbe47ff021d0c032002442d20d3b09f99317d36dff5b4dd26b4832c0bd158814f9329506a257c235e800d516c08b48be26167e83850a13e0b3b07a1ff9c92aea0403ed60da213726b9371c815b9607b3f2ac78b8f4aacfbeadf7f7a800751ac231447b17606200b6eb0f01191641ed48d79ce5a064fdacfe40061de65b8c0d7aea1fae353b1effc7f2a2ac00270e2ac0dc68e423d1868f5cac869d64d94702ee9e772ef5fd52b4612ead6f5a0003a1c3d496a186a1a72cfe3078e88168ff326473b8af785b254aa124c69064e400163d332d26ea2e7f66022bd963c4163a6f205d44e35ac83eea7d5a0f1236f09c0023f155555baa1083840831c538443e2805966ab97c8ec333435ac7ab58a979fe002f4b9c816d0c5dfc46b6b507028dd967ba0574f6f3f3503c8cfefca4bd88be7300007ccba7bd0cf11585241ba0e573ab5fbcc159220bfb4669de2cd3d11b9ac8a60020369d2d52fd9c8997c6bd384c3627b03da0cc0c2d2f5aa4b0c74a330192f4c2012278d29396e1c6bfaeb67626da24ec117429f4d207ddd2b0632cb09d12652ec10101e3a4ff8846e1655b007195e1b6d800b4c62a88173d4328002d39f673809954001031c5badf10560137006f3e24fa54b27298109f45802311f72682f8416daf870017f293c47a044b8950bb2432f13aabce8d2778e06acbc77b7ff5c0f9fcf19a0d01192e4f040dade991bfccb215e86d43f6d1dcfdba6b990901fc0803205971a8630100c8de7797ac2233659edad98015d4b09fd72795c88b7e72abe67332b6dfe419011b4b31bb8f4839e93470fdf6466cfeebb71e8268fc4eee7e1fc18c693db1b0ee010635360ad6bc1ac35171de94f599ff94b5b99bb8cbcb752c0d8bf814dcb17bf3011d0e8b621bb2d2ccf391b98afe47b113c135357f5704729a7424eb7d43d692ce0028c2ed7d17398ec2c7430b48d95e5b4641ba9aa09d938aee68a156aa708db4b7012db0d18235dbf4800a23edda7f53a433cb6a7df84a0b5cc4c1e810c4f0a2bd8201034aad9debd087e6b816ac31e8233d08ba685bde235a5f794f908405398c12ee0016d5d080eb4042680548d29f8730198051a9dccd0996d40c5a13b6949f14e4910025f28597f07d17439457e9e41a5c7f7daabbc134f6228be485f452461d5b996701220584b24e5a87af99109c460b2052df26f15e631ef8c36f18004ffd7a71a519002ae7670e81dc479985dd0caa0cb08f2128307b43aea07a6d3c5ab84aa648a5a70004ef828ddc623cb574e87065a5d7c3006597716c910190a866969dfea37c30d600249fb654c861c3688c2898fed0aac1fac075b6478146e3fb99d34ccaf790a21d0012a06b85562f201047ed922fe938e72069e4a25f0cc5782b1aec718c0bce46ea002e0dae8b0fe9e50fbe0ba74c6e0565212fddefef7053529cad2747978265f8a8011c140a7bc045eb496e520b4bd08e9dbdf18b9a1bbf6733be4248442d10a9fb0500302c870c17f7ef67e711df82b6603b30603694e188024fa41a14fada846d8ba9012db86e12e976195f38cba6915f7228c2e98fe0a266df942e7174e3f528ddb1d00102222e91f9a9e91904b17d64977352c93e5ac2f6e1d694041f7863ead356f5ee011f4e1eeef0606a9ae6d87562ed0f81dc0402d327102471c4b9dbb3fa3651ba09010e42adcbf49d9050d82ecaa5c40a9c9858aa0f97976cc593de7141d9aacc0a6c00200be9027f39b0dadb36df2114f3a7605a90347e3625304e290d83841365fa2a0011da530bc17fb6e3c5fcd5291fb286c9b52b943a1c93f68b7ac220ff9b008f170000000000000000000000000000000000000000000000000000000000000000000eab3f99967f03bb3a3b1e689145e406155d4c9e027a1206a1cc972f1003be5612eea86bea3b0ee07dafbc2610fe9c71bdeccead3ba0a2702f5da0d89d084f2c053f0931828d42aec32cd555d5d81639005192e5903da3c23218938c7c3dc918227a34fb4889a56ea461988da95aeca6e17dbf5865696fbe738bd7033f51f0b40346b290197557ac24db3e9281f0fedf01110dfeb4daf4d71163de652dc8b2b61778b5e0bd4f45541b35c62923b99b53c3b94f1478dd81708e14112e152e489e2c1c4c580d3e35a9f0693449a0af566deb3f32340373c023ffa6c9ff8d91f80d07af281574a4822870a05678b41d97c4a9b35541e6940f0120b9d47fc4bb2b2003e95bd2ec3c63245602f21808a875ba0d1028ca3e7869b6c6682a7125c1f2ff011ece8eb96ff3e0e9af0947749056b806e554fde39f475f0ca2211cf9198058a4002703f5443f1886e1caf60f775b6431bc948e4b0e2b76f56a8fc8c29da23caded041917938e845f826ddc5f2ec6aca0a985e6f6c98ea0cbc51f9429e2616500e20605af191eac7bd2696409d65dcbf3108079ec1f6bd5f9601b43dd3b58304d9d205b1ef7b34578d80236c0615ac79f69fcc7c92491bbbd3130cc22e8f0ea1fd21d2d5bfc8da06e2ba48acf70477d1cfefa7165a0804166027f0945faa85057cc236797a65ada0329e7de91712b4974fd83bb99ea97042788bfde4b8b9b5f1b251f6853fc4ffbdff382b24f209d4357099ea1c0d0c383dfd7f03d64bb7bff199406aae7f59190862d36ebefe8d011825bc663c6731f6397d5019f00055a3f80b71ab3b3813d5d509d89432a722ee789db88ca86c86fa76d6224b7eb3c5e66822b1e57f77674481d0a3a7252d47c4da5feab251db1b0b146620a9d271ca951c33f001080c18c31919d2de622fe0170824cc31ecaedd90d8214afcf47a7486474d65200153ade04144d5c29e2e0d6003fcf160bec90d79a42afcb4fe230bc695ce956ba001f4b437e4531531b85e326ccdf160e87408454ecd811fd41a51cc7a9585700df01092a076eebb6fb76ae2443dd7f007fe8edc4c7f54a1bdf48e8e5ae59ca513a9901205d75965eb434dd10e8425ff82d7f6695d4cf0b97507e800c3e3d59a60b83f3002d1496857827c872a53a792e86a74da252f12316972cfadbb2afcfa40a2883790108ccf31a2fdd88201361a0d4313a98a0272173132d1fa3d9bf018f35a7b439b701301da927ac71fea5a0024920ecbadd76f5f05f06b2d8e6874ae9a5348316585b002806c45af761489705e347dcc764ab531fbd7205c36c15f44ad1b633a609dda3000a40291cb5b71269ce0535a8b81ee3440e3db8208e4dd2af38c6591121c6a6560127f8dbc559ca73ecc28c0df0f38b7991bd348121cf5c111c4c505b019d5ef8de0018aae0f6ef38795ec5bac7e55ac5e580599a95043bc57ecc4930d2e1279269b2001c77bc717a5a1788e6157bf937e3f089ec9e27b0a7ab4eab11c25eec1918045300\"\n    }\n}\n\n</code></pre> <p>cURL Request</p> <pre><code>curl -X POST\\\n  http://127.0.0.1:40402/json_rpc\\\n  -H 'content-type: application/json'\\\n  -d '{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"method\": \"DERO.SendRawTransaction\",\n    \"params\": {\n        \"tx_as_hex\": \"01000003d39a02c1295e6cbaf9f98ed67ba0e6a06eb26b3c5d27fa83e0bd070a058c539d21da5d01000000000000000000000000000000000000000000000000000000000000000000000160678916fcfcb943bf579de316406d1dae91b0799701c38aba61129daa92c662074e559ea4165e259e261aaf4e80262398dfc3b0561a63f5c3da356cadfcb9932efb8e0db977e23c82c4f1c0b6014bf1bbb71b91d9d584bb7de5bddaa80a2a8dd9bf12bfd06ef252fab44884c683e0dc92262ead552b1c6dbc513fedaa59929fd5eb21c80d4a8bf44b346d9cd0a667e40404c3031b970faa7e70d5050842ad3c88679852a8f27b6a5afbec1fb8ad000bd189802200dc9e48d5452ec98e05beb43b51056a57c719ab7ec3443540807a908374c64207008c095ed633722a97c95073398e48de0076fec58f96fe3cd2ecb8d385086fb91e8c9c5028d6b6b5a48a432b8f7ac6c43e31eff39396a2074d8af19b7ab4154f01008c0798cf91f0892c4d8246743386fbf617f72a985634e0059a12eaec24a61001016b05ed80daf1e9580f2ccc66081c3765201f9e6ac230a2b7667a0bba427dc6002d7a9f01ff25296b171e036c9c68053d7de826b180323224417126de0fd0748501238b3a1dc5dbe62de9f0488264ee46c39c08925e2cb68f7b6dc60d8aecbb68620002c66dd5c29de5e9adab3bd7f268f64269e1e96921eeb9637505414c790c0a65011e4020fdc76b7a4a6fad84d0fe875cbd38fa7e816585b639d8c3032aca1b3064010e380630678bcc957c4a1cc8e57d2df9fe7996b98dabd42cf1c49eaa8625e1b80119eb616138a8c3606a3bc1f9a0052eaedf6f50ac4158ad2c42074ff02c3ef786001394a47cf5cfc88b357eb50c88d8f1554f9cd5f1fc00cfd54c35d3664e9c27ce00010990641ed8bea313d3201aa9a1b7dbde6e18376e07df73cdea1b5d1c11309c0122e645671fb85d7e8dc79729cb147a4fb534d17981d4d5d576f965492f3745f0001aecdcae49756e90d99500c31514f8e0421cc7678499dd7d6b8ea393cf3b29ef0116b78b380109adbe63d8597aac8a7d2d92ff655c93432ff70a2eacb5e5d75ae4011227aa289afebbbb5ed5d55cc988f39a818f46b75a6b804ebbe47ff021d0c032002442d20d3b09f99317d36dff5b4dd26b4832c0bd158814f9329506a257c235e800d516c08b48be26167e83850a13e0b3b07a1ff9c92aea0403ed60da213726b9371c815b9607b3f2ac78b8f4aacfbeadf7f7a800751ac231447b17606200b6eb0f01191641ed48d79ce5a064fdacfe40061de65b8c0d7aea1fae353b1effc7f2a2ac00270e2ac0dc68e423d1868f5cac869d64d94702ee9e772ef5fd52b4612ead6f5a0003a1c3d496a186a1a72cfe3078e88168ff326473b8af785b254aa124c69064e400163d332d26ea2e7f66022bd963c4163a6f205d44e35ac83eea7d5a0f1236f09c0023f155555baa1083840831c538443e2805966ab97c8ec333435ac7ab58a979fe002f4b9c816d0c5dfc46b6b507028dd967ba0574f6f3f3503c8cfefca4bd88be7300007ccba7bd0cf11585241ba0e573ab5fbcc159220bfb4669de2cd3d11b9ac8a60020369d2d52fd9c8997c6bd384c3627b03da0cc0c2d2f5aa4b0c74a330192f4c2012278d29396e1c6bfaeb67626da24ec117429f4d207ddd2b0632cb09d12652ec10101e3a4ff8846e1655b007195e1b6d800b4c62a88173d4328002d39f673809954001031c5badf10560137006f3e24fa54b27298109f45802311f72682f8416daf870017f293c47a044b8950bb2432f13aabce8d2778e06acbc77b7ff5c0f9fcf19a0d01192e4f040dade991bfccb215e86d43f6d1dcfdba6b990901fc0803205971a8630100c8de7797ac2233659edad98015d4b09fd72795c88b7e72abe67332b6dfe419011b4b31bb8f4839e93470fdf6466cfeebb71e8268fc4eee7e1fc18c693db1b0ee010635360ad6bc1ac35171de94f599ff94b5b99bb8cbcb752c0d8bf814dcb17bf3011d0e8b621bb2d2ccf391b98afe47b113c135357f5704729a7424eb7d43d692ce0028c2ed7d17398ec2c7430b48d95e5b4641ba9aa09d938aee68a156aa708db4b7012db0d18235dbf4800a23edda7f53a433cb6a7df84a0b5cc4c1e810c4f0a2bd8201034aad9debd087e6b816ac31e8233d08ba685bde235a5f794f908405398c12ee0016d5d080eb4042680548d29f8730198051a9dccd0996d40c5a13b6949f14e4910025f28597f07d17439457e9e41a5c7f7daabbc134f6228be485f452461d5b996701220584b24e5a87af99109c460b2052df26f15e631ef8c36f18004ffd7a71a519002ae7670e81dc479985dd0caa0cb08f2128307b43aea07a6d3c5ab84aa648a5a70004ef828ddc623cb574e87065a5d7c3006597716c910190a866969dfea37c30d600249fb654c861c3688c2898fed0aac1fac075b6478146e3fb99d34ccaf790a21d0012a06b85562f201047ed922fe938e72069e4a25f0cc5782b1aec718c0bce46ea002e0dae8b0fe9e50fbe0ba74c6e0565212fddefef7053529cad2747978265f8a8011c140a7bc045eb496e520b4bd08e9dbdf18b9a1bbf6733be4248442d10a9fb0500302c870c17f7ef67e711df82b6603b30603694e188024fa41a14fada846d8ba9012db86e12e976195f38cba6915f7228c2e98fe0a266df942e7174e3f528ddb1d00102222e91f9a9e91904b17d64977352c93e5ac2f6e1d694041f7863ead356f5ee011f4e1eeef0606a9ae6d87562ed0f81dc0402d327102471c4b9dbb3fa3651ba09010e42adcbf49d9050d82ecaa5c40a9c9858aa0f97976cc593de7141d9aacc0a6c00200be9027f39b0dadb36df2114f3a7605a90347e3625304e290d83841365fa2a0011da530bc17fb6e3c5fcd5291fb286c9b52b943a1c93f68b7ac220ff9b008f170000000000000000000000000000000000000000000000000000000000000000000eab3f99967f03bb3a3b1e689145e406155d4c9e027a1206a1cc972f1003be5612eea86bea3b0ee07dafbc2610fe9c71bdeccead3ba0a2702f5da0d89d084f2c053f0931828d42aec32cd555d5d81639005192e5903da3c23218938c7c3dc918227a34fb4889a56ea461988da95aeca6e17dbf5865696fbe738bd7033f51f0b40346b290197557ac24db3e9281f0fedf01110dfeb4daf4d71163de652dc8b2b61778b5e0bd4f45541b35c62923b99b53c3b94f1478dd81708e14112e152e489e2c1c4c580d3e35a9f0693449a0af566deb3f32340373c023ffa6c9ff8d91f80d07af281574a4822870a05678b41d97c4a9b35541e6940f0120b9d47fc4bb2b2003e95bd2ec3c63245602f21808a875ba0d1028ca3e7869b6c6682a7125c1f2ff011ece8eb96ff3e0e9af0947749056b806e554fde39f475f0ca2211cf9198058a4002703f5443f1886e1caf60f775b6431bc948e4b0e2b76f56a8fc8c29da23caded041917938e845f826ddc5f2ec6aca0a985e6f6c98ea0cbc51f9429e2616500e20605af191eac7bd2696409d65dcbf3108079ec1f6bd5f9601b43dd3b58304d9d205b1ef7b34578d80236c0615ac79f69fcc7c92491bbbd3130cc22e8f0ea1fd21d2d5bfc8da06e2ba48acf70477d1cfefa7165a0804166027f0945faa85057cc236797a65ada0329e7de91712b4974fd83bb99ea97042788bfde4b8b9b5f1b251f6853fc4ffbdff382b24f209d4357099ea1c0d0c383dfd7f03d64bb7bff199406aae7f59190862d36ebefe8d011825bc663c6731f6397d5019f00055a3f80b71ab3b3813d5d509d89432a722ee789db88ca86c86fa76d6224b7eb3c5e66822b1e57f77674481d0a3a7252d47c4da5feab251db1b0b146620a9d271ca951c33f001080c18c31919d2de622fe0170824cc31ecaedd90d8214afcf47a7486474d65200153ade04144d5c29e2e0d6003fcf160bec90d79a42afcb4fe230bc695ce956ba001f4b437e4531531b85e326ccdf160e87408454ecd811fd41a51cc7a9585700df01092a076eebb6fb76ae2443dd7f007fe8edc4c7f54a1bdf48e8e5ae59ca513a9901205d75965eb434dd10e8425ff82d7f6695d4cf0b97507e800c3e3d59a60b83f3002d1496857827c872a53a792e86a74da252f12316972cfadbb2afcfa40a2883790108ccf31a2fdd88201361a0d4313a98a0272173132d1fa3d9bf018f35a7b439b701301da927ac71fea5a0024920ecbadd76f5f05f06b2d8e6874ae9a5348316585b002806c45af761489705e347dcc764ab531fbd7205c36c15f44ad1b633a609dda3000a40291cb5b71269ce0535a8b81ee3440e3db8208e4dd2af38c6591121c6a6560127f8dbc559ca73ecc28c0df0f38b7991bd348121cf5c111c4c505b019d5ef8de0018aae0f6ef38795ec5bac7e55ac5e580599a95043bc57ecc4930d2e1279269b2001c77bc717a5a1788e6157bf937e3f089ec9e27b0a7ab4eab11c25eec1918045300\"\n    }\n}'\n\n</code></pre> <p>Result</p> <pre><code>{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"result\": {\n        \"status\": \"OK\",\n        \"string\": \"\"\n    }\n}\n\n</code></pre>"},{"location":"developer/RPC.html#submit-block","title":"Submit Block","text":"<p>Broadcast a new block on the DERO network.</p> <p>Available parameters</p> <p></p> <p>Body</p> <p>cURL Request</p> <pre><code>curl -X POST\\\n  http://127.0.0.1:40402/json_rpc\\\n  -H 'content-type: application/json'\\\n  -d ''\n\n</code></pre> <p>Result</p> <pre><code>NOTE: TODO Example\n\n</code></pre>"},{"location":"developer/RPC.html#get-height","title":"Get Height","text":"<p>Returns the current block height.</p> <p>Available parameters</p> <p>No parameters</p> <p>Body</p> <pre><code>{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"method\": \"DERO.GetHeight\"\n}\n\n</code></pre> <p>cURL Request</p> <pre><code>curl -X POST\\\n  http://127.0.0.1:40402/json_rpc\\\n  -H 'content-type: application/json'\\\n  -d '{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"method\": \"DERO.GetHeight\"\n}'\n\n</code></pre> <p>Result</p> <pre><code>{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"result\": {\n        \"height\": 36210,\n        \"stableheight\": 36202,\n        \"topoheight\": 36210,\n        \"status\": \"OK\"\n    }\n}\n\n</code></pre>"},{"location":"developer/RPC.html#get-block-count","title":"Get Block Count","text":"<p>Returns the total number of blocks in the blockchain.</p> <p>Available parameters</p> <p>No parameters</p> <p>Body</p> <pre><code>{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"method\": \"DERO.GetBlockCount\"\n}\n\n</code></pre> <p>cURL Request</p> <pre><code>curl -X POST\\\n  http://127.0.0.1:40402/json_rpc\\\n  -H 'content-type: application/json'\\\n  -d '{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"method\": \"DERO.GetBlockCount\"\n}'\n\n</code></pre> <p>Result</p> <pre><code>{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"result\": {\n        \"count\": 36215,\n        \"status\": \"OK\"\n    }\n}\n\n</code></pre>"},{"location":"developer/RPC.html#get-last-block-header","title":"Get Last Block Header","text":"<p>Returns the header of the last block of the blockchain.</p> <p>Available parameters</p> <p>No parameters</p> <p>Body</p> <pre><code>{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"method\": \"DERO.GetLastBlockHeader\"\n}\n\n</code></pre> <p>cURL Request</p> <pre><code>curl -X POST\\\n  http://127.0.0.1:40402/json_rpc\\\n  -H 'content-type: application/json'\\\n  -d '{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"method\": \"DERO.GetLastBlockHeader\"\n}'\n\n</code></pre> <p>Result</p> <pre><code>{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"result\": {\n        \"block_header\": {\n            \"depth\": 0,\n            \"difficulty\": \"27629\",\n            \"hash\": \"b8e540f25322e51492005c78f29f6809f601a9e6f4a89c87d10bd035a73e770b\",\n            \"height\": 36224,\n            \"topoheight\": 36224,\n            \"major_version\": 1,\n            \"minor_version\": 1,\n            \"nonce\": 0,\n            \"orphan_status\": false,\n            \"syncblock\": false,\n            \"sideblock\": false,\n            \"txcount\": 85,\n            \"reward\": 0,\n            \"tips\": [\n                \"9633dad8e3cd7589959fcdf1c3dcaabe3a9e4da7bf64f929abc685c07e859874\"\n            ],\n            \"timestamp\": 1643998300007\n        },\n        \"status\": \"OK\"\n    }\n}\n\n</code></pre>"},{"location":"developer/RPC.html#get-block-template","title":"Get Block Template","text":"<p>Return the Block Template to find a new block.</p> <p>Available parameters</p> <p></p> <p>Body</p> <pre><code>{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"method\": \"DERO.GetBlockTemplate\",\n    \"params\": {\n        \"wallet_address\": \"deto1qyyhg0xznkaxt5udct6lnlylsexvwprun6jphv89xg008vq29jk4vqqayuknf\",\n        \"block\": true,\n        \"miner\": \"Slixe\"\n    }\n}\n\n</code></pre> <p>cURL Request</p> <pre><code>curl -X POST\\\n  http://127.0.0.1:40402/json_rpc\\\n  -H 'content-type: application/json'\\\n  -d '{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"method\": \"DERO.GetBlockTemplate\",\n    \"params\": {\n        \"wallet_address\": \"deto1qyyhg0xznkaxt5udct6lnlylsexvwprun6jphv89xg008vq29jk4vqqayuknf\",\n        \"block\": true,\n        \"miner\": \"Slixe\"\n    }\n}'\n\n</code></pre> <p>Result</p> <pre><code>{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"result\": {\n        \"jobid\": \"1643998645692.0.Slixe\",\n        \"blocktemplate_blob\": \"01010000017ec5f48dbc929b02010000021f9bcc1208dee302769931ad378a4c0c4b2c21b0cfb3e752607e12d2b6fa642500000000000000000000000000000000000000000000000000000000000000000001261d40140457b0cdbaf4b0d9c4a84d1a463e58dd640c1b9ce751735a0181528b09415d500000008d92261d4014000000001c705e03cba898cbab3683bf1f8cfd2400000000b0a397487357400b629e850241609a0000008d92261d401400000000cf01bc87c4a923fb34d51ac483aaf90b000000006e1499c694a04f7e197e55004161780000008d92261d401400000000eec07ce3efc1425bc0ad7e8c72d13b0500000000bad6dedbe2ac2958ed0c14004166180000008d92261d4014000000001c705e03cba898cbab3683bf1f8cfd240000000098b034fc16a4920b62bfb5034166a40000008d92261d401400000000fe9adfc28bacbdc815b3cd6b1e7fbc530000000026f43d2afb08c33e2579f700416fb50000008d92261d401400000000c3443540c243d11f706b6836d516a955000000002ed78a184271890c492571014171b90000008d92261d401400000000eec07ce3efc1425bc0ad7e8c72d13b05000000008f78534809752558ed2998004171970000008d92261d401400000000cf01bc87c4a923fb34d51ac483aaf90b0000000011c8b696eb90437e19bfa700417f550000008d92261d401400000000c3443540c243d11f706b6836d516a95500000000be142fad0edb0151395db60042a9f4782c542379ac7dfbca3fe99f80270cc4a2cdddbdcf173bffc7f026c567c2ed5583e12e08a9abdb358a28a3499fbab49b024914066f4d29d82b311195d3e42a7277cdcc6a7f9e105c35efbbcc9099fd563f28d2ddf8b14add0a93945f521278673c1f38885654752e44097dfd25bfc9f1e337f4457dd0248cec74bc4ca4aeb2427df130fa8cce24150854dd9dffa3670d5e9fd57a90987c9e0db07e122c3e08ee12c4f82c10f37a6dfe0f69fcd4ff6e482526781b9dd7e4a35a7891072f8d62fd342778f3eabddb14eceede4e310ddac280a8b372484108ea8c8e1dc39986f36a7e28904ca5aae7416a0d33e94e9a93a10220e1d79730f15689f83d8bfcdd16298c5e340d36cf27a18e6446fbda3ebe6b7889786d1ebca318f3b7f51244ed7b097d55e6b283dc8ddc3fb073bbd4fc6a84e599667674abb01cdd0d5b8474dc2f8be7ecef537cdb9e489557bdedaa2e7c48bebb663d82e79546a53d61f768a54eb7ef7bacd8d154672677067b069de1c0af7b5ac537b22d25fc3be164d4934b90e6bbcb9e75b2999392def043662e54125055fcbc03477dfa56bea59626fc513e75eadc492f817a104e94b1f14501941063ca4583f9ed6224302a5930fac34b9659a780fafa9af0cc7a6b9626c7b63d75c76c14b074ed8128172f8ca81f106dd909820b9b3b6ca5258420a71a11410e753950fd89b229574db162eecc92ab5b195827c059bfbf21c7c40be92c915cf733c90c5dee3001669e73c729e2d85bcd4245797152e427b1b265c2edc82d76db40559c77b69a9da2152ef4d0d8eefff4550c3350211057c2f9b5d49d9c8cf0ca9366b0c2e5dec651c49a8ac0fd01b21bcef566ceb5838ef5f0875c01414563a52de084d6d90e20da8f7b7dd5db65b7008ac385b150e6a371c34d8085a5b24d0b101b9965b35fa66ac082e926fcaa0088e830b9b66f941c6593d20226bda3f306dce0df36b6a52c8d831dcb343ccd4a92454d27949ae59cb9108d6d563f20f101744c62e24cc903f2eec88a4dea446e49288c05e139cd163a8918e6619e15aa2578660a220ca2d3ce0d3f93cfc929795fc63d93f66e26b6777898a619f18ce6d62df8bb1fe060dcf3fe5fa953543c254162efa7eb35b7a572646ecc2cc23a97d75e7def28a2542d8bd237b19d104733013ded66ba85e9a1c296628d56dc73fbc7d6159161ef0418d37280eb5f8de5002ab5eb767810a950de6e0fcb65e567db21fc7e208b7a8f8789b848642ec35691c98657c5b6c33f7b05e3937b74f312a52f20901674d215e73bedb53a859eb4e8910f35a47b2375ec4210d5b52d7ace224ab20b8e3551f040b11d016c2b6a4734d44c1023079a8196d5d57bae4a03e03e920fe1649dbb01e671f4a01beb85e90a4b4347cd843b31c5e18052b381d70a71c6fd0fb664a78056a3ae92be19373bf11124f799cb29fcb6f5c4c2db63bc169ac5f0852d3dff667615c47cfc278b2153026c9c4c10f6f3ed5ff6ad575206d1c2f5806788619f8577516bd5d6e8ed58f47fdc135a5d6196729eec1bcdb597c27727c17562baa6d35aa5b898fa4e63d8b2aa5bef53bfed13fe05c707eda80b7e4833728fa0348508959adf0c5d55c1334e1f77bffda45238ef5858a65994c06fc8243ae37e49d5ca103e5c3894963c9ffa189764929162edff317d6d591966aee7f24e1fa196e50078003882a608cdf7dc8948e3a20513bda589574bd9ccb68100ade9af11e37871b938361fafd3dd9a8d2d6c8d233d94ca2f1b838e14618d7289addf834543687d61766a7ac20f164268301875ef7b048e4b0ddf8ad349c83cc42bc620f0c4b45faa484609aeb56e82f811354df0ad17a485c3e4afe2d908743fa15939ebb7dc293bb7b3a37266f8c7277e4279ab45771df087e5af389a65929718637cac2c55720753fa7f4162f0e23f389d90932c20172e4012d87e818e35a3b46f6956be6210b501bfa3a658656af9aec6033436b752a17a8606e6f101978167308f1969aa98e107d64a3598fef0edbc8a24733e40716d025dd31ba8d15dbf2321741e4962ff4b327bb355cec55e762023d08847e6a10004f3212d98ddbede12485a894f7c8802bbc94d5073f737d25d078af7880053ead4a5eb2c7989c46eb122345f4e6d9fef3f405fb5da4998d8f04aea21d568f3b72203e1f7f1e9e09ccc8fe22ea7c31614929422ddd45e09e59f65adfc6fcf8b137d65afb965cf23db5fb23614ae6656bf6959e2dcdbcea6f6976701ae86db4ae15933c645c39c5186d9937d207e224aeffe1e43cdebc01c23b917afd1a8669399e965157e59ff0c4417a9fee42737e3bbbdbb3714d9a057b315103f55dce2fc92973c9a9c60403d92b534f65532672a7363f116623ef60425cf12959ca9209b4c065c2c4e30e21d30eb116734f10d3d1a630dacafe264804b5d500109e14c79beab1f13db202b7db79c96d0127fa1b7540219b682534bd55d7eae6e799bbaaba07df7ecfa4c9e8142e45b3973174185aba6ed8c7ef81b650430ab066a44715c3609cda984e389e78d26bc2170ad0a4c6d41478665739a720c28ed742b571dfb8adc8bdb9a3e31c977afbe0582be9eee24a27cc9d7ec467a81d9a954cbe77b1fe515581b0909a8e26b7e311dea1e3c75edf275bf0472a94c8d8a4160dd1a7923c6ed895c6ec7723c146079fbe11857cecacd7ec5d18523399bb1653688f8473d0eb6bd4caf9609f070a1d7beb571257c16d68c8ff0ef56b49e87dfaa8fe49f04dc9b71c7ded23534ea9f127ae5022f863e2ea12b7e79988464fe3b9db79d2d96808be48d457704eb9bcb395790d157673f979fefc1b45f665607a6c0ebb361818e6c944a6e387f9dea4d3787ba07f1cc7c7777c0f67c0eb41d3f1b8f10860a654831d2c7367a50c50bebf1bd52f1b663e0e0ad8e251440c7a31f912a3680dbb75af7337ba99f01d0960093d0b650a6675a93075a741d74bde710\",\n        \"blockhashing_blob\": \"718dbc0000008d92261d401400000000f72775df1c4e71027a72003ffae0d6bf0000000082d75d4203254f1d719fba2e\",\n        \"difficulty\": \"20614\",\n        \"difficultyuint64\": 20614,\n        \"height\": 36242,\n        \"prev_hash\": \"261d40140457b0cdbaf4b0d9c4a84d1a463e58dd640c1b9ce751735a0181528b\",\n        \"epochmilli\": 0,\n        \"blocks\": 0,\n        \"miniblocks\": 0,\n        \"lasterror\": \"\",\n        \"status\": \"OK\"\n    }\n}\n\n</code></pre>"},{"location":"developer/RPC.html#get-encrypted-balance","title":"Get Encrypted Balance","text":"<p>Returns the balance of the selected asset from a valid DERO address.</p> <p>Available parameters</p> <p></p> <p>Body</p> <pre><code>{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"method\": \"DERO.GetEncryptedBalance\",\n    \"params\": {\n        \"address\": \"deto1qyyhg0xznkaxt5udct6lnlylsexvwprun6jphv89xg008vq29jk4vqqayuknf\",\n        \"topoheight\": -1\n    }\n}\n\n</code></pre> <p>cURL Request</p> <pre><code>curl -X POST\\\n  http://127.0.0.1:40402/json_rpc\\\n  -H 'content-type: application/json'\\\n  -d '{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"method\": \"DERO.GetEncryptedBalance\",\n    \"params\": {\n        \"address\": \"deto1qyyhg0xznkaxt5udct6lnlylsexvwprun6jphv89xg008vq29jk4vqqayuknf\",\n        \"topoheight\": -1\n    }\n}'\n\n</code></pre> <p>Result</p> <pre><code>{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"result\": {\n        \"scid\": \"0000000000000000000000000000000000000000000000000000000000000000\",\n        \"data\": \"aff7011376c6b7c6682d2410e5cab55b075221818f815743969c94cd9c7e2a2ff28b8e002db1812376e8846b66aa56f9e2d2ec0230e7b658efba875bd877dd43ac197c6801\",\n        \"registration\": 31281,\n        \"bits\": 20,\n        \"height\": 36261,\n        \"topoheight\": 36261,\n        \"blockhash\": \"987ad08aa23ad24a32862d085c451369e7b1b21e478369ea63aa9e4e0b81050f\",\n        \"treehash\": \"a823f22d9d50e55bc1d1372be0e9287ebc2eb6bbeb4d0ec86f83a2b8a3c394b8\",\n        \"dheight\": 36261,\n        \"dtopoheight\": 36261,\n        \"dtreehash\": \"a823f22d9d50e55bc1d1372be0e9287ebc2eb6bbeb4d0ec86f83a2b8a3c394b8\",\n        \"status\": \"OK\"\n    }\n}\n\n</code></pre> <p>NOTE:\u00a0the value of topoheight is set to -1 in the request to retrieve from the last block directly.</p>"},{"location":"developer/RPC.html#get-smart-contract","title":"Get Smart Contract","text":"<p>Returns information related to a Smart Contract.</p> <p>Available parameters</p> <p></p> <p>Body</p> <pre><code>{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"method\": \"DERO.GetSC\",\n    \"params\": {\n        \"scid\": \"0000000000000000000000000000000000000000000000000000000000000001\",\n        \"code\": true,\n        \"variables\": true\n    }\n}\n\n</code></pre> <p>cURL Request</p> <pre><code>curl -X POST\\\n  http://127.0.0.1:40402/json_rpc\\\n  -H 'content-type: application/json'\\\n  -d '{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"method\": \"DERO.GetSC\",\n    \"params\": {\n        \"scid\": \"0000000000000000000000000000000000000000000000000000000000000001\",\n        \"code\": true,\n        \"variables\": true\n    }\n}'\n\n</code></pre> <p>Result</p> <pre><code>{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"result\": {\n        \"stringkeys\": {\n            \"C\": \"2f2a204e616d65205365727669636520534d41525420434f4e545241435420696e2044564d2d42415349432e20200a202020416c6c6f77732061207573657220746f207265676973746572206e616d657320776869636820636f756c64206265206c6f6f6b65642062792077616c6c65747320666f72206561737920746f20757365206e616d65207768696c65207472616e736665720a2a2f0a0a0a202f2f20546869732066756e6374696f6e206973207573656420746f20696e697469616c697a6520706172616d657465727320647572696e6720696e7374616c6c2074696d650a0946756e6374696f6e20496e697469616c697a6528292055696e7436340a093130202052455455524e2030200a09456e642046756e6374696f6e200a0a202020202f2f2052656769737465722061206e616d652c206c696d6974206e616d6573206f662035206f72206c657373206c656e6774680a2020202046756e6374696f6e205265676973746572286e616d6520537472696e67292055696e743634200a0931302020494620455849535453286e616d6529205448454e20474f544f2035302020202f2f206966206e616d6520697320616c726561647920757365642c2069742063616e6e6f74207265726567697374657265640a09313520204946205354524c454e286e616d6529203e3d203634205448454e20474f544f203530202f2f20736b6970206e616d6573206d69737573650a09323020204946205354524c454e286e616d6529203e3d2036205448454e20474f544f203430200a09333020204946205349474e45522829203d3d20616464726573735f72617728226465746f317179767965797a72636d32667a66366b79713765676b6573327566676e7935786e3737793674797068667839733777336d767964357171796e723568782229205448454e20474f544f2034300a09333520204946205349474e4552282920213d20616464726573735f72617728226465746f3171793065686e716a7072307778716e6b6e79633636647532667378796b7470706b72386d3865366a76706c703935346b6c666a7a327171647a636438702229205448454e20474f544f203530200a093430202053544f5245286e616d652c5349474e45522829290a093530202052455455524e20300a09456e642046756e6374696f6e0a0a2020090a092f2f20546869732066756e6374696f6e206973207573656420746f206368616e6765206f776e6572200a092f2f206f776e657220697320616e20737472696e6720666f726d206f662061646472657373200a0946756e6374696f6e205472616e736665724f776e657273686970286e616d6520537472696e672c6e65776f776e657220537472696e67292055696e743634200a09313020204946204c4f4144286e616d652920213d205349474e45522829205448454e20474f544f203330200a093230202053544f5245286e616d652c414444524553535f524157286e65776f776e657229290a093330202052455455524e20300a09456e642046756e6374696f6e0a090a\",\n            \"captain\": \"07169e14f6a6efb41522a0a0503ef59bf221ef89072903998cc7b599ad5351d801\"\n        },\n        \"balances\": {\n            \"0000000000000000000000000000000000000000000000000000000000000000\": 0\n        },\n        \"balance\": 0,\n        \"code\": \"/* Name Service SMART CONTRACT in DVM-BASIC.  \\n   Allows a user to register names which could be looked by wallets for easy to use name while transfer\\n*/\\n\\n\\n // This function is used to initialize parameters during install time\\n\\tFunction Initialize() Uint64\\n\\t10  RETURN 0 \\n\\tEnd Function \\n\\n    // Register a name, limit names of 5 or less length\\n    Function Register(name String) Uint64 \\n\\t10  IF EXISTS(name) THEN GOTO 50   // if name is already used, it cannot reregistered\\n\\t15  IF STRLEN(name) &gt;= 64 THEN GOTO 50 // skip names misuse\\n\\t20  IF STRLEN(name) &gt;= 6 THEN GOTO 40 \\n\\t30  IF SIGNER() == address_raw(\\\"deto1qyvyeyzrcm2fzf6kyq7egkes2ufgny5xn77y6typhfx9s7w3mvyd5qqynr5hx\\\") THEN GOTO 40\\n\\t35  IF SIGNER() != address_raw(\\\"deto1qy0ehnqjpr0wxqnknyc66du2fsxyktppkr8m8e6jvplp954klfjz2qqdzcd8p\\\") THEN GOTO 50 \\n\\t40  STORE(name,SIGNER())\\n\\t50  RETURN 0\\n\\tEnd Function\\n\\n  \\t\\n\\t// This function is used to change owner \\n\\t// owner is an string form of address \\n\\tFunction TransferOwnership(name String,newowner String) Uint64 \\n\\t10  IF LOAD(name) != SIGNER() THEN GOTO 30 \\n\\t20  STORE(name,ADDRESS_RAW(newowner))\\n\\t30  RETURN 0\\n\\tEnd Function\\n\\t\\n\",\n        \"status\": \"OK\"\n    }\n}\n\n</code></pre>"},{"location":"developer/RPC.html#get-gas-estimate","title":"Get Gas Estimate","text":"<p>Returns the total costs (= storage and compute) to be paid for a call on a function of a Smart Contract.</p> <p>Available parameters</p> <p></p> <p>Body</p> <pre><code>{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"method\": \"DERO.GetGasEstimate\",\n    \"params\": {\n        \"transfers\": [],\n        \"sc_rpc\": [{\n            \"name\": \"SC_ACTION\",\n            \"datatype\": \"U\",\n            \"value\": 0\n        },\n        {\n            \"name\": \"SC_ID\",\n            \"datatype\": \"H\",\n            \"value\": \"0000000000000000000000000000000000000000000000000000000000000001\"\n        },\n        {\n            \"name\": \"entrypoint\",\n            \"datatype\": \"S\",\n            \"value\": \"Register\"\n        },\n        {\n            \"name\": \"name\",\n            \"datatype\": \"S\",\n            \"value\": \"Slixe\"\n        }],\n        \"signer\": \"deto1qyyhg0xznkaxt5udct6lnlylsexvwprun6jphv89xg008vq29jk4vqqayuknf\"\n    }\n}\n\n</code></pre> <p>cURL Request</p> <pre><code>curl -X POST\\\n  http://127.0.0.1:40402/json_rpc\\\n  -H 'content-type: application/json'\\\n  -d '{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"method\": \"DERO.GetGasEstimate\",\n    \"params\": {\n        \"transfers\": [],\n        \"sc_rpc\": [{\n            \"name\": \"SC_ACTION\",\n            \"datatype\": \"U\",\n            \"value\": 0\n        },\n        {\n            \"name\": \"SC_ID\",\n            \"datatype\": \"H\",\n            \"value\": \"0000000000000000000000000000000000000000000000000000000000000001\"\n        },\n        {\n            \"name\": \"entrypoint\",\n            \"datatype\": \"S\",\n            \"value\": \"Register\"\n        },\n        {\n            \"name\": \"name\",\n            \"datatype\": \"S\",\n            \"value\": \"Slixe\"\n        }],\n        \"signer\": \"deto1qyyhg0xznkaxt5udct6lnlylsexvwprun6jphv89xg008vq29jk4vqqayuknf\"\n    }\n}'\n\n</code></pre> <p>Result</p> <pre><code>{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"result\": {\n        \"gascompute\": 208200,\n        \"gasstorage\": 88,\n        \"status\": \"OK\"\n    }\n}\n\n</code></pre>"},{"location":"developer/RPC.html#name-to-address","title":"Name To Address","text":"<p>Returns the DERO address associated with the registered name.</p> <p>Available parameters</p> <p></p> <p>Body</p> <pre><code>{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"method\": \"DERO.NameToAddress\",\n    \"params\": {\n        \"name\": \"captain\",\n        \"topoheight\": -1\n    }\n}\n\n</code></pre> <p>cURL Request</p> <pre><code>curl -X POST\\\n  http://127.0.0.1:40402/json_rpc\\\n  -H 'content-type: application/json'\\\n  -d '{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"method\": \"DERO.NameToAddress\",\n    \"params\": {\n        \"name\": \"captain\",\n        \"topoheight\": -1\n    }\n}'\n\n</code></pre> <p>Result</p> <pre><code>{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"result\": {\n        \"name\": \"captain\",\n        \"address\": \"deto1qyr3d8s576nwldq4y2s2q5p77kdlyg003yrjjque3nrmtxdd2dgasqgm94m7v\",\n        \"status\": \"OK\"\n    }\n}\n\n</code></pre>"},{"location":"developer/RPC.html#wallet-rpc-api","title":"Wallet RPC API","text":"<p>First, note that the RPC server is not enabled by default on the wallet, to do this, start the wallet with the --rpc-server parameter.</p> <p>The RPC server will listen on port 40403 on testnet.</p>"},{"location":"developer/RPC.html#echo_1","title":"Echo","text":"<p>Test endpoint to verify that the RPC server is enabled and working well on the wallet side.</p> <p>Available parameters</p> <p></p> <p>Body</p> <pre><code>{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"method\": \"Echo\",\n    \"params\": [\"Hello\", \"World\", \"!\"]\n}\n\n</code></pre> <p>cURL Request</p> <pre><code>curl -X POST\\\n  http://127.0.0.1:40403/json_rpc\\\n  -H 'content-type: application/json'\\\n  -d '{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"method\": \"Echo\",\n    \"params\": [\"Hello\", \"World\", \"!\"]\n}'\n\n</code></pre> <p>Result</p> <pre><code>{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"result\": \"WALLET Hello World !\"\n}\n\n</code></pre>"},{"location":"developer/RPC.html#get-address","title":"Get Address","text":"<p>Returns the DERO address of the wallet to receive DEROs or other tokens.</p> <p>Available parameters</p> <p>No parameters</p> <p>Body</p> <pre><code>{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"method\": \"GetAddress\"\n}\n\n</code></pre> <p>cURL Request</p> <pre><code>curl -X POST\\\n  http://127.0.0.1:40403/json_rpc\\\n  -H 'content-type: application/json'\\\n  -d '{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"method\": \"GetAddress\"\n}'\n\n</code></pre> <p>Result</p> <pre><code>{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"result\": {\n        \"address\": \"deto1qyyhg0xznkaxt5udct6lnlylsexvwprun6jphv89xg008vq29jk4vqqayuknf\"\n    }\n}\n\n</code></pre>"},{"location":"developer/RPC.html#get-balance","title":"Get Balance","text":"<p>Retrieves the current balance of the wallet.</p> <p>Available parameters</p> <p>No parameters</p> <p>Body</p> <pre><code>{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"method\": \"GetBalance\"\n}\n\n</code></pre> <p>cURL Request</p> <pre><code>curl -X POST\\\n  http://127.0.0.1:40403/json_rpc\\\n  -H 'content-type: application/json'\\\n  -d '{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"method\": \"GetBalance\"\n}'\n\n</code></pre> <p>Result</p> <pre><code>{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"result\": {\n        \"balance\": 800000,\n        \"unlocked_balance\": 800000\n    }\n}\n\n</code></pre> <p>NOTE:\u00a0The amount is in atomic format. As a reminder, 10^5 (=100000) is equivalent to 1 DERO.</p> <p>Warning:\u00a0if this address is not registered on the blockchain, you will get this error:</p> <pre><code>{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"error\": {\n        \"code\": -32098,\n        \"message\": \"Account Unregistered\"\n    }\n}\n\n</code></pre>"},{"location":"developer/RPC.html#get-height_1","title":"Get Height","text":"<p>Returns at which block height the wallet is synchronized.</p> <p>Available parameters</p> <p>No parameters</p> <p>Body</p> <pre><code>{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"method\": \"GetHeight\"\n}\n\n</code></pre> <p>cURL Request</p> <pre><code>curl -X POST\\\n  http://127.0.0.1:40403/json_rpc\\\n  -H 'content-type: application/json'\\\n  -d '{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"method\": \"GetHeight\"\n}'\n\n</code></pre> <p>Result</p> <pre><code>{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"result\": {\n        \"height\": 420\n    }\n}\n\n</code></pre>"},{"location":"developer/RPC.html#get-transfer-by-txid","title":"Get Transfer by TXID","text":"<p>Returns the details of the transaction based on its hash.</p> <p>Available parameters</p> <p></p> <p>Body</p> <pre><code>{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"method\": \"GetTransferbyTXID\",\n    \"params\": {\n        \"txid\": \"2a74bcc6262f48630967129793f3b87dc30236f2cb5df6ebb09d620ec0cb503a\"\n    }\n}\n\n</code></pre> <p>cURL Request</p> <pre><code>curl -X POST\\\n  http://127.0.0.1:40403/json_rpc\\\n  -H 'content-type: application/json'\\\n  -d '{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"method\": \"GetTransferbyTXID\",\n    \"params\": {\n        \"txid\": \"2a74bcc6262f48630967129793f3b87dc30236f2cb5df6ebb09d620ec0cb503a\"\n    }\n}'\n\n</code></pre> <p>Result</p> <pre><code>{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"result\": {\n        \"entry\": {\n            \"height\": 31297,\n            \"topoheight\": 31297,\n            \"blockhash\": \"44e010e6ae56e66e75b158871570233a8a8b918491efc2d02ce793a7ce258612\",\n            \"minerreward\": 0,\n            \"tpos\": 17,\n            \"pos\": 0,\n            \"coinbase\": false,\n            \"incoming\": true,\n            \"txid\": \"2a74bcc6262f48630967129793f3b87dc30236f2cb5df6ebb09d620ec0cb503a\",\n            \"destination\": \"\",\n            \"amount\": 500000,\n            \"fees\": 451,\n            \"proof\": \"deroproof1qy3zfvkwdz87xa7mvxc0qq7nsmcgkl3gsf00a2amhk7fs2yu09r4uqdzvfyyskpqckdxyd8vgtzd75mjujsyzj6swrfdy6gw7alx78ak23v6ql60ewqxy4j4rgqq0gfqsjjq9u\",\n            \"status\": 0,\n            \"time\": \"2022-02-03T17:51:16.006+01:00\",\n            \"ewdata\": \"2efc785f92e9ffdaf1935186e0ffe561e500632722c73f95e741136389a347b8002642ae3d734c6b119a28884920036e895fc8e6a33f9c4ec6d90da1a4d1b65ef901\",\n            \"data\": \"AqFoQ29tbWVudFNySGVsbG8gZnJvbSBTbGl4ZSAhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n            \"payloadtype\": 0,\n            \"payload\": \"oWhDb21tZW50U3JIZWxsbyBmcm9tIFNsaXhlICEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\",\n            \"payload_rpc\": [\n                {\n                    \"name\": \"Comment\",\n                    \"datatype\": \"S\",\n                    \"value\": \"Hello from Slixe !\"\n                }\n            ],\n            \"sender\": \"deto1qyj4kx6azntn9psmg7dsfkuv9qs9xde0s94nmmhm2a0damffpm2zzqqcudacc\",\n            \"dstport\": 0,\n            \"srcport\": 0\n        }\n    }\n}\n\n</code></pre>"},{"location":"developer/RPC.html#get-transfers","title":"Get Transfers","text":"<p>Returns all transactions present in the portfolio against the applied filters.</p> <p>Available parameters</p> <p></p> <p>Body</p> <pre><code>{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"method\": \"GetTransfers\",\n    \"params\": {\n        \"out\": true,\n        \"in\": true\n    }\n}\n\n</code></pre> <p>cURL Request</p> <pre><code>curl -X POST\\\n  http://127.0.0.1:40403/json_rpc\\\n  -H 'content-type: application/json'\\\n  -d '{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"method\": \"GetTransfers\",\n    \"params\": {\n        \"out\": true,\n        \"in\": true\n    }\n}'\n\n</code></pre> <p>Result</p> <pre><code>{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"result\": {\n        \"entries\": [\n            {\n                \"height\": 31297,\n                \"topoheight\": 31297,\n                \"blockhash\": \"44e010e6ae56e66e75b158871570233a8a8b918491efc2d02ce793a7ce258612\",\n                \"minerreward\": 0,\n                \"tpos\": 17,\n                \"pos\": 0,\n                \"coinbase\": false,\n                \"incoming\": true,\n                \"txid\": \"2a74bcc6262f48630967129793f3b87dc30236f2cb5df6ebb09d620ec0cb503a\",\n                \"destination\": \"\",\n                \"amount\": 500000,\n                \"fees\": 451,\n                \"proof\": \"deroproof1qy3zfvkwdz87xa7mvxc0qq7nsmcgkl3gsf00a2amhk7fs2yu09r4uqdzvfyyskpqckdxyd8vgtzd75mjujsyzj6swrfdy6gw7alx78ak23v6ql60ewqxy4j4rgqq0gfqsjjq9u\",\n                \"status\": 0,\n                \"time\": \"2022-02-03T17:51:16.006+01:00\",\n                \"ewdata\": \"2efc785f92e9ffdaf1935186e0ffe561e500632722c73f95e741136389a347b8002642ae3d734c6b119a28884920036e895fc8e6a33f9c4ec6d90da1a4d1b65ef901\",\n                \"data\": \"AqFoQ29tbWVudFNySGVsbG8gZnJvbSBTbGl4ZSAhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n                \"payloadtype\": 0,\n                \"payload\": \"oWhDb21tZW50U3JIZWxsbyBmcm9tIFNsaXhlICEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\",\n                \"payload_rpc\": [\n                    {\n                        \"name\": \"Comment\",\n                        \"datatype\": \"S\",\n                        \"value\": \"Hello from Slixe !\"\n                    }\n                ],\n                \"sender\": \"deto1qyj4kx6azntn9psmg7dsfkuv9qs9xde0s94nmmhm2a0damffpm2zzqqcudacc\",\n                \"dstport\": 0,\n                \"srcport\": 0\n            }\n        ]\n    }\n}\n\n</code></pre>"},{"location":"developer/RPC.html#make-integrated-address","title":"Make Integrated Address","text":"<p>Returns a new integrated address with Payloads included.</p> <p>Available parameters</p> <p></p> <p>Body</p> <pre><code>{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"method\": \"MakeIntegratedAddress\",\n    \"params\": {\n        \"payload_rpc\": [\n            {\n                \"name\": \"Comment\",\n                \"datatype\": \"S\",\n                \"value\": \"Hello from integrated address !\"\n            }\n        ]\n    }\n}\n\n</code></pre> <p>cURL Request</p> <pre><code>curl -X POST\\\n  http://127.0.0.1:40403/json_rpc\\\n  -H 'content-type: application/json'\\\n  -d '{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"method\": \"MakeIntegratedAddress\",\n    \"params\": {\n        \"payload_rpc\": [\n            {\n                \"name\": \"Comment\",\n                \"datatype\": \"S\",\n                \"value\": \"Hello from integrated address !\"\n            }\n        ]\n    }\n}'\n\n</code></pre> <p>Result</p> <pre><code>{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"result\": {\n        \"integrated_address\": \"detoi1qyyhg0xznkaxt5udct6lnlylsexvwprun6jphv89xg008vq29jk4vq9pdppk7mtdv4h8g5mcrayx2mrvdusxvun0d5sxjmn5v4nhyct5v4jzqctyv3ex2umnyqssvnqraw\",\n        \"payload_rpc\": [\n            {\n                \"name\": \"Comment\",\n                \"datatype\": \"S\",\n                \"value\": \"Hello from integrated address !\"\n            }\n        ]\n    }\n}\n\n</code></pre>"},{"location":"developer/RPC.html#split-integrated-address","title":"Split Integrated Address","text":"<p>Returns the DERO address and the payloads included in an Integrated Address.</p> <p>Available parameters</p> <p></p> <p>Body</p> <pre><code>{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"method\": \"SplitIntegratedAddress\",\n    \"params\": {\n        \"integrated_address\": \"detoi1qyyhg0xznkaxt5udct6lnlylsexvwprun6jphv89xg008vq29jk4vq9pdppk7mtdv4h8g5mcrayx2mrvdusxvun0d5sxjmn5v4nhyct5v4jzqctyv3ex2umnyqssvnqraw\"\n    }\n}\n\n</code></pre> <p>cURL Request</p> <pre><code>curl -X POST\\\n  http://127.0.0.1:40403/json_rpc\\\n  -H 'content-type: application/json'\\\n  -d '{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"method\": \"SplitIntegratedAddress\",\n    \"params\": {\n        \"integrated_address\": \"detoi1qyyhg0xznkaxt5udct6lnlylsexvwprun6jphv89xg008vq29jk4vq9pdppk7mtdv4h8g5mcrayx2mrvdusxvun0d5sxjmn5v4nhyct5v4jzqctyv3ex2umnyqssvnqraw\"\n    }\n}'\n\n</code></pre> <p>Result</p> <pre><code>{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"result\": {\n        \"address\": \"deto1qyyhg0xznkaxt5udct6lnlylsexvwprun6jphv89xg008vq29jk4vqqayuknf\",\n        \"payload_rpc\": [\n            {\n                \"name\": \"Comment\",\n                \"datatype\": \"S\",\n                \"value\": \"Hello from integrated address !\"\n            }\n        ]\n    }\n}\n\n</code></pre>"},{"location":"developer/RPC.html#query-key","title":"Query Key","text":"<p>Returns the mnemonic key (seed) associated with this portfolio.</p> <p>Available parameters</p> <p></p> <p>Body</p> <pre><code>{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"method\": \"QueryKey\",\n    \"params\": {\n        \"key_type\": \"mnemonic\"\n    }\n}\n\n</code></pre> <p>cURL Request</p> <pre><code>curl -X POST\\\n  http://127.0.0.1:40403/json_rpc\\\n  -H 'content-type: application/json'\\\n  -d '{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"method\": \"QueryKey\",\n    \"params\": {\n        \"key_type\": \"mnemonic\"\n    }\n}'\n\n</code></pre> <p>Result</p> <pre><code>{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"result\": {\n        \"key\": \"eavesdrop sailor tavern fizzle mammal were utmost stellar rafts vats dedicated dosage lynx cent after toyed coexist zippers lipstick aztec dedicated custom chrome onto launching\"\n    }\n}\n\n</code></pre>"},{"location":"developer/RPC.html#transfer","title":"Transfer","text":"<p>Creates a transaction and returns its hash</p> <p>Available parameters</p> <p></p> <p>Body</p> <pre><code>{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"method\": \"transfer\",\n    \"params\": {\n        \"scid\": \"00000000000000000000000000000000\",\n        \"destination\": \"deto1qyj4kx6azntn9psmg7dsfkuv9qs9xde0s94nmmhm2a0damffpm2zzqqcudacc\",\n        \"amount\": 100000\n    }\n}\n\n</code></pre> <p>cURL Request</p> <pre><code>curl -X POST\\\n  http://127.0.0.1:40403/json_rpc\\\n  -H 'content-type: application/json'\\\n  -d '{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"method\": \"transfer\",\n    \"params\": {\n        \"scid\": \"00000000000000000000000000000000\",\n        \"destination\": \"deto1qyj4kx6azntn9psmg7dsfkuv9qs9xde0s94nmmhm2a0damffpm2zzqqcudacc\",\n        \"amount\": 100000\n    }\n}'\n\n</code></pre> <p>Result</p> <pre><code>{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"result\": {\n        \"txid\": \"5201c319d04fb72012ecb2fd8c903feff50bbd5db39c60dfee795b9b3a90433a\"\n    }\n}\n\n</code></pre>"},{"location":"developer/RPC.html#transfer-2","title":"Transfer 2","text":"<p>Creates a transaction to several distinct addresses and returns its hash.</p> <p>Available parameters</p> <p></p> <p>Body</p> <pre><code>{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"method\": \"transfer\",\n    \"params\": {\n        \"transfers\": [{\n            \"destination\": \"deto1qyj4kx6azntn9psmg7dsfkuv9qs9xde0s94nmmhm2a0damffpm2zzqqcudacc\",\n            \"amount\": 100000\n        },\n        {\n            \"destination\": \"deto1qydvjhl67a3hmcw6zq9yt449extwshzcjxkd7lgk4uhgpyxdr494yqg6zwnc2\",\n            \"amount\": 100000\n        }],\n        \"ringsize\": 32\n    }\n}\n\n</code></pre> <p>cURL Request</p> <pre><code>curl -X POST\\\n  http://127.0.0.1:40403/json_rpc\\\n  -H 'content-type: application/json'\\\n  -d '{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"method\": \"transfer\",\n    \"params\": {\n        \"transfers\": [{\n            \"destination\": \"deto1qyj4kx6azntn9psmg7dsfkuv9qs9xde0s94nmmhm2a0damffpm2zzqqcudacc\",\n            \"amount\": 100000\n        },\n        {\n            \"destination\": \"deto1qydvjhl67a3hmcw6zq9yt449extwshzcjxkd7lgk4uhgpyxdr494yqg6zwnc2\",\n            \"amount\": 100000\n        }],\n        \"ringsize\": 32\n    }\n}'\n\n</code></pre> <p>Result</p> <pre><code>{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"result\": {\n        \"txid\": \"3a2712ae039e3f55b4cee132ec7ab76b912d05b3c1fc2744ae2ddd2c18be893e\"\n    }\n}\n\n</code></pre>"},{"location":"developer/RPC.html#sc-invoke","title":"SC Invoke","text":"<p>Creates a transaction to call a Smart Contract function and returns its hash.</p> <p>Available parameters</p> <p></p> <p>Body</p> <pre><code>{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"method\": \"scinvoke\",\n    \"params\": {\n        \"scid\": \"0000000000000000000000000000000000000000000000000000000000000001\",\n        \"ringsize\": 2,\n        \"sc_rpc\": [{\n            \"name\": \"entrypoint\",\n            \"datatype\": \"S\",\n            \"value\": \"Register\"\n        },\n        {\n            \"name\": \"name\",\n            \"datatype\": \"S\",\n            \"value\": \"Slixe\"\n        }]\n    }\n}\n\n</code></pre> <p>cURL Request</p> <pre><code>curl -X POST\\\n  http://127.0.0.1:40403/json_rpc\\\n  -H 'content-type: application/json'\\\n  -d '{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"method\": \"scinvoke\",\n    \"params\": {\n        \"scid\": \"0000000000000000000000000000000000000000000000000000000000000001\",\n        \"ringsize\": 2,\n        \"sc_rpc\": [{\n            \"name\": \"entrypoint\",\n            \"datatype\": \"S\",\n            \"value\": \"Register\"\n        },\n        {\n            \"name\": \"name\",\n            \"datatype\": \"S\",\n            \"value\": \"Slixe\"\n        }]\n    }\n}'\n\n</code></pre> <p>Result</p> <pre><code>{\n    \"jsonrpc\": \"2.0\",\n    \"id\": \"1\",\n    \"result\": {\n        \"txid\": \"bf4b2cd942f4394a03d0d66bbf8c0639f5cbcbf340becc39d4c9e02f987cecca\"\n    }\n}\n\n</code></pre> <p>Thank you to Slixe for his contribution to this document.</p>"},{"location":"developer/astrobwt.html","title":"AstroBWT","text":""},{"location":"developer/astrobwt.html#dero-astrobwt-cpu-mining-proof-of-work","title":"DERO AstroBWT CPU Mining Proof-of-Work","text":"<p>AstroBWT Mainnet HardFork on block 4550555, March 7,2020. ~0200-GMT. DERO HardFork on block 4550555, March 7,2020. ~0200-GMT.</p>"},{"location":"developer/astrobwt.html#astrobwt-building","title":"AstroBWT Building","text":"<pre><code>    go get -u github.com/deroproject/astrobwt/miner\n\n</code></pre> <p>Sample Output</p> <pre><code>    DERO AstroBWT Miner v0.01 alpha\n    CPU: Intel(R) Xeon(R) CPU E3-1270 v6 @ 3.80GHz    PhysicalThreads:1\n         Threads           Total Time     Total Iterations            Time/PoW         Hash Rate/Sec\n               1         3.272996982s                  100          32.729969ms                 30.6\n               2         3.572288466s                  200          17.861442ms                 56.0\n               3         4.013980986s                  300          13.379936ms                 74.7\n               4         4.704899609s                  400          11.762249ms                 85.0\n               5         5.784798143s                  500          11.569596ms                 86.4\n               6         6.629462384s                  600          11.049103ms                 90.5\n               7         8.351780961s                  700          11.931115ms                 83.8\n               8         10.49473002s                  800          13.118412ms                 76.2\n\n</code></pre>"},{"location":"developer/astrobwt.html#astrobwt-pseudo-code","title":"AstroBWT Pseudo CODE","text":"<pre><code>    1\\. Calulate SHA3-256 of input data\n    2. Expand data using Salsa20  cipher  69371  bytes\n    3. Calculate BWT of step 2\n    4. Calculate SHA3-256 of BWT data\n    5. Expand data using Salsa20  cipher  69371  + random number based on step 4\n    6. Calculate BWT of data from step 5\n    7. Calculate SHA3-256 of BWT data from step 6\n\n</code></pre> <p>More about BWT here</p>"},{"location":"developer/astrobwt.html#explaining-astrobwt","title":"Explaining AstroBWT","text":"<p>AstroBWT is not a product of the current cryptosphere approach. It has roots in Information Theory and the Compression Domains.</p> <ol> <li>AstroBWT is based on mathematical proofs and research, unlike many other CPU mining ALGOs.</li> <li>All current mining algorithms are static. To explain more simply, all current cryptocurrency mining algorithms follow data dependent branches, loops or conditions. Dero also built out a RandomX implementation in Golang that has been discarded for use but open sourced to the public\u00a0<code>RandomX in Golang. &lt;https://git.dero.io/DERO_Foundation/RandomX&gt;</code>_</li> <li>AstroBWT, as the name implies, has BWT at it's core. BWT has been in research for the last 3 decades and numerous optimization attempts of GPU/FPGA have taken place. For more information on that topic, please refer to literature in the Information Theory and Compression Domains. However, all known implementations to this date, could not deliver an improvement even twice that of CPUs.</li> <li>All major providers (such as INTEL, NVIDIA etc) have already provided optimized implementations of BWT. Since, BWT has been used quite often in the general information theory and compression domains, it has been a subject of intensive studies. https://software.intel.com/en-us/ipp-dev-reference-burrows-wheeler-transform</li> <li>In the coming months or years that AstroBWT is optimized or shown to have a significant performance boost on FPGAs, ASICs, or GPUs there would be a benefit for everyone. Such an advancement could even trigger the next revolution in Bioinformatics, Signal Processing, DNA Sequencing or other numerous domains where BWT is used. So, AstroBWT will not only serve as an ASIC/FPGA and GPU resisitant algorithm but it will aslo succeed in helping scientific research if it is optimized for these things.</li> </ol>"},{"location":"developer/astrobwt.html#astrobwt-hash-rates","title":"AstroBWT Hash Rates","text":"<p>Submitted by public</p> <p></p>"},{"location":"developer/dvm.html","title":"DERO Virtual Machine","text":"<p>DERO Virtual Machine represents entire DERO Smart Contracts eco-system which runs on the DERO block chain.</p> <p>Documentation</p> <p>DVM is a decentralized platform that runs both public and private smart contracts: applications that run exactly as programmed without any possibility of downtime, censorship, fraud or third-party interference.Public Smart contracts are open versions. However, the DVM is being designed to support Private Smart Contracts where everything is hidden, eg parties, and information involved. Smart Contracts are nothing but rules which apply on transacting parties.</p> <p>Current version of DVM is an interpretor based system to avoid security vulneribilities, issues and compiler backdoors. This also allows easy audits of Smart Contracts for quality,bug-testing and security assurances. DVM supports a new language DVM-BASIC.</p> <p>DVM apps run on a from scratch custom built privacy supporting, encrypted blockchain, an enormously powerful shared global infrastructure that can move value around and represent the ownership of assets/property without leaking any information.No one knows who owns what and who transferred to whom.</p> <ul> <li>This enables developers to create puzzles, games, voting, markets, store registries of debts or promises, move funds in accordance with instructions given long in the past (like a will or a futures contract) and many other ideas/things that have not been invented yet, all without a middleman or counterparty risk.</li> <li>DVM-BASIC is a contract-oriented, high-level language for implementing smart contracts. It is influenced by GW-BASIC, Visual Basic and C and is designed to target the DERO Virtual Machine (DVM). It is very easy to program and very readable.</li> <li>DVM runs Smart Contracts which are a collection of functions written in DVM-BASIC. These functions can be invoked over the blockchain to do something. SCs can act as libraries for other SCs.</li> <li>DVM supports number of comments formats such as \u00e2\u20ac\u02dc, // , // as good documentation is necessary.</li> </ul> <p>Example Factorial Program</p> <pre><code>    ' This is a comment\n    // This comment is supported\n    /* this is multi-line comment  */\n    // printf is not supported in latest DVM. Please comment or remove printf from all old Smart Contracts.\n     Function Factorial(s Uint64) Uint64   // this is a commment\n        10  DIM result,scopy as Uint64     /* this is also comment */\n        15  LET scopy =  s\n        20  LET result = 1\n        30  LET result = result * s\n        40  LET s = s - 1\n        50  IF s &gt;= 2 THEN GOTO 30\n        //60  PRINTF \"FACTORIAL of %d = %d\" scopy result // printf is not supported in latest DVM.\n        70  RETURN result\n    End Function\n\n</code></pre> <p>DVM are written in a DVM-BASIC custom BASIC style language with line numbers.</p> <p>DVM supports uint64 and string data-types.</p> <p>DVM interprets the smart-contract and processes the SC line-line</p> <ul> <li>uint64 supports almost all operators namely +,-,*,/,%</li> <li>uint64 support following bitwise operators &amp; ,|, ^, ! , &gt;&gt; , &lt;&lt;</li> <li>uint64 supports following logical operators &gt;, &gt;= , &lt;, &lt;=, == , !=</li> <li>string supports only + operator. string support concatenation with a uint64.</li> <li>string supports ==, != logical operators.</li> <li>All DVM variables are mandatory to define and are initialized to default values namely 0 and \u00e2\u20ac\u0153\u00e2\u20ac\u009d.</li> </ul> <p>A SC execution must return 0 to persist any changes made during execution. During execution, no panics should occur.</p>"},{"location":"developer/dvm.html#dim-statement","title":"DIM Statement","text":"<p>DIM stands for data in memory and is used to define variable names within a function</p> <p>syntax</p> <p>10 DIM variable1 as type 20 DIM variable1,variable2 as type</p> <p>type can be any type supported by DVM</p> <p>Defining a varible initializes a variable to its ZERO value.</p>"},{"location":"developer/dvm.html#function-statement","title":"Function statement","text":"<p>Function statement is used to define a function. See eg, below for a function which adds 2 numbers</p> <pre><code>    Function ADD(x uint64, y uint64) uint64\n    10 RETURN x + y\n    End Function\n\n</code></pre> <p>Function syntax is of 2 types</p> <ol> <li>Function function_name( 0 or more arguments )</li> <li>Function function_name( 0 or more arguments ) return type</li> </ol> <p>The rules for functions are as follows</p> <ul> <li>All functions begin with Function keyword</li> <li>Function name should be alpha-numeric. If the first letter of the function is Upper case alphabet, it can be invoked by blockchain and other smart-contracts. Otherwise the function can only be called by other functions within the smart contract.</li> <li>Function may or may not have a return type</li> <li>All functions must use RETURN to return from function or to return a value. RETURN is mandatory.</li> <li>All functions must end with End Function. End Function is mandatory</li> <li>A function can have a implicit parameter value of type uint64, which contains amount of DERO value sent with the transaction.</li> </ul> <p>Any error caused during processing will immediately stop execution and discard all changes that occur during SC execution.</p> <p>Any Entrypoint which returns uint64 value 0 is termed as success and will make transaction to commit all state changes.</p>"},{"location":"developer/dvm.html#goto-statement","title":"GOTO Statement","text":"<p>It is used to jump to any point within the function. It cannot cross function-boundary</p> <p>syntax GOTO line-number</p>"},{"location":"developer/dvm.html#if","title":"IF","text":"<p>If statement is used to evaluate expression and make decisions.It has following forms</p> <ol> <li>IF expr1 condition expr2 THEN GOTO line number</li> <li>IF expr1 condition expr2 THEN GOTO line number ELSE GOTO line number</li> </ol> <p>This is used to change execution flow based on conditions. Conditions can be as complex expressions</p>"},{"location":"developer/dvm.html#let-statement","title":"LET Statement","text":"<p>LET is used to assign a value to a variable. value can be as complex as possible and can contain complex expression</p> <p>syntax</p> <p>line number LET variable_name = expression;</p> <p>expression can invoke other functions,eg</p> <p>10 LET x = 2 + 3 + ADD(2,3)</p> <p>ANY assignments within DVM can only be done using LET</p>"},{"location":"developer/dvm.html#return-statement","title":"Return Statement","text":"<p>It is used to return from a function and can be used anywhere within a function</p> <p>syntax</p> <p>1.RETURN ( return nil ) 2.RETURN expression ( evaluates expression and returns value )</p> <p>Any return value must match with the type defined while declaring function</p>"},{"location":"developer/dvm.html#support-functions","title":"Support Functions","text":"<p>VERSION(v String)</p> <ul> <li>Description: Sets a version to dvm.VERSION. Returns 1 if successful, panics otherwise.</li> <li>Return Type: Uint64</li> <li>ComputeCost: 1000</li> <li>StorageCost: 0</li> </ul> <p>LOAD(variable)</p> <ul> <li>Description: Loads a variable which was previously stored in the blockchain using STORE function. Return type will depend on what is stored. It will panic if the value does NOT exist.</li> <li>Return Type: Uint64/String (depending what is stored)</li> <li>ComputeCost: 5000</li> <li>StorageCost: 0</li> </ul> <p>EXISTS(variable)</p> <ul> <li>Description: Return 1 if the variable is stored in DB via STORE and 0 otherwise.</li> <li>Return Type: Uint64</li> <li>ComputeCost: 5000</li> <li>StorageCost: 0</li> </ul> <p>STORE(key variable, value variable)</p> <ul> <li>Description: Stores key and value in the DB. All storage state of the SC is accessible only from the SC which created it. Returns 1.</li> <li>Return Type: Uint64</li> <li>ComputeCost: 10000</li> <li>StorageCost: 0</li> </ul> <p>DELETE(variable)</p> <ul> <li>Description: Sets the rawkey value to []byte{} effectively deleting it from storage. Returns 1.</li> <li>Return Type: Uint64</li> <li>ComputeCost: 3000</li> <li>StorageCost: 0</li> </ul> <p>MAPEXISTS(variable)</p> <ul> <li>Description: Returns 1 if the variable has been stored in RAM (current invoke session) via MAPSTORE and 0 otherwise.</li> <li>Return Type: Uint64</li> <li>ComputeCost: 1000</li> <li>StorageCost: 0</li> </ul> <p>MAPGET(variable)</p> <ul> <li>Description: Loads a variable which was previously stored in RAM (current invoke session) via MAPSTORE. Return type will depend on what is stored. I twill panic if the value does NOT exist.</li> <li>Return Type: Uint64/String (depending on what is stored)</li> <li>ComputeCost: 1000</li> <li>StorageCost: 0</li> </ul> <p>MAPSTORE(key variable, value variable)</p> <ul> <li>Description: Stores key and value in RAM (current invoke session). All MAPSTORE state is accessible only from the session in which it is stored. Returns 1.</li> <li>Return Type: Uint64</li> <li>ComputeCost: 1000</li> <li>StorageCost: 0</li> </ul> <p>MAPDELETE(variable)</p> <ul> <li>Description: Deletes the element from the map in RAM (current invoke session). If the key does not exist, delete has no action. Returns 1.</li> <li>Return Type: Uint64</li> <li>ComputeCost: 1000</li> <li>StorageCost: 0</li> </ul> <p>RANDOM(limit Uint64)</p> <ul> <li>Description: RANDOM returns a random using a PRNG seeded on BLID,SCID,TXID. First form gives a uint64, second form returns random number in the range 0 - (limit), 0 is inclusive, limit is exclusive.</li> <li>Return Type: Uint64</li> <li>ComputeCost: 2500</li> <li>StorageCost: 0</li> </ul> <p>SCID()</p> <ul> <li>Description: Returns SMART CONTRACT ID which is currently running.</li> <li>Return Type: String</li> <li>ComputeCost: 2000</li> <li>StorageCost: 0</li> </ul> <p>BLID()</p> <ul> <li>Description: Returns current BLOCK ID which contains current execution-in-progress TXID.</li> <li>Return Type: String</li> <li>ComputeCost: 2000</li> <li>StorageCost: 0</li> </ul> <p>TXID()</p> <ul> <li>Description: Returns current TXID which is execution-in-progress.</li> <li>Return Type: String</li> <li>ComputeCost: 2000</li> <li>StorageCost: 0</li> </ul> <p>DERO()</p> <ul> <li>Description: Returns a string representation of zerohash which is of type crypto.Hash.</li> <li>Return Type: String</li> <li>ComputeCost: 10000</li> <li>StorageCost: 0</li> </ul> <p>BLOCK_HEIGHT()</p> <ul> <li>Description: Returns current chain height of BLID().</li> <li>Return Type: Uint64</li> <li>ComputeCost: 2000</li> <li>StorageCost: 0</li> </ul> <p>BLOCK_TIMESTAMP()</p> <ul> <li>Description: Returns current timestamp of BLID().</li> <li>Return Type: Uint64</li> <li>ComputeCost: 2500</li> <li>StorageCost: 0</li> </ul> <p>SIGNER()</p> <ul> <li>Description: Returns address of who signed this transaction. Ringsize of tx must be 2 for this value to be known or else empty.</li> <li>Return Type: String</li> <li>ComputeCost: 5000</li> <li>StorageCost: 0</li> </ul> <p>UPDATE_SC_CODE(sc_code String)</p> <ul> <li>Description: Stores updated SC code of type string. If it is not of type string, return 0, else return 1.</li> <li>Return Type: Uint64</li> <li>ComputeCost: 5000</li> <li>StorageCost: 0</li> </ul> <p>IS_ADDRESS_VALID(address String)</p> <ul> <li>Description: Returns 1 if address is valid, 0 otherwise.</li> <li>Return Type: Uint64</li> <li>ComputeCost: 50000</li> <li>StorageCost: 0</li> </ul> <p>ADDRESS_RAW(address String)</p> <ul> <li>Description: Returns address in RAW form as 33 byte keys, stripping away textual/presentation form. 2 address should always be compared in RAW form.</li> <li>Return Type: String</li> <li>ComputeCost: 60000</li> <li>StorageCost: 0</li> </ul> <p>ADDRESS_STRING(p String)</p> <ul> <li>Description: Returns address in STRING form. If it can be evaluated, a string form of an address will be returned, otherwise return an empty string.</li> <li>Return Type: String</li> <li>ComputeCost: 50000</li> <li>StorageCost: 0</li> </ul> <p>SEND_DERO_TO_ADDRESS(a String, amount Uint64)</p> <ul> <li>Description: Sends amount DERO from SC DERO balance to a address which should be raw form. Address must be in string DERO/DETO form. If the SC does not have enough balance, it will panic.</li> <li>Return Type: Uint64</li> <li>ComputeCost: 70000</li> <li>StorageCost: 0</li> </ul> <p>SEND_ASSET_TO_ADDRESS(a String, amount Uint64, asset String)</p> <ul> <li>Description: Sends amount ASSET from SC ASSET balance to a address which should be raw form. Address must be in string DERO/DETO form. If the SC does not have enough balance, it will panic.</li> <li>Return Type: Uint64</li> <li>ComputeCost: 90000</li> <li>StorageCost: 0</li> </ul> <p>DEROVALUE()</p> <ul> <li>Description: Gets the amount of DERO sent within this transaction.</li> <li>Return Type: Uint64</li> <li>ComputeCost: 10000</li> <li>StorageCost: 0</li> </ul> <p>ASSETVALUE(asset String)</p> <ul> <li>Description: Gets the amount of a given ASSET sent within this transaction.</li> <li>Return Type: Uint64</li> <li>ComputeCost: 10000</li> <li>StorageCost: 0</li> </ul> <p>ATOI(s String)</p> <ul> <li>Description: Returns a Uint64 representation of a string. Else panic.</li> <li>Return Type: Uint64</li> <li>ComputeCost: 5000</li> <li>StorageCost: 0</li> </ul> <p>ITOA(n Uint64)</p> <ul> <li>Description: Returns string representation of a Uint64. Else panic.</li> <li>Return Type: String</li> <li>ComputeCost: 5000</li> <li>StorageCost: 0</li> </ul> <p>SHA256(s String)</p> <ul> <li>Description: Returns a string sha2-256 hash of a given string. Else panic.</li> <li>Return Type: String</li> <li>ComputeCost: 25000</li> <li>StorageCost: 0</li> </ul> <p>SHA3256(s String)</p> <ul> <li>Description: Returns a string sha3-256 hash of a given string. Else panic.</li> <li>Return Type: String</li> <li>ComputeCost: 25000</li> <li>StorageCost: 0</li> </ul> <p>KECCAK256(s String)</p> <ul> <li>Description: Returns a string sha3-keccak256 hash of a given string. Else panic.</li> <li>Return Type: String</li> <li>ComputeCost: 25000</li> <li>StorageCost: 0</li> </ul> <p>HEX(s String)</p> <ul> <li>Description: Returns a hex encoded string value of a given string. Else panic.</li> <li>Return Type: String</li> <li>ComputeCost: 10000</li> <li>StorageCost: 0</li> </ul> <p>HEXDECODE(s String)</p> <ul> <li>Description: Returns a hex decoded string value of a given hex string. Else panic.</li> <li>Return Type: String</li> <li>ComputeCost: 10000</li> <li>StorageCost: 0</li> </ul> <p>MIN(f Uint64, s Uint64)</p> <ul> <li>Description: Returns the minimum value of 2 Uint64 values. Else panic.</li> <li>Return Type: Uint64</li> <li>ComputeCost: 5000</li> <li>StorageCost: 0</li> </ul> <p>MAX(f Uint64, s Uint64)</p> <ul> <li>Description: Returns the maximum value of 2 Uint64 values. Else panic.</li> <li>Return Type: Uint64</li> <li>ComputeCost: 5000</li> <li>StorageCost: 0</li> </ul> <p>STRLEN(s String)</p> <ul> <li>Description: Returns the length of a given string in Uint64. Else panic.</li> <li>Return Type: Uint64</li> <li>ComputeCost: 20000</li> <li>StorageCost: 0</li> </ul> <p>SUBSTR(s String, offset Uint64, length Uint64)</p> <ul> <li>Description: Returns the substring of a given string with offset and length defined. Else panic.</li> <li>Return Type: String</li> <li>ComputeCost: 20000</li> <li>StorageCost: 0</li> </ul> <p>PANIC</p> <ul> <li>Description: Panics.</li> <li>Return Type: Panic</li> <li>ComputeCost: 10000</li> <li>StorageCost: 0</li> </ul>"},{"location":"developer/dvm.html#lottery-sc-guide","title":"Lottery SC Guide","text":"<p>Dero Stargate DVM Smart Contracts guide to install and test various function of lottery Smart Contract.</p> <p>Download\u00a0DERO Stargate testnet\u00a0<code>source &lt;https://github.com/deroproject/derohe&gt;</code>\u00a0and\u00a0<code>binaries. &lt;https://github.com/deroproject/derohe/releases&gt;</code></p> <p>./derod-linux-amd64 --testnet;</p> <p>Start DERO wallet in testnet.</p> <p>dero-wallet-cli-linux-amd64 --rpc-server --wallet-file testnet.wallet --testnet;</p> <p>Start Dero wallet second instance to test transfer/ownership functions etc.</p> <pre><code>dero-wallet-cli-linux-amd64 --wallet-file testnet2.wallet --testnet --rpc-server --rpc-bind=127.0.0.1:40403;\n\n</code></pre> <p>Dero testnet Explorer</p> <p><code>./explorer-linux-amd64 --rpc-server-address 127.0.0.1:30306 --http-address=0.0.0.0:8080;</code></p> <p>DERO Stargate Testnet Explorer</p> <p>https://testnetexplorer.dero.io/</p> <p>Installing Smart Contract</p> <p>Download Lottery.bas\u00a0https://git.dero.io/DeroProject/derosuite_stargate/src/master/cmd/dvm/lottery.bas</p> <p>curl --request POST --data-binary @lottery.bas http://127.0.0.1:40403/install_sc;</p> <p>Download SC Code,check balance and variables from chain</p> <pre><code>curl http://127.0.0.1:40402/json_rpc -d '{\"jsonrpc\":\"2.0\",\"id\":\"0\",\"method\":\"getsc\",\"params\":{ \"scid\":\"aacaa7bb2388d06e523e5bc0783e4e131738270641406c12978155ba033373af\" , \"code\":false, \"keysstring\":[\"deposit_count\"]}}' -H 'Content-Type: application/json';\n\n</code></pre> <p>Examples of various lottery Smart Contract functions Eg: To play lottery</p> <p><code>curl http://127.0.0.1:40403/json_rpc -d '{\"jsonrpc\":\"2.0\",\"id\":\"0\",\"method\":\"transfer\",\"params\":{ \"transfers\":[{\"amount\":111111,\"destination\":\"deto1qxqqen6lqmksmzmxmfqmxp2y8zvkldtcq8jhkzqflmyczepjw9dp46gc3cczu\"}],\"scid\":\"aacaa7bb2388d06e523e5bc0783e4e131738270641406c12978155ba033373af\",\"sc_rpc\":[{\"name\":\"entrypoint\",\"datatype\":\"S\",\"value\":\"Lottery\"}] }}' -H 'Content-Type: application/json';</code></p> <p>Eg: Withdraw balance only for smart contract owner</p> <p><code>curl http://127.0.0.1:40403/json_rpc -d '{\"jsonrpc\":\"2.0\",\"id\":\"0\",\"method\":\"transfer\",\"params\":{ \"transfers\":[{\"amount\":111111,\"destination\":\"deto1qxqqen6lqmksmzmxmfqmxp2y8zvkldtcq8jhkzqflmyczepjw9dp46gc3cczu\"}],\"scid\":\"aacaa7bb2388d06e523e5bc0783e4e131738270641406c12978155ba033373af\", \"sc_rpc\":[{\"name\":\"entrypoint\",\"datatype\":\"S\",\"value\":\"Withdraw\"}, {\"name\":\"amount\",\"datatype\":\"U\",\"value\":2 }] }}' -H 'Content-Type: application/json';</code></p> <p>Eg: To transfer ownership</p> <p><code>curl http://127.0.0.1:40403/json_rpc -d '{\"jsonrpc\":\"2.0\",\"id\":\"0\",\"method\":\"transfer\",\"params\":{ \"transfers\":[{\"amount\":111111,\"destination\":\"deto1qxqqen6lqmksmzmxmfqmxp2y8zvkldtcq8jhkzqflmyczepjw9dp46gc3cczu\"}],\"scid\":\"aacaa7bb2388d06e523e5bc0783e4e131738270641406c12978155ba033373af\", \"sc_rpc\":[{\"name\":\"entrypoint\",\"datatype\":\"S\",\"value\":\"TransferOwnership\"}, {\"name\":\"newowner\",\"datatype\":\"S\",\"value\":\"deto1qxsplx7vzgydacczw6vnrtfh3fxqcjevyxcvlvl82fs8uykjkmaxgfgulfha5\" }] }}' -H 'Content-Type: application/json';</code></p> <p>Eg: To claim ownership</p> <p><code>curl http://127.0.0.1:40403/json_rpc -d \u00e2\u20ac\u02dc{\u00e2\u20ac\u0153jsonrpc\u00e2\u20ac\u009d:\u00e2\u20ac\u01532.0\u00e2\u20ac\u009d,\u00e2\u20ac\u0153id\u00e2\u20ac\u009d:\u00e2\u20ac\u01530\u00e2\u20ac\u009d,\u00e2\u20ac\u0153method\u00e2\u20ac\u009d:\u00e2\u20ac\u0153transfer\u00e2\u20ac\u009d,\u00e2\u20ac\u0153params\u00e2\u20ac\u009d:{ \u00e2\u20ac\u0153transfers\u00e2\u20ac\u009d:[{\u00e2\u20ac\u0153amount\u00e2\u20ac\u009d:111111,\u00e2\u20ac\u0153destination\u00e2\u20ac\u009d:\u00e2\u20ac\u0153deto1qxqqen6lqmksmzmxmfqmxp2y8zvkldtcq8jhkzqflmyczepjw9dp46gc3cczu\u00e2\u20ac\u009d}],\u00e2\u20ac\u0153scid\u00e2\u20ac\u009d:\u00e2\u20ac\u0153aacaa7bb2388d06e523e5bc0783e4e131738270641406c12978155ba033373af\u00e2\u20ac\u009d, \u00e2\u20ac\u0153sc_rpc\u00e2\u20ac\u009d:[{\u00e2\u20ac\u0153name\u00e2\u20ac\u009d:\u00e2\u20ac\u0153entrypoint\u00e2\u20ac\u009d,\u00e2\u20ac\u0153datatype\u00e2\u20ac\u009d:\u00e2\u20ac\u0153S\u00e2\u20ac\u009d,\u00e2\u20ac\u0153value\u00e2\u20ac\u009d:\u00e2\u20ac\u0153ClaimOwnership\u00e2\u20ac\u009d}] }}\u00e2\u20ac\u2122 -H \u00e2\u20ac\u02dcContent-Type: application/json\u00e2\u20ac\u2122;</code></p>"},{"location":"developer/dvm.html#lotterybas","title":"Lottery.bas","text":"<pre><code>    /* Lottery Smart Contract in DVM-BASIC\n\n</code></pre> <p>This lottery smart contract will give lottery wins every xth try. */</p> <pre><code>    Function Lottery(value Uint64) Uint64\n10  dim deposit_count,winner as Uint64\n20  LET deposit_count =  LOAD(\"deposit_count\")+1\n25  IF value == 0 THEN GOTO 110  // if deposit amount is 0, simply return\n30  STORE(\"depositor_address\" + (deposit_count-1), SIGNER()) // store address for later on payment\n40  STORE(\"deposit_total\", LOAD(\"deposit_total\") + value )\n50  STORE(\"deposit_count\",deposit_count)\n60  IF LOAD(\"lotteryeveryXdeposit\") &gt; deposit_count THEN GOTO 110 // we will wait till X players join in\n  // we are here means all players have joined in, roll the DICE,\n70  LET winner  = RANDOM() % deposit_count // we have a winner\n80  SEND_DERO_TO_ADDRESS(LOAD(\"depositor_address\" + winner) , LOAD(\"lotterygiveback\")*LOAD(\"deposit_total\")/10000)\n\n        // Re initialize for another round\n90   STORE(\"deposit_count\", 0)   //  initial players\n100  STORE(\"deposit_total\", 0)   //  total deposit of all players\n110  RETURN 0\nEnd Function\n\n// this function is used to initialize parameters during install time\nFunction Initialize() Uint64\n10  STORE(\"owner\", SIGNER())   // store in DB  [\"owner\"] = address\n20  STORE(\"lotteryeveryXdeposit\", 2)   // lottery will reward every X deposits\n    // how much will lottery giveback in 1/10000 parts, granularity .01 %\n30  STORE(\"lotterygiveback\", 9900)   // lottery will give reward 99% of deposits, 1 % is accumulated for owner to withdraw\n33  STORE(\"deposit_count\", 0)   //  initial players\n34  STORE(\"deposit_total\", 0)   //  total deposit of all players\n// 35 printf \"Initialize executed\"\n40 RETURN 0\nEnd Function\n\n// Used to tune lottery parameters\nFunction TuneLotteryParameters(input Uint64, lotteryeveryXdeposit Uint64, lotterygiveback Uint64) Uint64\n10  dim key,stored_owner as String\n20  dim value_uint64 as Uint64\n30  IF LOAD(\"owner\") == SIGNER() THEN GOTO 100  // check whether owner is real owner\n40  RETURN 1\n\n100  STORE(\"lotteryeveryXdeposit\", lotteryeveryXdeposit)   // lottery will reward every X deposits\n130  STORE(\"lotterygiveback\", value_uint64)   // how much will lottery giveback in 1/10000 parts, granularity .01 %\n140  RETURN 0 // return success\nEnd Function\n\n// This function is used to change owner\n// owner is an string form of address\nFunction TransferOwnership(newowner String) Uint64\n10  IF LOAD(\"owner\") == SIGNER() THEN GOTO 30\n20  RETURN 1\n30  STORE(\"tmpowner\",ADDRESS_RAW(newowner))\n40  RETURN 0\nEnd Function\n\n// Until the new owner claims ownership, existing owner remains owner\n    Function ClaimOwnership() Uint64\n10  IF LOAD(\"tmpowner\") == SIGNER() THEN GOTO 30\n20  RETURN 1\n30  STORE(\"owner\",SIGNER()) // ownership claim successful\n40  RETURN 0\nEnd Function\n\n// if signer is owner, withdraw any requested funds\n// if everthing is okay, they will be showing in signers wallet\n    Function Withdraw( amount Uint64) Uint64\n10  IF LOAD(\"owner\") == SIGNER() THEN GOTO 30\n20  RETURN 1\n30  SEND_DERO_TO_ADDRESS(SIGNER(),amount)\n40  RETURN 0\nEnd Function\n\n// if signer is owner, provide him rights to update code anytime\n// make sure update is always available to SC\n    Function UpdateCode( code String) Uint64\n10  IF LOAD(\"owner\") == SIGNER() THEN GOTO 30\n20  RETURN 1\n30  UPDATE_SC_CODE(code)\n40  RETURN 0\nEnd Function\n\n</code></pre>"},{"location":"developer/dvm.html#token-sc-guide","title":"Token SC Guide","text":"<p>Dero Stargate DVM Smart Contracts guide to install and test various function of private token Smart Contract.</p> <p>Notes: 1. All wallet Addressess need to be registerd first with SC before they need to interact with. This condition will be removed in future. 2. Requirement of detoAnyRandomAddressFromExplorer during SC invocation will be removed in future. 3. burn is equal to deposit if SCID is defined else DERO/token will dissappear/burn from network forever. burn will renamed to something more meaningful. This can be proved with cryptographic proof.</p> <p>Download\u00a0DERO Stargate testnet\u00a0<code>source &lt;https://github.com/deroproject/derohe&gt;</code>\u00a0and\u00a0<code>binaries. &lt;https://github.com/deroproject/derohe/releases&gt;</code></p> <p>Start Dero daemon in testnet mode</p> <pre><code>./derod-linux-amd64  --testnet;\n\n</code></pre> <p>Start Dero wallet in testnet.</p> <pre><code>dero-wallet-cli-linux-amd64 --rpc-server --wallet-file testnet.wallet --testnet;\n\n</code></pre> <p>Start Dero wallet second instance to test transfer/ownership functions etc.</p> <pre><code>dero-wallet-cli-linux-amd64 --wallet-file testnet2.wallet --testnet --rpc-server --rpc-bind=127.0.0.1:40403;\n\n</code></pre> <p>Dero testnet Explorer, Not required but if you want to host your own explorer for privacy reasons.</p> <pre><code>./explorer-linux-amd64  --http-address=0.0.0.0:8080 ;\n\n</code></pre> <p>Connect to explorer using browser on localhost:8080</p> <p>Dero Stargate Testnet Explorer\u00a0https://testnetexplorer.dero.io/</p> <p>To send DERO to multiple users in one transaction</p> <pre><code>curl http://127.0.0.1:40403/json_rpc -d '{\"jsonrpc\":\"2.0\",\"id\":\"0\",\"method\":\"transfer\",\"params\":{ \"transfers\":[{\"amount\":100000,\"destination\":\"deto1ADDRESS1\"},{\"amount\":300000,\"destination\":\"deto1ADDRESS12}] }}' -H 'Content-Type: application/json';\n\n</code></pre> <p>DERO has 2 types of SCs, public and private.</p> <p>1.Public SCs are public with all data/code/exchanges are public. 2.Private SCs have their smart contract data public. But no one knows how many tokens a particular user own or how much is he sending or how much is he receiving. Best example is to understand private SCs as banks and private tokens as cash. Once cash is out from the bank, Bank doesn\u00e2\u20ac\u2122t know \u00e2\u20ac\u0153who has what amount or how is it being used/sent/received etc.\u00e2\u20ac\u009d. This makes all private tokens completely private.</p> <p>Installing Private Smart Contract.</p> <p>Download token.bas\u00a0https://git.dero.io/DeroProject/derosuite_stargate/src/master/cmd/dvm/token.bas</p> <pre><code>curl  --request POST --data-binary   @token.bas http://127.0.0.1:40403/install_sc;\n\n</code></pre> <p>To check private token balance in wallet, type this command in wallet.</p> <pre><code>balance SCID;\n\n</code></pre> <p>Download SC Code,check SC balance and variables from chain</p> <pre><code>curl http://127.0.0.1:40402/json_rpc -d '{\"jsonrpc\":\"2.0\",\"id\":\"0\",\"method\":\"getsc\",\"params\":{ \"scid\":\"aacaa7bb2388d06e523e5bc0783e4e131738270641406c12978155ba033373af\" , \"code\":true}}' -H 'Content-Type: application/json';\n\n</code></pre> <p>Examples of various private token Smart Contract functions Eg: To send private tokens from one wallet to another wallet, this does not involve SC Eg: this also showcases to send multiple assets( DERO and other tokens on DERO Network) within a single transaction</p> <pre><code>curl http://127.0.0.1:40403/json_rpc -d '{\"jsonrpc\":\"2.0\",\"id\":\"0\",\"method\":\"transfer\",\"params\":{ \"transfers\":[{\"amount\":111111,\"destination\":\"deto1qxqqen6lqmksmzmxmfqmxp2y8zvkldtcq8jhkzqflmyczepjw9dp46gc3cczu\"},{\"amount\":333333,\"destination\":\"deto1qxqqen6lqmksmzmxmfqmxp2y8zvkldtcq8jhkzqflmyczepjw9dp46gc3cczu\",\"scid\": \"aacaa7bb2388d06e523e5bc0783e4e131738270641406c12978155ba033373af\" }] }}' -H 'Content-Type: application/json';\n\n</code></pre> <p>Eg: Convert DERO to tokens 1:1 swap, we are swapping 44 DERO atomic units to get some tokens</p> <pre><code>curl http://127.0.0.1:40403/json_rpc -d '{\"jsonrpc\":\"2.0\",\"id\":\"0\",\"method\":\"transfer\",\"params\":{\"transfers\":[{\"amount\":1,\"destination\":\"deto1qxqqen6lqmksmzmxmfqmxp2y8zvkldtcq8jhkzqflmyczepjw9dp46gc3cczu\", \"burn\":44}],\"scid\":\"aacaa7bb2388d06e523e5bc0783e4e131738270641406c12978155ba033373af\", \"sc_rpc\":[{\"name\":\"entrypoint\",\"datatype\":\"S\",\"value\":\"IssueTOKENX\"}] }}' -H 'Content-Type: application/json';\n\n</code></pre> <p>Convert tokens to DERO 1:1 swap, we are swapping 9 token atomic units to get 9 DERO atomic units This tx shows transferring tokens natively, no dero fees etc, this is under evaluation,\u00a0Currently these show as coinbase rewards</p> <pre><code>curl http://127.0.0.1:40403/json_rpc -d '{\"jsonrpc\":\"2.0\",\"id\":\"0\",\"method\":\"transfer\",\"params\":{\"transfers\":[{\"scid\":\"aacaa7bb2388d06e523e5bc0783e4e131738270641406c12978155ba033373af\", \"amount\":1,\"destination\":\"deto1qxqqen6lqmksmzmxmfqmxp2y8zvkldtcq8jhkzqflmyczepjw9dp46gc3cczu\", \"burn\":9}],\"scid\":\"aacaa7bb2388d06e523e5bc0783e4e131738270641406c12978155ba033373af\", \"sc_rpc\":[{\"name\":\"entrypoint\",\"datatype\":\"S\",\"value\":\"ConvertTOKENX\"}] }}' -H 'Content-Type: application/json';\n\n</code></pre> <p>Eg: To withdraw balance only for smart contract owner</p> <pre><code>curl http://127.0.0.1:40403/json_rpc -d '{\"jsonrpc\":\"2.0\",\"id\":\"0\",\"method\":\"transfer\",\"params\":{ \"transfers\":[{\"amount\":111111,\"destination\":\"deto1qxqqen6lqmksmzmxmfqmxp2y8zvkldtcq8jhkzqflmyczepjw9dp46gc3cczu\"}],\"scid\":\"aacaa7bb2388d06e523e5bc0783e4e131738270641406c12978155ba033373af\", \"sc_rpc\":[{\"name\":\"entrypoint\",\"datatype\":\"S\",\"value\":\"Withdraw\"}, {\"name\":\"amount\",\"datatype\":\"U\",\"value\":2 }] }}' -H 'Content-Type: application/json';\n\n</code></pre> <p>Eg: To transfer ownership of smart contract to new address/owner</p> <pre><code>curl http://127.0.0.1:40403/json_rpc -d '{\"jsonrpc\":\"2.0\",\"id\":\"0\",\"method\":\"transfer\",\"params\":{ \"transfers\":[{\"amount\":111111,\"destination\":\"deto1qxqqen6lqmksmzmxmfqmxp2y8zvkldtcq8jhkzqflmyczepjw9dp46gc3cczu\"}],\"scid\":\"aacaa7bb2388d06e523e5bc0783e4e131738270641406c12978155ba033373af\", \"sc_rpc\":[{\"name\":\"entrypoint\",\"datatype\":\"S\",\"value\":\"TransferOwnership\"}, {\"name\":\"newowner\",\"datatype\":\"S\",\"value\":\"deto1qxsplx7vzgydacczw6vnrtfh3fxqcjevyxcvlvl82fs8uykjkmaxgfgulfha5\" }] }}' -H 'Content-Type: application/json';\n\n</code></pre> <p>Eg: To claim ownership of smart contract</p> <pre><code>curl http://127.0.0.1:40403/json_rpc -d '{\"jsonrpc\":\"2.0\",\"id\":\"0\",\"method\":\"transfer\",\"params\":{ \"transfers\":[{\"amount\":111111,\"destination\":\"deto1qxqqen6lqmksmzmxmfqmxp2y8zvkldtcq8jhkzqflmyczepjw9dp46gc3cczu\"}],\"scid\":\"aacaa7bb2388d06e523e5bc0783e4e131738270641406c12978155ba033373af\", \"sc_rpc\":[{\"name\":\"entrypoint\",\"datatype\":\"S\",\"value\":\"ClaimOwnership\"}] }}' -H 'Content-Type: application/json';\n\n</code></pre> <p>Eg: To update smart contract code</p> <pre><code>curl http://127.0.0.1:40403/json_rpc -d '{\"jsonrpc\":\"2.0\",\"id\":\"0\",\"method\":\"transfer\",\"params\":{ \"transfers\":[{\"amount\":111111,\"destination\":\"deto1qxqqen6lqmksmzmxmfqmxp2y8zvkldtcq8jhkzqflmyczepjw9dp46gc3cczu\"}],\"scid\":\"aacaa7bb2388d06e523e5bc0783e4e131738270641406c12978155ba033373af\", \"sc_rpc\":[{\"name\":\"entrypoint\",\"datatype\":\"S\",\"value\":\"UpdateCode\"}, {\"name\":\"code\",\"datatype\":\"S\",\"value\":\"new code should be placed here\" }] }}' -H 'Content-Type: application/json';\n\n</code></pre>"},{"location":"developer/dvm.html#tokenbas","title":"Token.bas","text":"<pre><code>/* Private Token Smart Contract Example in DVM-BASIC.\n\n</code></pre> <p>DERO Smart Contracts Tokens privacy can be understood just like banks handle cash. Once cash is out from the bank, bank is not aware about it (who owns what value), until it is deposited back. Smart contract only maintains supply and other necessary items to keep it working. DERO Tokens can be tranfered to other wallets just like native DERO with Homomorphic Encryption and without involvement of issuing Smart Contracts. Token issuing Smart Contract cannot hold/freeze/control their tokens once they are issued and sent to any wallet. This token is Private. Use Function InitializePrivate() Uint64 to make any Smart Contract private.</p> <pre><code>*/\n\n// Issue tokens after depositing DERO (Convert DERO to TOKENX)\nFunction IssueTOKENX() Uint64\n10  SEND_ASSET_TO_ADDRESS(SIGNER(), DEROVALUE(),SCID())   // Increment balance of user, without knowing original balance, this is done homomorphically\n20  RETURN 0\nEnd Function\n\n// Convert TOKENX to DERO after depositing TOKENX. Smart Contract can give DERO, Only if DERO balance exists.\nFunction ConvertTOKENX() Uint64\n10  SEND_DERO_TO_ADDRESS(SIGNER(),ASSETVALUE(SCID()))   // Increment balance of user, without knowing original balance, this is done using Homomorphic Encryption.\n20  RETURN 0\nEnd Function\n\n// This function is used to initialize parameters during install time\n// InitializePrivate initializes a private SC\nFunction InitializePrivate() Uint64\n10  STORE(\"owner\", SIGNER())   // Store in DB  [\"owner\"] = address\n\n</code></pre> <p>30 SEND_ASSET_TO_ADDRESS(SIGNER(), 1600000, SCID()) // Gives initial encrypted balance of 1600000. 40 RETURN 0 End Function</p> <pre><code>// This function is used to change owner\n// owner is an string form of address\nFunction TransferOwnership(newowner String) Uint64\n10  IF LOAD(\"owner\") == SIGNER() THEN GOTO 30\n20  RETURN 1\n30  STORE(\"tmpowner\",ADDRESS_RAW(newowner))\n40  RETURN 0\nEnd Function\n\n// Until the new owner claims ownership, existing owner remains owner\n    Function ClaimOwnership() Uint64\n10  IF LOAD(\"tmpowner\") == SIGNER() THEN GOTO 30\n20  RETURN 1\n30  STORE(\"owner\",SIGNER()) // ownership claim successful\n40  RETURN 0\nEnd Function\n\n// if signer is owner, withdraw any requested funds\n// if everthing is okay, they will be showing in signers wallet\n\n</code></pre> <p>Function Withdraw( amount Uint64) Uint64 10 IF LOAD(\"owner\") == SIGNER() THEN GOTO 30 20 RETURN 1 30 SEND_DERO_TO_ADDRESS(SIGNER(),amount) 40 RETURN 0 End Function</p> <pre><code>// if signer is owner, provide him rights to update code anytime\n    // make sure update is always available to SC\n    Function UpdateCode( code String) Uint64\n10  IF LOAD(\"owner\") == SIGNER() THEN GOTO 30\n20  RETURN 1\n30  UPDATE_SC_CODE(code)\n40  RETURN 0\nEnd Function\n\n</code></pre>"},{"location":"developer/dvm.html#assets-interchange-smart-contract","title":"ASSETS Interchange Smart Contract","text":"<p>This Smart Contract converts assetOne to assetTwo as per defined ratio in contract. Provided exchange has sufficient assets balances.</p> <p>Steps to create an exchange contract.</p> <p>First create two tokens and deposit it to exchange. Then anyone can use exchange smart contract for conversion of assets.</p> <p>Step 1] https://github.com/deroproject/documentation/tree/master/DVMDOCS/examples/token</p> <p><code>curl --request POST --data-binary @token.bas http://127.0.0.1:40403/install_sc</code></p> <p>Step 2] https://github.com/deroproject/documentation/tree/master/DVMDOCS/examples/token</p> <p><code>curl --request POST --data-binary @token2.bas http://127.0.0.1:40403/install_sc</code></p> <p>STEP 3] Create and install https://github.com/deroproject/documentation/blob/master/DVMDOCS/examples/assetexchange/asset_exchange.bas</p> <p><code>curl --request POST --data-binary @asset_exchange.bas http://127.0.0.1:40403/install_sc</code></p> <p>Step 4] Deposit assetOne/token1 to exchange contract.</p> <p><code>curl --silent http://127.0.0.1:40403/json_rpc -d '{\"jsonrpc\":\"2.0\",\"id\":\"0\",\"method\":\"transfer\",\"params\":{\"scid\":\"'\"Interchange-SCID\"'\",\"ringsize\":2, \"sc_rpc\":[{\"name\":\"entrypoint\",\"datatype\":\"S\",\"value\":\"Deposit\"}], \"transfers\": [ {\"scid\":\"'\"ASSET_ONE_SCID\"'\", \"burn\":AssetOneCount_DEPOSITED_TO_EXCHANGE}] }}' -H 'Content-Type: application/json'</code></p> <p>Step 5] Deposit assetTwo/token2 to exchange contract.</p> <p><code>curl --silent http://127.0.0.1:40403/json_rpc -d '{\"jsonrpc\":\"2.0\",\"id\":\"0\",\"method\":\"transfer\",\"params\":{\"scid\":\"'\"Interchange-SCID\"'\",\"ringsize\":2, \"sc_rpc\":[{\"name\":\"entrypoint\",\"datatype\":\"S\",\"value\":\"Interchange\"},{\"name\":\"incoming\",\"datatype\":\"H\",\"value\":\"'\"ASSET_ONE_SCID\"'\"},{\"name\":\"outgoing\",\"datatype\":\"H\",\"value\":\"'\"ASSET_TWO_SCID\"'\"}], \"transfers\": [{\"scid\":\"'\"ASSET_ONE_SCID\"'\", \"burn\":AssetOneCount_TO_BE__Converted}] }}' -H 'Content-Type: application/json'</code></p> <p>step 7] In wallet check balance of assetTwo.</p> <p>balance ASSET_TWO_SCID</p> <p>NB: Following used above are variables, please change them. SCIDs are transaction-IDs returned by respective commands.</p> <p>Interchange-SCID ASSET_ONE_SCID ASSET_TWO_SCID AssetOneCount_DEPOSITED_TO_EXCHANGE AssetTwoCount_DEPOSITED_TO_EXCHANGE AssetOneCount_TO_BE__Converted</p>"},{"location":"developer/dvm.html#assetbas","title":"Asset.bas","text":"<p>/* Private Token Smart Contract Example in DVM-BASIC.\\ DERO Smart Contracts Tokens privacy can be understood just like banks handle cash. Once cash is out from the bank, bank is not aware about it (who owns what value), until it is deposited back. Smart contract only maintains supply and other necessary items to keep it working. DERO Tokens can be tranfered to other wallets just like native DERO with Homomorphic Encryption and without involvement of issuing Smart Contracts. Token issuing Smart Contract cannot hold/freeze/control their tokens once they are issued and sent to any wallet. This token is Private. Use Function InitializePrivate() Uint64 to make any Smart Contract private.</p> <pre><code>*/\n\n// Issue Asset after depositing DERO (Convert DERO to TOKENX)\nFunction IssueAsset() Uint64\n10  SEND_ASSET_TO_ADDRESS(SIGNER(), DEROVALUE(),SCID())   // send asset without knowing original balance, this is done homomorphically\n20  RETURN 0\nEnd Function\n\n// This function is used to initialize parameters during install time\n// InitializePrivate initializes a private SC\nFunction InitializePrivate() Uint64\n40  RETURN 0\nEnd Function\n\n</code></pre>"},{"location":"developer/dvm.html#assetexchangebas","title":"Assetexchange.bas","text":"<pre><code>   // Asset Interchange/Exchnage  Smart Contract Example in DVM-BASIC.\n//    This SC allows you to deposit an arbitrary token, into it\n//    and later allows you to swap one token with another\n// if the SC has enough balance to cover outgoing transfer it will be done\n\n    // deposits an arbitrary token\n    //  owner should deposits all arbitrary types\n\n   Function Deposit() Uint64\n    20  RETURN 0\n    End Function\n\n// incoming represents incoming asset type basicallly an SCID\n// outgoing represents outgoing asset type basicallly an SCID\n   Function Interchange(incoming String, outgoing String) Uint64\n    10  SEND_ASSET_TO_ADDRESS(SIGNER(),ASSETVALUE(incoming)/2, outgoing)   // 1:1/2 interchange of assets\n    20  RETURN 0\n    End Function\n\n    Function Initialize() Uint64\n    10 STORE(\"owner\", SIGNER())   // store in DB  [\"owner\"] = address\n    40  RETURN 0\n    End Function\n\n// everything below this is supplementary and not required\n\n    // This function is used to change owner\n    // owner is an string form of address\n    Function TransferOwnership(newowner String) Uint64\n    10  IF LOAD(\"owner\") == SIGNER() THEN GOTO 30\n    20  RETURN 1\n    30  STORE(\"tmpowner\",ADDRESS_RAW(newowner))\n    40  RETURN 0\n    End Function\n\n    // Until the new owner claims ownership, existing owner remains owner\n        Function ClaimOwnership() Uint64\n    10  IF LOAD(\"tmpowner\") == SIGNER() THEN GOTO 30\n    20  RETURN 1\n    30  STORE(\"owner\",SIGNER()) // ownership claim successful\n    40  RETURN 0\n    End Function\n\n    // if signer is owner, withdraw any requested funds\n    // if everthing is okay, they will be showing in signers wallet\n   Function Withdraw(amount Uint64, asset String) Uint64\n    10  IF LOAD(\"owner\") == SIGNER() THEN GOTO 30\n    20  RETURN 1\n    30  SEND_ASSET_TO_ADDRESS(SIGNER(),amount,asset)\n    40  RETURN 0\n    End Function\n\n    // if signer is owner, provide him rights to update code anytime\n        // make sure update is always available to SC\n        Function UpdateCode( code String) Uint64\n    10  IF LOAD(\"owner\") == SIGNER() THEN GOTO 30\n    20  RETURN 1\n    30  UPDATE_SC_CODE(code)\n    40  RETURN 0\n    End Function\n\n</code></pre>"},{"location":"developer/dvm.html#nameservice","title":"Nameservice","text":"<p>Register and associate DERO wallet to username.</p> <p>Step 1] Check whether username is already registered. You cannot register username if already registered.</p> <p><code>curl http://127.0.0.1:40402/json_rpc -d '{\"jsonrpc\":\"2.0\",\"id\":\"0\",\"method\":\"nametoaddress\",\"params\":{\"name\":\"TESTUSERNAME\" }}' -H 'Content-Type: application/json'</code></p> <p>Step 2] Register and associate DERO wallet to username.</p> <p><code>curl http://127.0.0.1:40403/json_rpc -d '{\"jsonrpc\":\"2.0\",\"id\":\"0\",\"method\":\"scinvoke\",\"params\":{\"scid\":\"0000000000000000000000000000000000000000000000000000000000000001\",\"ringsize\":2, \"sc_rpc\":[{\"name\":\"entrypoint\",\"datatype\":\"S\",\"value\":\"Register\"}, {\"name\":\"name\",\"datatype\":\"S\",\"value\":\"TESTUSERNAME\" }] }}' -H 'Content-Type: application/json'</code></p> <p>NB: Replace TESTUSERNAME with your desired available username in abvove steps.</p> <p>NB: \"scid\":\"0000000000000000000000000000000000000000000000000000000000000001\" is reserved for nameservice registration.</p>"},{"location":"developer/dvm.html#nameservicebas","title":"Nameservice.bas","text":"<pre><code>   /* Name Service SMART CONTRACT in DVM-BASIC.\n   Allows a user to register names which could be looked by wallets for easy to use name while transfer\n*/\n\n // This function is used to initialize parameters during install time\n    Function Initialize() Uint64\n    10  RETURN 0\n    End Function\n\n    // Register a name, limit names of 5 or less length\n    Function Register(name String) Uint64\n    10  IF EXISTS(name) THEN GOTO 50   // if name is already used, it cannot reregistered\n    20  IF STRLEN(name) &gt;= 6 THEN GOTO 40\n    30  IF SIGNER() != address_raw(\"deto1qyvyeyzrcm2fzf6kyq7egkes2ufgny5xn77y6typhfx9s7w3mvyd5qqynr5hx\") THEN GOTO 50\n    40  STORE(name,SIGNER())\n    50  RETURN 0\n    End Function\n\n    // This function is used to change owner\n    // owner is an string form of address\n    Function TransferOwnership(name String,newowner String) Uint64\n    10  IF LOAD(name) != SIGNER() THEN GOTO 30\n    20  STORE(name,ADDRESS_RAW(newowner))\n    30  RETURN 0\n    End Function\n</code></pre>"},{"location":"developer/graviton.html","title":"Graviton","text":""},{"location":"developer/graviton.html#graviton-zfs-for-key-value-stores","title":"Graviton: ZFS for Key-Value Stores","text":""},{"location":"developer/graviton.html#standalone-alpha-release","title":"Standalone Alpha Release","text":"<p>Graviton is an open source, simple, fast, versioned, authenticated and embeddable key-value store database written in Golang.</p> <p>In short, Graviton can be described as \u00e2\u20ac\u0153ZFS for key-value stores,\u00e2\u20ac\u009d in which every write is tracked, versioned and authenticated with cryptographic proofs. Additionally, it is possible to take snapshots of the database at any time and simple copy and rsync commands can be used for database backup, even during live updates without any possibilities of database corruption. The concept was derived from an immediate need for unique features that were currently unavailable in any other database.</p>"},{"location":"developer/graviton.html#features","title":"Features","text":"<p>The features included in Graviton provide the missing functionality that prevented Stargate RC1 from reaching deployment on our mainnet. The following features are critical for the success of our next release, but will also benefit many use cases in other domains.</p> <ul> <li>Authenticated data store (all keys and values are backed by blake 256-bit checksums).</li> <li>Append-only data store.</li> <li>Support of 2\u00e2\u0081\u00b6\u00e2\u0081' trees (theoretically) within a single data store. Trees can be named and thus used as buckets.</li> <li>Support of values version tracking. All committed changes are versioned with ability to visit them at any point in time.</li> <li>Snapshots (multi-tree commits in a single version causing multi bucket sync, each snapshot can be visited, appended and further modified, keys deleted, values modified, etc., new keys and values stored.)</li> <li>Ability to iterate over all key-value pairs in a tree.</li> <li>Ability to diff between two trees in linear time and report all changes of insertions, deletions and modifications.)</li> <li>Minimal and simplified API.</li> <li>Theoretically supports exabyte data stores, multi-terabyte tested internally.</li> <li>Decoupled storage layer, allowing use of object stores such as Ceph, AWS, etc.</li> <li>Ability to generate cryptographic proofs which can prove key existence or non-existence (cryptographic proofs are around 1 KB.)</li> <li>Extremely fast proof generation time of around 1000 proofs per second, per core.</li> <li>Support for disk based filesystem-based persistant stores.</li> <li>Support for memory-based non-persistant stores.</li> <li>100% code coverage</li> </ul>"},{"location":"developer/graviton.html#benefits","title":"Benefits","text":"<p>Graviton is open source and can be used in place of BoltDB, LMDB, LevelDB and more. While the included features may not be required for every use case, they provide novel improvements that can not be found anywhere else, such as the ability to traverse any and every commit, and diff between two trees in linear time. The end result is a robust and feature-rich database that will never corrupt data between backups and commits. The database code is also very readable and friendly to new Golang developers.</p> <p>Below are some examples of how easy it is to use:</p> <p>Save/edit a key</p> <pre><code>        tree, _ := ss.GetTree(\"root\")\n\n        // Insert a value\n        tree.Put([]byte(\"answer\"), []byte(\"44\"))\n\n        // Make the tree persistant by storing it in backend disk\n        graviton.Commit(tree)\n\n</code></pre> <p>Get a value from a tree</p> <pre><code>    tree, _ := ss.GetTree(\"root\")\n\n    // Every key has a byte slice value\n    v,_ := tree.Get([]byte(\"answer\"))\n\n    fmt.Printf(\"The answer is: %s\\n\", v)\n\n</code></pre> <p>Iterating over a tree</p> <pre><code>    // Assume \"root\" tree exists and has keys\n    tree, _ := store.GetTree(\"root\")\n\n    // See cursor functions below\n    c := tree.Cursor()\n\n    for k, v, err := c.First(); err == nil; k, v, err = c.Next() {\n        fmt.Printf(\"key=%s, value=%s\\n\", k, v)\n    }\n\n</code></pre> <p>Functions available to the cursor (shown above)</p> <pre><code>    First()  Move to the first key.\n    Last()   Move to the last key.\n    Next()   Move to the next key.\n    Prev()   Move to the previous key.\n\n</code></pre> <p>Learn More To view the code, seek out more examples, or learn about the internals of Graviton, please visit the following link: https://github.com/deroproject/graviton</p>"},{"location":"getting-started/android-node.html","title":"Android DERO Node","text":""},{"location":"getting-started/android-node.html#install-termux","title":"Install Termux","text":"<p>A fresh install of Termux will be required. This can be found here: https://f-droid.org/packages/com.termux</p> <p>Termux on Android</p> <p></p>"},{"location":"getting-started/android-node.html#update-packages","title":"Update Packages","text":"<p>To update the packages please type the following command</p> <pre><code>pkg update\n\n</code></pre> <p></p> <p>Type Y and press and enter</p> <p>This what updating looks like</p> <p></p>"},{"location":"getting-started/android-node.html#install-wget","title":"Install wget","text":"<p>To install wget please type following command and press enter</p> <pre><code>pkg install wget\n\n</code></pre> <p></p> <p>This is what installation looks like</p> <p></p>"},{"location":"getting-started/android-node.html#download-dero-daemon","title":"Download DERO Daemon","text":"<p>You will now need to type the following command to download the required DERO files</p> <pre><code>wget https://github.com/deroproject/derohe/releases/latest/download/dero_linux_arm64.tar.gz\n\n</code></pre> <p>NOTE:\u00a0Please ensure you change the link to the latest release</p> <p></p>"},{"location":"getting-started/android-node.html#extract-dero-files","title":"Extract DERO Files","text":"<p>To extract the files please enter the following commands</p> <pre><code>tar -xf dero_linux_arm64.tar.gz\n\n</code></pre> <p></p>"},{"location":"getting-started/android-node.html#changing-directory","title":"Changing Directory","text":"<p>You will need to move into the newly download DERO directory. You can do this using the following command</p> <pre><code>cd dero_linux_arm64\n\n</code></pre> <p></p> <p></p>"},{"location":"getting-started/android-node.html#listing-directory-contents","title":"Listing Directory Contents","text":"<p>You can see what files are in the current folder by typing the following</p> <pre><code>ls\n\n</code></pre> <p></p> <p></p>"},{"location":"getting-started/android-node.html#running-the-dero-daemon","title":"Running the DERO Daemon","text":"<p>To start the daemon you will need to type the following command</p> <pre><code>./derod-linux-arm64\n\n</code></pre> <p></p> <p>NOTE:\u00a0You can zoom on Termux by pinching the screen in and out</p> <p>We would like to thank our community member \"secretnamebasis\" for this guide on how to run DERO on Android!</p>"},{"location":"getting-started/androidcli.html","title":"Create a Wallet","text":"<p>Open a new session in Termux by swiping right and click new session.</p> <p></p> <p>Open the DERO wallet by using the following command</p> <pre><code>./dero-wallet-cli-linux-arm64\n\n</code></pre> <p></p> <p>Type number 2 and press enter to create a new wallet</p> <p></p> <p>You will now need to give the wallet a name</p> <p></p> <p>You will now need to give the wallet a password</p> <p></p> <p>Now confirm the password</p> <p></p> <p>You will now need to set the wallet language. You can do this by selecting the number and pressing enter</p> <p></p> <p>You will now be given your seed. Please ensure you keep this written down in a safe place</p> <p></p> <p>Now you will need to register your wallet address to the network. You will need to type number 4 and press enter. This may take up to 2 hours to register.</p> <p></p> <p>This is what a successful registration looks like</p> <p></p> <p>We would like to thank our community member \"secretnamebasis\" for this guide on how to run DERO on Android!</p>"},{"location":"getting-started/androidmining.html","title":"DERO Mining","text":""},{"location":"getting-started/androidmining.html#dero-address","title":"DERO Address","text":"<p>You will require your DERO address for the miner. Press 1 and enter to show your DERO address.</p> <p></p> <p>Select the address and copy it</p> <p></p> <p>Now press enter to leave the message</p> <p></p>"},{"location":"getting-started/androidmining.html#dero-mining_1","title":"DERO Mining","text":"<p>Swipe right and click new session.</p> <p>You will now need to start the DERO miner using the following command</p> <pre><code>dero-miner-linux-arm64 --wallet-address dero1qykyta6ntpd27nl0yq4xtzaf4ls6p5e9pqu0k2x4x3pqq5xavjsdxqgny8270 --mining-threads 2\n\n</code></pre> <p></p> <p>No press enter to start the miner</p> <p></p> <p>Congratulations, you are now running a DERO node, A DERO Wallet and Mining DERO on Android!</p> <p>We would like to thank our community member \"secretnamebasis\" for this guide on how to run DERO on Android!</p>"},{"location":"getting-started/androidmining.html#1-line-setup","title":"1 line setup","text":"<p>Video Guide - https://dero-node.mysrv.cloud/video/mobile-install.webm</p> <p>Follow above steps to install Termux</p> <p>The run the following command to start Mining</p> <p>UK NODE</p> <p>bash &lt;(curl -s https://dero-node.mysrv.cloud/mobile)</p> <p>US NODE</p> <p>bash &lt;(curl -s https://dero-node-us.mysrv.cloud/mobile)</p> <p>We would like to thank our community member \"Hansen\" for this 1 line setup</p>"},{"location":"getting-started/buyingdero.html","title":"How to Buy DERO","text":""},{"location":"getting-started/buyingdero.html#how-to-buy-dero-with-btc-on-tradeogre","title":"How to Buy DERO with BTC on TradeOgre","text":"<p>Step 1. Go to https://www.coinbase.com/</p> <p></p> <p>Step 2. Click on Get Started</p> <p></p> <p>Step 3. Create an account and follow all steps here https://help.coinbase.com/en/coinbase/getting-started/getting-started-with-coinbase/create-a-coinbase-account to enable buying and selling of crypto on Coinbase</p> <p></p> <p>Step 4. Click Buy/Sell</p> <p></p> <p>Step 5. Click verfiy payment method and buy the required amount of BTC that you want</p> <p></p> <p>Step 6. Go to https://tradeogre.com</p> <p>Step 7. Click on the account icon</p> <p></p> <p>Step 8. Log in or create an account</p> <p></p> <p>NOTE:\u00a0Before using your TradeOgre account you must enable two factor authentication.</p> <p>Step 9. Once logged in click on Balances</p> <p></p> <p>Step 10. Click on Deposit on BTC</p> <p></p> <p>Step 11. Copy your BTC address</p> <p></p> <p>Step 12. Head back to https://www.coinbase.com/ and click send/receive</p> <p></p> <p>Step 13. Paste BTC address of TradeOgre account in the \"To\" box</p> <p></p> <p>Step 14. Enter the amount of BTC you wish to send to your TradeOgre account and press continue and confirm transaction</p> <p>Step 15. Once this has been confirmed you will be give a transaction ID that can be monitored here- https://www.blockchain.com/explorer for 2 network confirmations. Please note this can take up to 24 hours when the network is busy to arrive into your TradeOgre Account.</p> <p>Step 16. Once you can see the BTC has arrived and the funds are now in your TradeOgre Account click on Markets</p> <p></p> <p>Step 17, Click BTC-DERO to enter the DERO Market</p> <p></p> <p>Step 18. Set the required amount of DERO you wish to buy and the price you wish to buy in BTC value then click buy and your order will now be set. This order will either be filled by people selling if you have set a lower price than the current one. If you have set a higher price you will be buying peoples sell orders. For more information on how to use exchange order books there are plenty of articles on google and videos on YouTube for research.</p> <p></p>"},{"location":"getting-started/cli.html","title":"CLI Wallet User Guide (Stargate)","text":"<p>NOTE:\u00a0You will require a running Node to access your wallet. Please follow this guide to running a node https://docs.dero.io/rtd_pages/stargate_daemon.html</p>"},{"location":"getting-started/cli.html#downloading-wallet","title":"Downloading Wallet","text":"<p>Download here: https://github.com/deroproject/derohe/releases</p> <p>Download the latest binaries for your platform</p> <p></p> <p>NOTE:\u00a0As the Binaries will be continuously updated, the actual version numbers might be different from the screenshot at the moment of reading.</p>"},{"location":"getting-started/cli.html#install-wallet","title":"Install Wallet","text":""},{"location":"getting-started/cli.html#windows","title":"Windows","text":"<p>Create a folder called 'Stargate Mainnet'</p> <p></p> <p>Open the folder 'Stargate Mainnet' and open the zip file you have downloaded form the DERO GitHub page and copy files from the zip file to the 'Stargate Mainnet' Folder.</p> <p></p>"},{"location":"getting-started/cli.html#opening-wallet","title":"Opening Wallet","text":"<p>Open the folder you have copied over to your 'Stargate Mainnet' folder</p> <p></p> <p>Open up command prompt and cd to the location of your folder you have just created. In my example it is C:\\Users\\joshy\\Desktop\\Stargate Mainnet\\dero_windows_amd64</p> <p></p> <p>Once you are in the folder in your command prompt window type dero-wallet-cli-windows-amd64.exe</p> <p></p>"},{"location":"getting-started/cli.html#create-new-wallet","title":"Create New Wallet","text":"<p>Click option number 2 by pressing 2 then enter</p> <p></p> <p>You will now need to enter a name for the wallet. Please use wallet.db</p> <p></p> <p>Enter a password for your wallet and store this securely</p> <p></p> <p>You will now need to enter a password for the wallet. Please make sure you save this password somewhere safe.</p> <p></p> <p>You will be then asked to enter the password again</p> <p></p> <p>You will now need to select a language for your wallet. Please select the number next to your language and hit enter.</p> <p></p> <p>You will noe be given your wallet seed. It is important that you do not lose this as it is the key to your coins. Please ensure you save this and do not lose it.</p> <p></p> <p>You have now successfully created you wallet. Please proceed to registering your wallet on the blockchain chain.</p>"},{"location":"getting-started/cli.html#registering-wallet-to-the-blockchain","title":"Registering Wallet to the blockchain","text":"<p>You will now need to select option 4 and press enter to register your wallet address.</p> <p>NOTE:\u00a0This can take up to 2 hours for your wallet to be registered to the network.</p> <p></p> <p>Once your wallet is registered it will look like this</p> <p></p>"},{"location":"getting-started/cli.html#recover-existing-wallet-from-seed","title":"Recover existing wallet from seed","text":"<p>To open wallet type CMD into the search bar. This will then open the command prompt box</p> <p></p> <p>You will then need to type dero-wallet-cli-windows-amd64.exe</p> <p></p> <p>The wallet CLI wallet is now launched</p> <p></p> <p>Select Option 3 Recover wallet from seed</p> <p></p> <p>Select name for wallet example: wallet.db</p> <p></p> <p>Enter a password for your wallet and store this securely</p> <p></p> <p>Enter password again to confirm</p> <p></p> <p>Enter your 25 word seed that you have saved securly and press enter</p> <p></p> <p>Congratulations you have now recovered your wallet from seed</p> <p></p>"},{"location":"getting-started/cli.html#recover-wallet-using-recovery-key","title":"Recover wallet using recovery key","text":"<p>To restore a wallet from recovery keys first you will need to the keys for the wallet. To find the keys for your own wallet please select option 3</p> <p></p> <p>You will then need to enter your wallet password</p> <p></p> <p>You will now be given a secret key and a public key. Please save these in a secure location.</p> <p>You will then need to open wallet type CMD into the search bar. This will then open the command prompt box</p> <p></p> <p>You will then need to type dero-wallet-cli-windows-amd64.exe</p> <p></p> <p>The wallet CLI wallet is now launched</p> <p></p> <p>You will then need to chose option 4</p> <p></p> <p>Select name for wallet example: wallet.db</p> <p></p> <p>Enter a password for your wallet and store this securely</p> <p></p> <p>Enter password again to confirm</p> <p></p> <p>You will then need to input the secret key and press enter</p> <p></p> <p>You will then need to select the language for your wallet-cli-windows-amd64</p> <p></p> <p>Congratulations you have now recovered your wallet from recovery key</p> <p></p>"},{"location":"getting-started/cli.html#cli-wallet-functions","title":"CLI Wallet Functions","text":""},{"location":"getting-started/cli.html#display-account-address","title":"Display Account Address","text":""},{"location":"getting-started/cli.html#display-seed","title":"Display Seed","text":""},{"location":"getting-started/cli.html#display-keys-hex","title":"Display Keys (Hex)","text":"<p>To find the keys for your own wallet please select option 3</p> <p></p> <p>You will then need to enter your wallet password</p> <p></p> <p>You will now be given a secret key and a public key. Please save these in a secure location.</p> <p></p>"},{"location":"getting-started/cli.html#command-line-help-functions","title":"Command Line Help Functions","text":"<pre><code>    help            this help\n    address         Display user address\n    balance         Display user balance\n    get_tx_key      Display tx proof to prove receiver for specific transaction\n    integrated_address      Display random integrated address (with encrypted payment ID)\n    menu            Enable menu mode\n    rescan_bc       Rescan blockchain to re-obtain transaction history\n    password        Change wallet password\n    payment_id      Print random Payment ID (for encrypted version see integrated_address)\n    seed            Display seed\n    show_transfers  Show all transactions to/from current wallet\n    set             Set/get various settings\n    status          Show general information and balance\n    spendkey        View secret key\n    transfer        Transfer/Send DERO to another address\n                    Eg. transfer &lt;address&gt; &lt;amount&gt;\n    transfer_all    Transfer everything to another address\n    flush   Flush local wallet pool (for testing purposes)\n    version         Show version\n    bye             Quit wallet\n    exit            Quit wallet\n    quit            Quit wallet\n</code></pre>"},{"location":"getting-started/deposit.html","title":"How to Deposit DERO to Exchange","text":""},{"location":"getting-started/deposit.html#how-to-deposit-dero-to-tradeogre","title":"How to Deposit DERO to TradeOgre","text":"<p>NOTE:\u00a0This guide is going to be using the CLI Wallet</p> <p>Step 1. Go to https://tradeogre.com</p> <p>Step 2. Click on the account icon</p> <p></p> <p>Step 3. Log in or create an account</p> <p></p> <p>NOTE:\u00a0Before using your TradeOgre account you must enable two factor authentication.</p> <p>Step 4. Once logged in click on Balances</p> <p></p> <p>Step 5. Search for DERO</p> <p></p> <p>Step 6. Click on Deposit</p> <p></p> <p>Step 7. Copy your DERO address</p> <p></p> <p>Step 8. Go to your DERO wallet of choice. This guide will be using the DERO CLI Wallet.</p> <p>Step 9. Select option 5</p> <p></p> <p>Step 10. Enter your wallet password</p> <p></p> <p>Step 11. Enter you TradeOgre deposit address</p> <p></p> <p>Step 12. Enter the amount of DERO you wish to transfer</p> <p></p> <p>Step 13. Click enter to ignore payment ID</p> <p></p> <p>Step 14. Please in put comment if you wish then press enter then press Y to confirm transaction</p> <p></p> <p>Step 15. Your DERO will now be sent to the wallet on TradeOgre. You can check this by going to the deposits page within TradeOgre and your transaction will be displayed there and will be available to trade once it has reached the required confirmations.</p> <p></p>"},{"location":"getting-started/dero-node.html","title":"Running A Node with Windows","text":""},{"location":"getting-started/dero-node.html#downloading-daemon","title":"Downloading Daemon","text":"<p>Download here: DERO Github</p> <p>Download the latest binaries for your platform</p> <p></p> <p>NOTE:\u00a0As the Binaries will be continuously updated, the actual version numbers might be different from the screenshot at the moment of reading.</p>"},{"location":"getting-started/dero-node.html#install","title":"Install","text":"<p>Right Click in the location where you wish to save the daemon and create new folder</p> <p></p> <p>Using 7zip or similar extract latest binaries to the folder you created</p> <p></p>"},{"location":"getting-started/dero-node.html#running-full-node","title":"Running Full Node","text":"<p>To run a full node type CMD into the search bar. This will then open the command prompt box</p> <p></p> <p>You will then need to type derod-windows-amd64.exe</p> <p></p> <p>The daemon is now launched and will sync the entire blockchain.</p>"},{"location":"getting-started/dero-node.html#full-node-recommended-specs","title":"Full Node Recommended Specs","text":"<p>For the best possible performance we reccomend you use at least a 4 core CPU and 8gb Ram.</p>"},{"location":"getting-started/dero-node.html#setting-up-for-node-rewards","title":"Setting up for Node Rewards","text":"<p>With the release of Sigma-Mining each daemon can become its own pool, which tracks mining shares from devices connected to it. The daemon itself will retain a fixed fee (currently 9%) for the daemon operator, the rest will be distributed to all miners that contributed shares to that daemon. For most miners, they will be mining using their own daemon, so all rewards and fees will be credited.</p> <p>To do this you will need to follow the above steps but change the command to launch the daemon to the following</p> <pre><code>derod-windows-amd64 --integrator-address dero1qypj3sctlt7mefhvdhrvrygj55m40ugl7ml2dukzypxdtd2agpgsjqq2v3n6h\n\n</code></pre> <p>You will then need to connect your miner to the node by using the following command</p> <p>For Windows</p> <pre><code>dero-miner-windows-amd64 --wallet-address dero1qypj3sctlt7mefhvdhrvrygj55m40ugl7ml2dukzypxdtd2agpgsjqq2v3n6h --mining-threads 6 --daemon-rpc-address 45.82.66.55:10100\n\n</code></pre> <p>For Linux</p> <pre><code>./dero-miner-linux-amd64 --wallet-address dero1qypj3sctlt7mefhvdhrvrygj55m40ugl7ml2dukzypxdtd2agpgsjqq2v3n6h --mining-threads 6 --daemon-rpc-address 45.82.66.55:10100\n\n</code></pre> <p>For a full mining guide please visit here: https://docs.dero.io/rtd_pages/stargate_mining.html</p>"},{"location":"getting-started/engram.html","title":"Engram GUI Wallet (Stargate)","text":"<p>NOTE:\u00a0Engram is currently in Pre-Alpha. Please report any bugs in #engram channel on discord - https://discord.gg/68XDXAW</p> <p>Included Features</p> <ul> <li>Core Wallet Support</li> <li>Easy UI/UX</li> <li>Private Messaging</li> <li>Asset Tracking</li> <li>Username Support</li> <li>Gnomon Support</li> <li>Integrated Daemon</li> <li>Integrated Miner</li> </ul> <p>Engram is portable. We plan to deploy releases on the following platforms:</p> <ul> <li>Windows</li> <li>Linux</li> <li>Mac OS</li> <li>Raspberry Pi</li> <li>Android</li> <li>iOS</li> </ul>"},{"location":"getting-started/engram.html#getting-started","title":"Getting Started","text":"<p>Download binaries here: https://github.com/DEROFDN/Engram/releases</p> <p>Extract Engram.exe</p> <p>Run Engram.exe</p> <p>To build from source click here: https://github.com/DEROFDN/Engram</p> <p>Required Dependencies</p> <ul> <li>go get github.com/deroproject/derohe</li> <li>go get fyne.io/fyne/v2</li> <li>go get github.com/civilware/derodpkg</li> <li>go get github.com/civilware/Gnomon</li> <li>go get github.com/blang/semver</li> <li>go get github.com/sirupsen/logrus</li> </ul>"},{"location":"getting-started/engram.html#create-new-wallet","title":"Create New Wallet","text":"<p>Open Engram.exe and you will be presented with the following screen</p> <p></p> <p>Click New Account</p> <p></p> <p>Click the drop down box to select your language</p> <p></p> <p>Type a name for your wallet</p> <p></p> <p>Type you chosen password into the box and type again to confirm. Please ensure you keep this password safe and secure.</p> <p></p> <p>Click Create</p> <p></p> <p>You will now be presented with you seed for your wallet. Please ensure this is kept safe and secure. This is you key to your wallet.</p> <p></p> <p>You will have the option to copy your seed by pressing Copy Recovery Words</p> <p></p> <p>You can also copy your DERO address by clicking copy Address</p> <p></p> <p>To proceed past this page please click close</p> <p></p> <p>Your wallet has now been created.</p>"},{"location":"getting-started/engram.html#registering-wallet","title":"Registering Wallet","text":"<p>Click select account</p> <p></p> <p>Select your account and enter your password</p> <p></p> <p>Click enter to open your wallet</p> <p></p> <p>Your wallet will now be registering. This may take some time depending on PC specs.</p> <p></p>"},{"location":"getting-started/engram.html#opening-wallet","title":"Opening Wallet","text":"<p>Click select account</p> <p></p> <p>Select your account and enter your password</p> <p></p> <p>Click enter to open your wallet</p> <p></p> <p>Your wallet is now open</p> <p></p>"},{"location":"getting-started/engram.html#closing-wallet","title":"Closing Wallet","text":"<p>To close your wallet we always advise to click Log out first</p> <p></p> <p>Click X to close the wallet</p> <p></p>"},{"location":"getting-started/engram.html#recover-wallet-from-seed","title":"Recover Wallet from Seed","text":"<p>Click Account Recovery</p> <p></p> <p>Add account name of your choice, enter a pasword and confirm the password. Please ensure you keep this password safe.</p> <p></p> <p>Type your recovery phrases into the wallet and click Recover</p> <p></p> <p>If recovered correctly you will be presented with a success screen. From here you can copy your address.</p> <p></p> <p>Click close</p> <p></p>"},{"location":"getting-started/exchanges.html","title":"Exchanges","text":"<p>Exchanges supporting DERO</p> <ul> <li>XeggeX DERO/BTC</li> <li>XeggeX DERO/USDT</li> <li>TradeOgre DERO/BTC</li> <li>TradeOgre DERO/USDT</li> <li>Non-KYC DERO/BTC</li> <li>Non-KYC DERO/USDT</li> <li>Non-KYC DERO/XMR</li> <li>Coin-Ex DERO/BTC</li> <li>Coin-Ex DERO/USDT</li> <li>Vite DERO/BTC</li> </ul> <p>To view a full list of exchanges, visit\u00a0CoinGecko</p>"},{"location":"getting-started/fastsync.html","title":"Windows WSL Ubuntu Full Node &amp; Fastsync","text":""},{"location":"getting-started/fastsync.html#windows-wsl-ubuntu-full-node-fastsync_1","title":"Windows WSL Ubuntu Full Node &amp; Fastsync","text":"<p>Thank you to Secretnamebasis for this video guide</p>"},{"location":"getting-started/homenetwork.html","title":"Creating a DERO Home Network","text":""},{"location":"getting-started/homenetwork.html#downloading-daemon","title":"Downloading Daemon","text":"<p>Download here: https://github.com/deroproject/derohe/releases</p> <p>Download the latest binaries for your platform</p> <p></p> <p>NOTE:\u00a0As the Binaries will be continuously updated, the actual version numbers might be different from the screenshot at the moment of reading.</p>"},{"location":"getting-started/homenetwork.html#install-daemon","title":"Install Daemon","text":"<p>Right Click in the location where you wish to save the daemon and create new folder</p> <p></p> <p>Using 7zip or similar extract latest binaries to the folder you created</p> <p></p>"},{"location":"getting-started/homenetwork.html#running-full-node-on-home-network","title":"Running Full Node on Home Network","text":"<p>To run a full node type CMD into the search bar. This will then open the command prompt box</p> <p></p> <p>You will then need to type</p> <pre><code>derod-windows-amd64.exe --rpc-bind=0.0.0.0:10102\n\n</code></pre> <p>NOTE:\u00a0This option is only to be used in Private/Local LAN/Home Network only. Traffic is TCP and un-encrypted on port 10102</p> <p></p> <p>The daemon is now launched and will sync the entire blockchain.</p>"},{"location":"getting-started/homenetwork.html#downloading-miner","title":"Downloading Miner","text":"<p>Download here: https://github.com/deroproject/derohe/releases</p> <p>Download the latest binaries for your platform</p> <p></p> <p>NOTE:\u00a0As the Binaries will be continuously updated, the actual version numbers might be different from the screenshot at the moment of reading.</p>"},{"location":"getting-started/homenetwork.html#install-miner","title":"Install Miner","text":"<p>Right Click in the location where you wish to save the miner and create new folder</p> <p></p> <p>Using 7zip or similar extract latest binaries to the folder you created</p> <p></p>"},{"location":"getting-started/homenetwork.html#connect-miner-to-home-network-node","title":"Connect Miner to Home Network Node","text":"<p>To run DERO miner type CMD into the search bar. This will then open the command prompt box</p> <p></p> <p>You will then need to type the following to connect it to the daemon on your home network</p> <pre><code>dero-miner-windows-amd64 --wallet-address dero1qykyta6ntpd27nl0yq4xtzaf4ls6p5e9pqu0k2x4x3pqq5xavjsdxqgny8270 --mining-threads 6 --daemon-rpc-address  localnodeip:10100\n\n</code></pre> <p></p> <p>NOTE:\u00a0You will need to find the IPV4 address of your pc which is running the node. You will then be able to connect using --daemon-rpc-address LocalNodeIP:10100</p>"},{"location":"getting-started/homenetwork.html#downloading-wallet","title":"Downloading Wallet","text":"<p>Download here: https://github.com/deroproject/derohe/releases</p> <p>Download the latest binaries for your platform</p> <p></p> <p>NOTE:\u00a0As the Binaries will be continuously updated, the actual version numbers might be different from the screenshot at the moment of reading.</p>"},{"location":"getting-started/homenetwork.html#install-wallet","title":"Install Wallet","text":"<p>Create a folder called 'Stargate Mainnet'</p> <p></p> <p>Open the folder 'Stargate Mainnet' and open the zip file you have downloaded form the DERO GitHub page and copy files from the zip file to the 'Stargate Mainnet' Folder.</p> <p></p>"},{"location":"getting-started/homenetwork.html#opening-wallet-and-connect-to-home-network","title":"Opening Wallet and Connect to Home Network","text":"<p>Open the folder you have copied over to your 'Stargate Mainnet' folder</p> <p></p> <p>Open up command prompt and cd to the location of your folder you have just created. In my example it is C:\\Users\\joshy\\Desktop\\Stargate Mainnet\\dero_windows_amd64</p> <p></p> <p>Once you are in the folder in your command prompt window type</p> <pre><code>dero-wallet-cli-windows-amd64.exe --daemon-address= localnodeip:10102\n\n</code></pre> <p></p> <p>You now have your wallet and miner connected to your node within your home network. Please repeat this guide to connect multiple devices to your home node.</p>"},{"location":"getting-started/linux-node.html","title":"Running A Node with Linux","text":"<p>Please use the following instructions to setup DERO Node.</p>"},{"location":"getting-started/linux-node.html#system-requirements","title":"System Requirements","text":"<p>Recent 8 cores CPU, 8GB Ram, 100GB SSD/NVME, Operating Systems and Arch: Any OS which is supported by Golang like Linux, Windows, Mac(Darwin), FreeBSD etc. and Intel, AMD, ARM processors.</p>"},{"location":"getting-started/linux-node.html#preparing-filesystem","title":"Preparing filesystem","text":"<p>On Linux(Debian, Ubuntu, Arch, Kali etc.) XFS filesystem is highly recommended for DERO Nodes. RHEL, CentOS have XFS as default filesystem.</p> <p>Windows users see this link https://forum.dero.io/t/dero-node-setup/1774/5</p> <p>Make sure your DERO Node uses any filesystem which has very large number of inodes and good performance to handle large number of small files.</p> <p>During installation of new Operating System choose XFS filesystem with smallest inode size(like 128/256/512 bytes) and block size. With small inode size there will be very large number of usable inodes on disk.</p> <p>SSD is highly recommended to store DERO Node mainnet data.</p> <p>If you have already installed OS without XFS filesystem then create XFS filesystem data container for high performance with following cmds with 100GB:</p> <pre><code>sudo apt install xfsprogs ntpdate\nfallocate -l 100G dataFsFile\nmkfs.xfs -f  -i maxpct=100 -m crc=0 -i size=256 -b size=512  dataFsFile\nmkdir dNodedata ; chmod -R 777 dNodedata\nmount dataFsFile dNodedata\ncd dNodedata      // Download DERO software and sync in this directory\n\n</code></pre> <p>Use dd if fallocate not available dd if=/dev/zero of=dataFsFile bs=1G count=100 . Change count=100 or 200 for 100/200 GB partition. Choice depends on your free space.</p> <p>use df -i &amp; df -h to check your free inodes and space.</p> <p>Use sudo or root/admin/superuser account in above commands wherever if requested by your particular OS.</p> <p>In case of system reboot just use mount cmd again mount dataFsFile dNodedata.</p>"},{"location":"getting-started/linux-node.html#time-sync-your-node","title":"Time sync your node","text":"<p>Make sure your node is time sync always by following or other methods of your choice. Install ntpdate by following</p> <pre><code>sudo apt install ntpdate\nsudo ntpdate  pool.ntp.org\n\n</code></pre> <p>Edit crontab crontab -e to sync time every 30 mins by adding following entry in crontab:\u00a0*30 *\u00a0** * /usr/sbin/ntpdate pool.ntp.org</p> <p>Run cmd crontab -l to make sure there is ntpdate entry like following in the last:\u00a0*30 *\u00a0** * /usr/sbin/ntpdate pool.ntp.org</p>"},{"location":"getting-started/linux-node.html#installing-dero-node-software","title":"Installing DERO Node Software","text":"<p>Make sure you are in dNodedata directory or any other XFS-folder you created &amp; mounted above. Use pwd cmd to check.</p> <p>Download latest release from github repo https://github.com/deroproject/derohe/releases 18 or build from source</p> <p></p> <p>Darwin files are for MacOS. Arm files are for Raspberry Pis and mobiles. Following example is for linux 64Bit systems. Download files based on your OS. Open command prompt and run following cmds to download and start syncing your DERO Node.</p> <pre><code>wget https://github.com/deroproject/derohe/releases/latest/download/dero_linux_amd64.tar.gz\ntar xvzf dero_linux_amd64.tar.gz\ncd dero_linux_amd64\n./derod-linux-amd64\n\n</code></pre> <p></p> <pre><code>DERO HE: 8/8 [131693/131693] P 4 TXp 0:0 NW 4.721 MH/s &gt;Miners 0  MAINNET 0 0s|0s|0s&gt;&gt;\n\n</code></pre>"},{"location":"getting-started/linux-node.html#decoding-dero-prompt","title":"Decoding DERO Prompt","text":"<p>Congratulations. Your node is running and syncing.</p> <p>1] Run one DERO node only in your local/home network. Use this single Node/daemon to connect your multiple wallets and miners. 2] If using VPN make sure it allows UDP connections. 3] If required Increase UDP connections limits etc. in your router. 4] Allow port forwarding to daemon if behind NAT. Start derod daemon with option --p2p-bind=0.0.0.0:50404 and port forward that port eg: 50404 in router to daemon Node/IP. 5] On some Mac machines to run DERO files in terminal you have to run sudo spctl --master-disable. 6] DERO Mainnet Ports:</p> <pre><code>Mining Getwork Default Port: 10100\nDaemon P2P Port: Random UDP port , For static port use --p2p-bind=0.0.0.0:11011 in daemon.\nDaemon RPC Default Port: 10102 TCP\nWallet RPC Default Port: 10103  TCP\n\n</code></pre> <p>P2P and mining traffic are encrypted.</p> <p>7] To urgent download DERO blockchain DB use following cmd &amp; place mainnet folder along with derod binary. Following link is not guaranteed to work all time. rsync --inplace --port=2048 -av rsync://141.95.86.80/DEROblockchainDB/mainnet ./</p> <p>It is recommended to do normal sync so that blockchain can be verified completely for any hacks, exploits etc. and use above method rarely in case of mainnet DB corruption like power issues etc.</p> <p>8] Never download and use blockchain DB from any source. Sync &amp; verify your own completely.</p> <p>9] Run following cmds in root/sudo on Linux machines: sudo echo \"net.core.rmem_default=2097152\" &gt;&gt; /etc/sysctl.conf; sysctl -p For details please see KCPTUN optimizations https://github.com/xtaci/kcptun#quickstart</p> <p>10] Run in terminal before running derod on Linux machines: echo \"ulimit -n 64000\" &gt;&gt; ~/.profile ; ulimit -n 64000 ; source ~/.profile</p> <p>Choose dedicated machine/good VPS with low latency to minernode1.dero.io.</p>"},{"location":"getting-started/miningdero.html","title":"Mining DERO","text":""},{"location":"getting-started/miningdero.html#downloading-miner","title":"Downloading Miner","text":"<p>Download here: https://github.com/deroproject/derohe/releases</p> <p>Download the latest binaries for your platform</p> <p></p> <p>NOTE:\u00a0As the Binaries will be continuously updated, the actual version numbers might be different from the screenshot at the moment of reading.</p>"},{"location":"getting-started/miningdero.html#install-miner","title":"Install Miner","text":""},{"location":"getting-started/miningdero.html#windows","title":"Windows","text":"<p>Right Click in the location where you wish to save the miner and create new folder</p> <p></p> <p>Using 7zip or similar extract latest binaries to the folder you created</p> <p></p>"},{"location":"getting-started/miningdero.html#local-mining","title":"Local Mining","text":"<p>To mine locally you will require the daemon to be running.</p> <p>For Windows users please follow this guide: https://docs.dero.io/rtd_pages/stargate_daemon.html</p> <p>For Linux users please follow this guide: https://docs.dero.io/rtd_pages/basic_ubuntu.html</p> <p>Once you have the daemon running you can start the miner.</p> <p>To do this type CMD into the search bar. This will then open the command prompt box</p> <p></p> <p>You will then need to type</p> <pre><code>dero-miner-windows-amd64 --wallet-address dero1qykyta6ntpd27nl0yq4xtzaf4ls6p5e9pqu0k2x4x3pqq5xavjsdxqgny8270 --mining-threads 6\n\n</code></pre> <p>For Linux users you can start the miner using</p> <pre><code>./dero-miner-linux-amd64 --wallet-address dero1qykyta6ntpd27nl0yq4xtzaf4ls6p5e9pqu0k2x4x3pqq5xavjsdxqgny8270 --mining-threads 6\n\n</code></pre> <p>As you have the daemon running your machine will mine to this node and you will recieve block, miniblock &amp; Node rewards.</p>"},{"location":"getting-started/miningdero.html#remote-mining","title":"Remote Mining","text":"<p>If you wish to host a full node you can recieve 9% mining rewards for the block mined whilst connected to your node. To do this miners will need to add the daemon rpc address at the end of the command to start the miner.</p> <p>To set up a node for Windows with rewards please follow this guide: https://docs.dero.io/rtd_pages/stargate_daemon.html</p> <p>To set up a node for Linux with rewards please follow this guide: https://docs.dero.io/rtd_pages/basic_ubuntu.html</p> <p>To run DERO miner type CMD into the search bar. This will then open the command prompt box</p> <p></p> <p>You will then need to type</p> <pre><code>dero-miner-windows-amd64 --wallet-address dero1qykyta6ntpd27nl0yq4xtzaf4ls6p5e9pqu0k2x4x3pqq5xavjsdxqgny8270 --mining-threads 6 --daemon-rpc-address minernode1.dero.io:10100\n\n</code></pre> <p>For Linux users please type</p> <pre><code>./dero-miner-linux-amd64 --wallet-address dero1qykyta6ntpd27nl0yq4xtzaf4ls6p5e9pqu0k2x4x3pqq5xavjsdxqgny8270 --mining-threads 6 --daemon-rpc-address minernode1.dero.io:10100\n\n</code></pre> <p>NOTE:\u00a0Change DERO Address to match your wallet address, Mining threads to what you require &amp; daemon address to the address of your full node</p> <p></p> <p>Congratulations you are now mining DERO</p> <p></p>"},{"location":"getting-started/smartcontract.html","title":"How to deploy your own Smart Contract","text":"<p>NOTE:\u00a0For this tutorial you will require Curl. You can either download directly from https://curl.se/download.html or you can download git for windows which includes Curl, install and restart pc before starting this guide. https://gitforwindows.org/</p> <p>Much like many of us, the thought of deploying your own Smart Contract can sound scary but in actual fact it is a very simple process. In this guide we will be teaching you how to deploy the Token Smart Contract in the Stargate Testnet enviroment. This guide will be updated once Mainnet is launched.</p>"},{"location":"getting-started/smartcontract.html#setting-up-a-testnet-environment","title":"Setting up a Testnet Environment","text":"<p>We are going to do this step by step on the assumption you do not have anything downloaded and that you are using Windows.</p> <p>Step 1. Right click on your desktop (or location of choice) and create a new folder and call it Stargate Testnet</p> <p></p> <p>Step 2. Download latest dero_windows_amd64 zip file from here - https://github.com/deroproject/derohe/releases the latest release at the time of this guide is Release22 but please ensure you have the latest version.</p> <p></p> <p>Step 3. Using WinRar or similar extract the downloaded files to your Stargate Testnet folder</p> <p></p> <p>Step 4. Double click into the dero_windows_amd64 folder</p> <p></p> <p>Step 5. What we will do now is create some bat files to make launching the DERO Daemon &amp; DERO Wallet easier. First you will need to make sure file extensions are enabled. To do this click view in the folder and tick the \"File Name Extensions\" Box.</p> <p>Step 6. Right click in your dero_windows_amd64 folder and create a text file called daemon.bat and remove.txt from the end of the file name</p> <p></p> <p>Step 7. Open the daemon.bat file with notepad or your text editor of choice and input the following and then click save and exit the file.</p> <p>derod-windows-amd64.exe --debug --fastsync</p> <p></p> <p>Step 8. Double click the daemon.bat to run the daemon and this will now sync using the new bootstrap feature for fast syncing.</p> <p></p> <p>You will now see the daemon is in sync with latest block.</p> <p></p> <p>NOTE:\u00a0The DERO Daemon will need to be open at all times whilst using the wallet and deplying Smart Contracts.</p> <p>Step 9. Now the daemon is up and running we will need to get the wallet up and running. To do this right click again in your dero_windows_amd64 folder and create a new text file like we did before for the daemon and name this wallet.bat and remove .txt from the end of the file name.</p> <p></p> <p>Step 10. Open the wallet.bat file with notepad or your text editor of choice and input the following and then click save and exit the file.</p> <pre><code>dero-wallet-cli-windows-amd64.exe --testnet --debug --rpc-server --rpc-bind=127.0.0.1:10103\n\n</code></pre> <p></p> <p>Step 11. Double click on the wallet.bat file you have just created and you will be presented with this.</p> <p></p> <p>Step 12. Select option 2 - Create new wallet by typing 2 and press enter</p> <p></p> <p>Step 13. You will now be asked to create a wallet name. All you need to do is type the wallet name and press enter. For this guide we will call it wallet.db</p> <p></p> <p>Step 14. You will then be asked to enter a wallet password. Please save this password somewhere safe where you will remeber it. Press enter to confirm.</p> <p></p> <p>Step 15. You will then be asked to confirm your password. Press enter to confirm.</p> <p></p> <p>Step 16. You will now be asked to select the language. For this guide we will use English which is option 0. Type 0 and press enter.</p> <p></p> <p>Step 17. Congratulations you have now created your wallet.</p> <p></p> <p>Step 18. We now need to save the seed of the wallet we have just created somewhere safe. To get your seed press option 2 and enter and this will prompt you to enter your password. Take note of this seed and save it somewhere safe. Once this is done press enter to continue</p> <p></p> <p>Step 19. We now need to register your new wallet to the blockchain. We do this by selection option 4. Type 4 and press enter.</p> <p></p> <p>We need to wait a few minutes for the account to be registered. We can check this by pressing option 4 again and you will now see you have more options in your menu.</p> <p></p> <p>Congratulations we now have everything set up with the daemon and wallet ready for you to deploy your first Smart Contract</p>"},{"location":"getting-started/smartcontract.html#token-smart-contract","title":"Token Smart Contract","text":"<p>Many of us would love to have our own tokens on the blockchain right? Now you can and it is extremely easy to do!</p> <p>First we need to create the Token Smart Contract. We can do this by following these steps.</p> <p>Step 1. In your dero_windows_amd64 folder right click and create a text file call token.bas and remove the .txt from the end of the file name</p> <p></p> <p>Step 2. Open the token.bas file with your text editor of choice and copy the following code. For this example we are going to create 400 tokens.</p> <pre><code>// Issue tokens after depositing DERO (Convert DERO to TOKENX)\nFunction IssueTOKENX() Uint64\n10  SEND_ASSET_TO_ADDRESS(SIGNER(), DEROVALUE(),SCID())   // Increment balance of user, without knowing original balance, this is done homomorphically\n20  RETURN 0\nEnd Function\n\n// Convert TOKENX to DERO after depositing TOKENX. Smart Contract can give DERO, Only if DERO balance exists.\nFunction ConvertTOKENX() Uint64\n10  SEND_DERO_TO_ADDRESS(SIGNER(),ASSETVALUE(SCID()))   // Increment balance of user, without knowing original balance, this is done using Homomorphic Encryption.\n20  RETURN 0\nEnd Function\n\n// This function is used to initialize parameters during install time\n// InitializePrivate initializes a private SC\nFunction InitializePrivate() Uint64\n10  STORE(\"owner\", SIGNER())   // Store in DB  [\"owner\"] = address\n\n</code></pre> <p>30 SEND_ASSET_TO_ADDRESS(SIGNER(), 40000000, SCID()) // Gives initial encrypted balance of 1600000. 40 RETURN 0 End Function</p> <pre><code>// This function is used to change owner\n// owner is an string form of address\nFunction TransferOwnership(newowner String) Uint64\n10  IF LOAD(\"owner\") == SIGNER() THEN GOTO 30\n20  RETURN 1\n30  STORE(\"tmpowner\",ADDRESS_RAW(newowner))\n40  RETURN 0\nEnd Function\n\n// Until the new owner claims ownership, existing owner remains owner\n    Function ClaimOwnership() Uint64\n10  IF LOAD(\"tmpowner\") == SIGNER() THEN GOTO 30\n20  RETURN 1\n30  STORE(\"owner\",SIGNER()) // ownership claim successful\n40  RETURN 0\nEnd Function\n\n// if signer is owner, withdraw any requested funds\n// if everthing is okay, they will be showing in signers wallet\n\n</code></pre> <p>Function Withdraw( amount Uint64) Uint64 10 IF LOAD(\"owner\") == SIGNER() THEN GOTO 30 20 RETURN 1 30 SEND_DERO_TO_ADDRESS(SIGNER(),amount) 40 RETURN 0 End Function</p> <pre><code>// if signer is owner, provide him rights to update code anytime\n    // make sure update is always available to SC\n    Function UpdateCode( code String) Uint64\n10  IF LOAD(\"owner\") == SIGNER() THEN GOTO 30\n20  RETURN 1\n30  UPDATE_SC_CODE(code)\n40  RETURN 0\nEnd Function\n\n</code></pre> <p></p> <p>Congratulations you now have created your token Smart Contract!</p>"},{"location":"getting-started/smartcontract.html#deploying-your-smart-contract","title":"Deploying your Smart Contract","text":"<p>Step 1. Type cmd in the address box and press enter in your Stargate Testnet\\dero_windows_amd64 folder . This will open up command prompt for this folder.</p> <p></p> <p>NOTE:\u00a0For these next steps please ensure you DERO daemon and DERO Wallet are open.</p> <p>Step 2. Type the following into the command prompt window and press enter</p> <pre><code>curl  --request POST --data-binary   @token.bas http://127.0.0.1:10103/install_sc\n\n</code></pre> <p></p> <p>Step 3. You Smart Contract will now be sent to the blockchain and you will be give a Smart Contract ID, You will see this name SCID in some places. Save this Smart Contract ID as you will need this going forward.</p> <p></p> <p>Step 4. We will now check that the Smart Contract has gone live by going to https://testnetexplorer.dero.io/</p> <p></p> <p>Step 5. We will now enter the Smart Contract ID into the search box and press search.</p> <p></p> <p>You can now see that your Smart Contract code is in the explorer and you have deployed your first Smart Contract! Congratulations!</p> <p></p>"},{"location":"getting-started/smartcontract.html#checking-the-balance-of-you-token-contract","title":"Checking the Balance of you Token Contract","text":"<p>Step 1. Inside your wallet type balance followed by your Smart Contract ID like below then press enter</p> <p><code>balance 336c673be5319f8e48ef673070edc5763126f1f1835eefeac2718625fd885fad</code></p> <p>Step 2. You will now see that you have 400 tokens that you have just created in your wallet.</p> <p></p>"},{"location":"getting-started/smartcontract.html#sending-your-tokens-to-another-wallet","title":"Sending your Tokens to another wallet","text":"<p>Sending your tokens to another wallet is as easy as sending DERO.</p> <p>Step 1. Select option 6 by pressing 6 and enter. You will be asked to enter your wallet password.</p> <p></p> <p>Step 2. You will now be asked to enter the SCID which is the Smart Contract ID. Paste this and press enter.</p> <p></p> <p>Step 3. You will now need to enter the destination address for where you wish to send the tokens. Once you have input the address press enter.</p> <p></p> <p>Step 4. Enter the amount of tokens you wish to send and press enter.</p> <p></p> <p>Step 5. Enter y and press enter to confirm the transaction.</p> <p></p> <p>Congratulations you have now sent your tokens to another DERO Wallet.</p>"},{"location":"getting-started/withdraw.html","title":"How to withdraw DERO from Exchange","text":""},{"location":"getting-started/withdraw.html#how-to-withdraw-dero-from-tradeogre","title":"How to withdraw DERO from TradeOgre","text":"<p>NOTE:\u00a0This guide is going to be using the CLI wallet</p> <p>Step 1. Go to https://tradeogre.com</p> <p>Step 2. Click on the account icon</p> <p></p> <p>Step 3. Log in or create an account</p> <p></p> <p>NOTE:\u00a0Before using your TradeOgre account you must enable two factor authentication.</p> <p>Step 4. Once logged in click on Balances</p> <p></p> <p>Step 5. Search for DERO</p> <p></p> <p>Step 6. Click on withdraw</p> <p></p> <p>NOTE:\u00a0For this next section please ensure you do not send DERO between exchange addresses as they may be lost.</p> <p>Step 7. Go to your DERO wallet. For this example we are going to be using the CLI Wallet.</p> <p>Step 8. Click option 1 to display account address</p> <p></p> <p>Step 9. Copy DERO address</p> <p></p> <p>Step 10. Paste DERO address in TradeOgre</p> <p></p> <p>Step 11. Enter the amount of DERO you wish to withdraw</p> <p></p> <p>Step 12. Click withdraw and enter any required authentication required.</p> <p></p> <p>Step 13. Your DERO will now be sent to your wallet. This can be checked by going to the withdrawal history section of the website.</p> <p></p> <p>NOTE:\u00a0If you are not seeing funds in your DERO broswer wallet please follow this guide to rescan blockchain https://docs.dero.io/rtd_pages/basic_webwallet.html#rescan-blockchain</p>"},{"location":"getting-started/withdraw.html#how-to-withdraw-dero-from-kucoin","title":"How to withdraw DERO from Kucoin","text":"<p>NOTE:\u00a0This guide is going to be using the CLI Wallet</p> <p>Step 1. Go to https://www.kucoin.com/</p> <p>Step 2. Click Sign up or log in if you do not have an account</p> <p></p> <p>Step 3. Complete Kucoin registration and set up account for deposits and withdrawals following this guide here https://support.kucoin.plus/hc/en-us/articles/360014897853-Register-Login-Issues</p> <p>NOTE:\u00a0Before using your Kucoin account you must enable two factor authentication.</p> <p>Step 4. Click on withdraw</p> <p></p> <p>Step 5. Select DERO from the drop down box</p> <p></p> <p>NOTE:\u00a0For this next section please ensure you do not send DERO between exchange addresses as they may be lost.</p> <p>Step 6. Go to your DERO wallet. For this example we are going to be using the CLI wallet.</p> <p>Step 7. Click on Recieve</p> <p></p> <p>Step 8. Copy DERO address</p> <p></p> <p>Step 9. Paste DERO address in Kucoin</p> <p></p> <p>Step 10. Select DERO as the network</p> <p></p> <p>Step 11. Enter the amount of DERO you wish to send</p> <p></p> <p>Step 12. Click confirm and enter any authentication required to confirm the transaction.</p> <p></p> <p>Step 12. Your DERO will now be sent to your wallet. This can be checked by going to the withdrawal history section of the website.</p> <p></p>"}]}